Gadgets information
============================================================
0x000000000044046c : adc ah, bl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004bf9cd : adc al, 0 ; add al, dh ; sub esi, ebp ; jmp qword ptr [rsi]
0x00000000004297ef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429859 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c3b5 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004c2318 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x3d ; add byte ptr [rax], al ; push rax ; ret
0x00000000004c0c00 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; add byte ptr es:[rax], al ; retf
0x000000000046af5a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000423e68 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042fdd5 : adc al, 0x13 ; jmp rdx
0x000000000042e3c5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043ffea : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000409224 : adc al, 0x24 ; call 0x405d14
0x000000000049c0aa : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040ea88 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000419567 : adc al, 0x41 ; pop rsp ; ret
0x000000000043bbd0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043f5e8 : adc al, 0x51 ; add byte ptr [rax], al ; ret
0x000000000041fe6a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043f736 : adc al, 0x89 ; ret 0xdaf7
0x0000000000464efe : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042ac80 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004293ae : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042fdd1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004216b7 : adc al, 0xa ; jmp r10
0x000000000042e533 : adc al, 0xa ; sub eax, edx ; ret
0x000000000046af58 : adc al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f518 : adc al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f578 : adc al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f5d8 : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000043f7c8 : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000401679 : adc al, 0xdd ; fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x0000000000422b91 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049c48a : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a3b81 : adc al, 0xf9 ; call qword ptr [rax + 0x10fff913]
0x00000000004a3b7d : adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a3d7d : adc al, 0xf9 ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a3d79 : adc al, 0xf9 ; jmp qword ptr [rax]
0x00000000004a3bfd : adc al, 0xf9 ; jmp rdx
0x0000000000476a42 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004919ce : adc al, 9 ; ret 0xa074
0x0000000000429997 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429a01 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000492ebe : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049688f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040d807 : adc al, ch ; push rbx ; ret
0x0000000000443120 : adc al, dl ; xor byte ptr [rax + rax + 0x48], al ; mov dword ptr [rax + 8], edx ; ret
0x00000000004a38a4 : adc bh, ah ; clc ; call qword ptr [rax]
0x000000000047fe6e : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004a3b91 : adc bh, cl ; call qword ptr [rax + 0x10fff911]
0x00000000004a3b8d : adc bh, cl ; call qword ptr [rax]
0x00000000004a3d8d : adc bh, cl ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3d89 : adc bh, cl ; jmp qword ptr [rax]
0x00000000004a3c0d : adc bh, cl ; jmp rdx
0x00000000004c58f9 : adc bh, dl ; jmp rdx
0x00000000004a38d4 : adc bl, 0xf8 ; call rax
0x00000000004a37b8 : adc bl, ah ; clc ; push rax ; in al, -8 ; call rax
0x0000000000426e55 : adc bl, ch ; call 0xffffffffc412f7aa
0x0000000000423925 : adc bl, ch ; call 0xffffffffc43ac27a
0x0000000000478ff2 : adc bl, ch ; jno 0x479048 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483a94 : adc bl, ch ; ret 0x8348
0x00000000004a35c8 : adc bl, cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x0000000000426844 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b506 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b577 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b4d7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b505 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000474770 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413a76 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044fe6d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x00000000004509cb : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044fe66 : adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000047876f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046aab9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46aa8d
0x000000000041747c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000004717b4 : adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000418d5e : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x0000000000440ac2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000411033 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000478bec : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a722 : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000043b32a : adc byte ptr [rax + 0x29], cl ; retf -0x72b4
0x000000000044fe67 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000419123 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000041d61d : adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x00000000004196b5 : adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000419a77 : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d8d6 : adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x000000000042678a : adc byte ptr [rax + 0x43], bl ; add bl, dh ; ret
0x0000000000478770 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412f97 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048853a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000047968e : adc byte ptr [rax + 1], cl ; ret
0x000000000046aa88 : adc byte ptr [rax + 1], cl ; retf -0x7cb8
0x000000000046aa87 : adc byte ptr [rax + 1], r9b ; retf -0x7cb8
0x00000000004a3734 : adc byte ptr [rax + rdi*8 - 0x7431f01], bh ; jmp rax
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000474ae4 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x0000000000470cf1 : adc byte ptr [rax - 0x73], cl ; int1 ; or byte ptr [rax + 0x39], cl ; retf -0x7bf1
0x000000000042c3c4 : adc byte ptr [rax - 0x73], cl ; jg 0x42c3e1 ; jne 0x42c3b8 ; ret
0x000000000046b075 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004708dc : adc byte ptr [rax - 0x73], cl ; push rsp ; retf -0x14f8
0x000000000046b074 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000440732 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004476e8 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044804b : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042c7da : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000409a17 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405d17
0x00000000004092c0 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405d18
0x0000000000463c87 : adc byte ptr [rax - 0x77], cl ; jo 0x463ca5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464fbc : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046aaba : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46aa8c
0x0000000000463c47 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e423 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000041747d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000485dbf : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a464 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041cb69 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000048ac0d : adc byte ptr [rax - 0x77], cl ; retf
0x000000000047d6b9 : adc byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000432abf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000438277 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004382b3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400bea : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420d73 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fd4b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000479bc9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418d5f : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x000000000046d08c : adc byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x000000000042af58 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x0000000000422d80 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x0000000000429442 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000422be0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000042b24c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429ba1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e5aa : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004242e8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004363c8 : adc byte ptr [rax], al ; add cl, ch ; retf -2
0x000000000048cac0 : adc byte ptr [rax], al ; jne 0x48ca91 ; jmp 0x48ca99
0x000000000040f3f0 : adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x000000000041aac2 : adc byte ptr [rax], ch ; add cl, bpl ; retf -2
0x00000000004bd3b1 : adc byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004194fa : adc byte ptr [rbp + 0x39], cl ; ret
0x00000000004506bc : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000478b95 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000426968 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042c3c8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00000000004405a7 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400cc6 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049cfac : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041ec4b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000410723 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c132a : adc byte ptr [rbx + 0xa9b0202], al ; ret
0x00000000004c0d42 : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413a77 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000416f32 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047a897 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47a8b1 ; ret
0x000000000043e25a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000040724e : adc byte ptr [rbx - 0x7bf0fd06], al ; retf
0x0000000000442c06 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x442c1f ; pop rbp ; pop r12 ; ret
0x00000000004a3ef8 : adc byte ptr [rbx - 7], bh ; jmp qword ptr [rax]
0x00000000004a355c : adc byte ptr [rbx - 8], dl ; jmp qword ptr [rax]
0x000000000043ef4d : adc byte ptr [rbx], al ; add cl, ch ; retf -2
0x0000000000419752 : adc byte ptr [rbx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a3b88 : adc byte ptr [rbx], dl ; stc ; call qword ptr [rax + 0x10fff912]
0x0000000000411034 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044c914 : adc byte ptr [rcx + 0x39], cl ; ret
0x0000000000479bcd : adc byte ptr [rcx + 0x39], cl ; retf
0x0000000000450867 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041fb93 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000462510 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3b80 : adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 0x10fff913]
0x000000000049ef18 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d40c : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000004194a7 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422c13 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000494577 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000043e9d4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416f35 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000420579 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a3b98 : adc byte ptr [rcx], dl ; stc ; call qword ptr [rax + 0x10fff910]
0x000000000043eabf : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004c3a30 : adc byte ptr [rdi - 8], dh ; call qword ptr [rcx]
0x0000000000417c88 : adc byte ptr [rdi], ah ; add byte ptr [rcx + 0xf], cl ; retf -0xcf
0x000000000043bde3 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004979eb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004964ef : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004976ef : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496def : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004970ef : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004967e7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496a94 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497694 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497994 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497094 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496d94 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000049678c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049581d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049563d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496015 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494f35 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495e35 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044fe6e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000004509cc : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000004503ec : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004c7590 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x00000000004302c9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000048609a : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x0000000000492ebd : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042f22b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a3b90 : adc byte ptr [rdx], dl ; stc ; call qword ptr [rax + 0x10fff911]
0x000000000042f0da : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042e6d5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ead5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaa9
0x000000000042eb53 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb27
0x000000000042efe5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42efb9
0x000000000042f063 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f037
0x000000000042ead0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaae
0x000000000042eb4e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb2c
0x000000000042efe0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efbe
0x000000000042f05e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f03c
0x0000000000421805 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272bb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004bde40 : adc byte ptr [rsi - 3], ah ; push rax ; std ; call rax
0x00000000004a3ea0 : adc byte ptr [rsi - 7], dh ; jmp qword ptr [rax]
0x000000000049899d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c5a00 : adc byte ptr [rsi], 0xfa ; jmp qword ptr [rax]
0x00000000004919ff : adc byte ptr [rsp - 4], al ; ret
0x0000000000491a45 : adc byte ptr [rsp - 8], al ; ret
0x0000000000496a97 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a379c : adc ch, ah ; clc ; push rax ; out 0xf8, al ; jmp rax
0x00000000004bf030 : adc ch, bh ; hlt ; call qword ptr [rax]
0x00000000004a37d4 : adc cl, ah ; clc ; push rax ; loop 0x4a37da ; call rax
0x00000000004a3b9d : adc cl, bh ; call qword ptr [rax]
0x00000000004a3d9d : adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3d99 : adc cl, bh ; jmp qword ptr [rax]
0x00000000004a3c1d : adc cl, bh ; jmp rdx
0x0000000000452a6f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000423915 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000452a72 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000004750ca : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b68c : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000479bc1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000464864 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004a38a8 : adc cl, ch ; clc ; call qword ptr [rax]
0x00000000004a3840 : adc dh, ah ; clc ; jmp rax
0x00000000004268d0 : adc dh, bh ; ret
0x000000000041b521 : adc dh, dh ; ret 0xf0f
0x00000000004a3858 : adc dl, ah ; clc ; push rax ; jrcxz 0x4a385e ; call rax
0x000000000048d1b3 : adc dword ptr [rax + 0x39], ecx ; retf -0x7bf1
0x0000000000479533 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004125d2 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044f8c5 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000411025 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000479c0c : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044f99c : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000041894e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000416edc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x0000000000463545 : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047617a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042b24b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000040f3ee : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x0000000000429b37 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b14f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000424168 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000435c47 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004358e2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004358a6 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000469a4f : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402ff4 : adc dword ptr [rdi + 0x6cbfe0], edi ; call rax
0x0000000000435da9 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043deac : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043dfdf : adc dword ptr [rsi + 3], edx ; ret
0x000000000043e07c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043de7e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000429b36 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3b79 : adc eax, 0x1490fff9 ; stc ; call qword ptr [rax]
0x00000000004a3d75 : adc eax, 0x14b0fff9 ; stc ; jmp qword ptr [rax]
0x000000000044f8a6 : adc eax, 0x27c18d ; je 0x44f8b8 ; ret
0x0000000000444527 : adc eax, 0x285a6c ; pop rbx ; ret
0x00000000004b98e4 : adc eax, 0x2f3ffae1 ; retf -0x4ae6
0x000000000047139d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x00000000004712d9 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004296c1 : adc eax, 0x83480000 ; ret 0xe910
0x00000000004964e9 : adc eax, 0x83490000 ; jmp 0x496509
0x000000000046e5a9 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000496590 : adc eax, 0x894d0000 ; retf
0x000000000046686a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004589d7 : adc eax, 0xe90000af ; ret
0x000000000042afae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494d59 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423fe8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049678f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a4f9 : adc eax, eax ; ret
0x000000000047a636 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b9585 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046b07c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000049bcf2 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044230f : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000415f4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000447681 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044cbe4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452d31 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x000000000040123d : adc ecx, dword ptr [rdx] ; mov eax, 2 ; syscall
0x00000000004a3b99 : adc ecx, edi ; call qword ptr [rax + 0x10fff910]
0x00000000004a3b95 : adc ecx, edi ; call qword ptr [rax]
0x00000000004a3d95 : adc ecx, edi ; jmp qword ptr [rax + 0x20fff910]
0x00000000004a3d91 : adc ecx, edi ; jmp qword ptr [rax]
0x00000000004a3c15 : adc ecx, edi ; jmp rdx
0x00000000004c72b9 : adc edi, ebx ; jmp qword ptr [rdx]
0x00000000004a3b89 : adc edi, ecx ; call qword ptr [rax + 0x10fff912]
0x00000000004a3b85 : adc edi, ecx ; call qword ptr [rax]
0x00000000004a3d85 : adc edi, ecx ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a3d81 : adc edi, ecx ; jmp qword ptr [rax]
0x00000000004a3c05 : adc edi, ecx ; jmp rdx
0x00000000004be410 : adc edx, esi ; std ; jmp rax
0x00000000004baa9e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049cfec : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043f527 : adc esp, 0x51 ; add byte ptr [rax], al ; ret
0x0000000000496972 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000435c46 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004358e1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004358a5 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435da8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043dfde : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043e07b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043de7d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000426843 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000494ec0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a635 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004268cf : adc sil, r15b ; ret
0x00000000004bea4b : add ah, ah ; add al, 0 ; add byte ptr [rax + 0x63], dl ; hlt ; call qword ptr [rax]
0x00000000004c4d2b : add ah, al ; add byte ptr [eax], al ; push rax ; jrcxz 0x4c4d34 ; jmp rax
0x00000000004bf02b : add ah, al ; or al, byte ptr [rax] ; add byte ptr [rax], dl ; std ; hlt ; call qword ptr [rax]
0x00000000004c3a2b : add ah, al ; push rsp ; add byte ptr [rax], al ; adc byte ptr [rdi - 8], dh ; call qword ptr [rcx]
0x00000000004c6a2b : add ah, al ; test byte ptr [rax], al ; add al, dl ; retf
0x000000000043e50e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e52e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043e5bd : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ed : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c1b63 : add ah, bh ; xor eax, 0x3d180000 ; idiv bh ; ret
0x00000000004bf043 : add ah, bl ; or al, byte ptr [rax] ; add byte ptr [rax], cl ; std ; hlt ; call qword ptr [rdx]
0x00000000004c1843 : add ah, bl ; xor al, byte ptr [rax] ; add byte ptr [rax], cl ; int1 ; cmc ; call qword ptr [rdx]
0x00000000004baac7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf -0x5d02
0x00000000004bfd5f : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bfe38 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043dfda : add ah, byte ptr [rdx - 0xf] ; jl 0x43e02f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004c3353 : add ah, ch ; add byte ptr [r8], r8b ; mov ch, cl ; std ; jmp qword ptr [rdx]
0x00000000004c5553 : add ah, ch ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; sub dh, bh ; stc ; call rsi
0x00000000004c6d5b : add ah, dh ; xchg dword ptr [rax], eax ; add al, al ; fsqrt ; call rsi
0x00000000004c213b : add ah, dl ; cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x41], al ; idiv edi ; retf 2
0x00000000004bea0d : add al, 0 ; add al, al ; add bh, dh ; call rdi
0x00000000004bea4d : add al, 0 ; add byte ptr [rax + 0x63], dl ; hlt ; call qword ptr [rax]
0x0000000000449d21 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449d59 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041c1ac : add al, 0 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x418c78
0x0000000000471819 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000042334d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042be6f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423371 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049ccf1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440f92 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426ee8 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000043f47f : add al, 0 ; add byte ptr [rax], al ; syscall
0x000000000048f7e1 : add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000424ee8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044a081 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041ac2a : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000402cf5 : add al, 0 ; add byte ptr [rdi + 0x6cd200], bh ; call rbx
0x0000000000419716 : add al, 0 ; add dh, dh ; ret
0x000000000040f9f4 : add al, 0 ; add rsp, 0xd8 ; ret
0x000000000046b07b : add al, 0x11 ; ret
0x000000000043e55d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004bfb6c : add al, 0x16 ; add byte ptr [rax], al ; push rax ; xor al, 0xf5 ; call qword ptr [rax]
0x0000000000474719 : add al, 0x16 ; jae 0x4746c7 ; xor eax, eax ; ret
0x000000000042e3c1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000422a4a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000046a1c5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a196
0x000000000043f45d : add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000409a1a : add al, 0x24 ; call 0x405d14
0x00000000004717bc : add al, 0x24 ; call rax
0x000000000046fad3 : add al, 0x24 ; lea rdi, qword ptr [rax + 0x6cb1e0] ; call rdx
0x000000000043f598 : add al, 0x24 ; mov eax, 0 ; syscall
0x000000000046af78 : add al, 0x24 ; mov eax, 0x14 ; syscall
0x000000000043f5f8 : add al, 0x24 ; mov eax, 1 ; syscall
0x000000000043f538 : add al, 0x24 ; mov eax, 2 ; syscall
0x000000000043f7e8 : add al, 0x24 ; mov eax, 3 ; syscall
0x000000000044acaa : add al, 0x24 ; mov r12, rsi ; jmp 0x44ac82
0x000000000044238c : add al, 0x24 ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000044f90a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047ca75 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040ead0 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044d33d : add al, 0x29 ; ret 0x8941
0x0000000000465bee : add al, 0x31 ; ret
0x0000000000465aea : add al, 0x37 ; ret
0x000000000041662f : add al, 0x3a ; ret
0x00000000004b8ba6 : add al, 0x3d ; retf
0x0000000000480d2c : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480d01
0x00000000004669b6 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000004713a1 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043ba3b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000043af49 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043af5b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000464173 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004640b3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000043532a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463f94 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439789 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004657e4 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000474716 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x4746ca ; xor eax, eax ; ret
0x0000000000474006 : add al, 0x4c ; cmp edx, eax ; jne 0x473fb4 ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000043af57 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439797 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044cbe2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041c164 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000004669b4 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000042004a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bfdf7 : add al, 0x79 ; ret
0x0000000000475351 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000049a083 : add al, 0x81 ; je 0x49a065 ; ret
0x00000000004293ab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000049a07f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x49a069 ; ret
0x000000000042ac83 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043e658 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e648 ; ret
0x0000000000429107 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000004496ed : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046b2d0 : add al, 0x85 ; leave ; jne 0x46b288 ; xor eax, eax ; ret
0x0000000000467099 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049bb9b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043af46 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000439786 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000049a0eb : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e2fa : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004443d9 : add al, 0x89 ; retf -0x1540
0x000000000043e65b : add al, 0x8a ; je 0x43e645 ; ret
0x000000000045c810 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000048a133 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c2208 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c5756 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b613 : add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047a58d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47a5e9
0x000000000048009d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x4800f9
0x000000000047af05 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422b8d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000435693 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f4db : add al, 0xf3 ; ret
0x0000000000426929 : add al, 0xf6 ; ret 0x7408
0x0000000000481428 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004746cc : add al, 1 ; cmp rax, 0xff ; cmove rax, rdx ; ret
0x00000000004bfe6f : add al, 2 ; hlt ; ret
0x000000000042f937 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7fd0 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x0000000000446285 : add al, 7 ; add al, ch ; ret
0x000000000042142d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042cf58 : add al, 7 ; ret
0x000000000042e52f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004bd3af : add al, ah ; adc byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004bea0f : add al, al ; add bh, dh ; call rdi
0x00000000004c6d5f : add al, al ; fsqrt ; call rsi
0x00000000004ae627 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004a33d9 : add al, bh ; call rax
0x00000000004c2cd1 : add al, bh ; call rsp
0x00000000004c79c7 : add al, bh ; mov esi, ebx ; jmp qword ptr [rsi]
0x00000000004bc74f : add al, bh ; ret 0x4b
0x00000000004c49f7 : add al, bl ; jl 0x4c49f8 ; call rdi
0x00000000004c6687 : add al, bl ; mov dl, bh ; call rsi
0x000000000046554f : add al, bpl ; cli ; ret 0xfff9
0x000000000041b04f : add al, bpl ; cli ; retf
0x0000000000400a74 : add al, bpl ; jne 0x400a6e ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041b996 : add al, bpl ; ret
0x000000000049ef7e : add al, bpl ; retf
0x0000000000444539 : add al, byte ptr [eax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44452f
0x0000000000497872 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418e6c : add al, byte ptr [r8] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000423911 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000419b4d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425f03 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000411105 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000040049f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000469fc6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041f986 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004460bd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045208d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004234ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047dd1c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042aa41 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423511 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cd01 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440182 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000441402 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000441175 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441041 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440fb9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004668d3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000400430 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000046a6da : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004038f5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000478418 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000425068 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d3e4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004752bd : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000400463 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000048317e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000041bbc5 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x0000000000418e6d : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041ab60 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000447f6c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000004475ec : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044cd74 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c975d : add al, byte ptr [rax] ; ret
0x000000000044453a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44452e
0x0000000000467557 : add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf -0x72bf
0x0000000000442a3e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bf990 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c5375 : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c514d : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004c06dd : add al, byte ptr [rdx] ; ret
0x00000000004bf8a0 : add al, byte ptr [rdx] ; retf
0x000000000047aac5 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c220c : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x000000000041bbc4 : add al, byte ptr ds:[rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x0000000000465550 : add al, ch ; cli ; ret 0xfff9
0x000000000041b050 : add al, ch ; cli ; retf
0x0000000000445ee0 : add al, ch ; cli ; retf -1
0x00000000004201db : add al, ch ; jmp qword ptr [rdi]
0x0000000000400a75 : add al, ch ; jne 0x400a6d ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000454df2 : add al, ch ; pop rax ; retf -6
0x000000000041b997 : add al, ch ; ret
0x00000000004170b8 : add al, ch ; ret 0x6a
0x0000000000483d88 : add al, ch ; ret 0xf7da
0x00000000004839b8 : add al, ch ; ret 0xf9a1
0x000000000040247f : add al, ch ; retf
0x000000000046d680 : add al, ch ; retf -0x6bf
0x0000000000451e40 : add al, ch ; retf -0xf5
0x0000000000454e24 : add al, ch ; retf -6
0x0000000000418290 : add al, ch ; retf 0x3a1
0x0000000000403cfd : add al, ch ; std ; ret 0xffbf
0x00000000004bf0f7 : add al, cl ; add ch, dh ; call rdi
0x00000000004bc827 : add al, cl ; ret
0x00000000004a35bf : add al, dh ; retf 0x42
0x00000000004c8a4f : add al, dh ; salc ; cld ; call qword ptr [rax]
0x00000000004bf9cf : add al, dh ; sub esi, ebp ; jmp qword ptr [rsi]
0x00000000004c426f : add al, dl ; mov bh, 0xf8 ; jmp qword ptr [rsi]
0x00000000004bcf7f : add al, dl ; or byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004bc737 : add al, dl ; ret 0x4b
0x00000000004c6a2f : add al, dl ; retf
0x00000000004a35b7 : add al, dl ; retf 0x42
0x00000000004c70d2 : add bh, ah ; ret
0x0000000000444dbf : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045fb3e : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000413e5a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400be7 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e37f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000402cfc : add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000047a6a0 : add bh, byte ptr [rax + 1] ; ret
0x0000000000412dc2 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dceb : add bh, byte ptr [rax - 1] ; ret
0x00000000004bf593 : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043d7b2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004bea11 : add bh, dh ; call rdi
0x00000000004703c6 : add bh, dh ; ret 0x804
0x00000000004261e6 : add bl, al ; lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000467071 : add bl, al ; mov eax, 2 ; ret
0x0000000000421294 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000004444ea : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c5edf : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c511f : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004c5f9d : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000046a1ca : add bl, ch ; ret 0x1f0f
0x000000000046bd5e : add bl, ch ; retf
0x0000000000486fd8 : add bl, ch ; retf -0x76bb
0x000000000047f55f : add bl, ch ; retf 0x1f0f
0x000000000043fadc : add bl, ch ; retf 0x4890
0x00000000004bce97 : add bl, cl ; or eax, 0x48 ; add byte ptr [rax], al ; retf
0x00000000004bd2b7 : add bl, cl ; sbb byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004063c7 : add bl, dh ; ret
0x00000000004c0a9b : add byte ptr [0x6fa00000], dh ; cmc ; call qword ptr [rdx]
0x00000000004c8a7b : add byte ptr [0xffffffff90a00000], dl ; cld ; call qword ptr [rax]
0x00000000004c4d2d : add byte ptr [eax], al ; push rax ; jrcxz 0x4c4d32 ; jmp rax
0x0000000000445aee : add byte ptr [edi + 0x6cd1b0], r15b ; call rax
0x000000000047055a : add byte ptr [r11 + r9*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x00000000004674f4 : add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x000000000046554a : add byte ptr [r15 + 0x4a208c], dil ; call 0x401859
0x0000000000454dd3 : add byte ptr [r15 + 0x4b2d21], dil ; call 0x401859
0x0000000000454e05 : add byte ptr [r15 + 0x4b2d88], dil ; call 0x401859
0x0000000000454dec : add byte ptr [r15 + 0x4b2db8], dil ; call 0x401859
0x0000000000474d81 : add byte ptr [r15 + 0x4b61d4], dil ; call 0x401859
0x000000000047ac70 : add byte ptr [r15 + 0x6cd4a0], r15b ; call rax
0x000000000047ad9b : add byte ptr [r15 + 0x6cd4a4], r15b ; call rdx
0x000000000045bac3 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045aaaf : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000474751 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000425e5f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x000000000046907e : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000488d61 : add byte ptr [r8 + 1], cl ; retf -0x74b8
0x000000000049d6bf : add byte ptr [r8 + 1], r9b ; ret
0x00000000004685f5 : add byte ptr [r8 - 0x77], cl ; ret
0x00000000004434e1 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000459b58 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27ee36a
0x0000000000447185 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004bc74a : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x00000000004bc822 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, cl ; ret
0x00000000004bc732 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004bc752 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bc6d2 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc6ba : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x4b
0x00000000004c2ccd : add byte ptr [r8], r8b ; mov al, 0 ; clc ; call rsp
0x00000000004c3355 : add byte ptr [r8], r8b ; mov ch, cl ; std ; jmp qword ptr [rdx]
0x000000000043f7d9 : add byte ptr [r8], r8b ; ret
0x000000000045a63f : add byte ptr [r9 + r9*4 - 9], cl ; call 0x466937
0x0000000000473517 : add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c4474
0x00000000004c58f7 : add byte ptr [rax + 0x12], bl ; cli ; jmp rdx
0x000000000042128f : add byte ptr [rax + 0x16], bh ; ret
0x000000000043f41f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000049a09f : add byte ptr [rax + 0x26], bh ; syscall
0x000000000043dd7f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000405507 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044c598 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004196d5 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044b710 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000420410 : add byte ptr [rax + 0x29], cl ; retf
0x000000000041e125 : add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x000000000041d82f : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000004c8db7 : add byte ptr [rax + 0x33], bh ; std ; call rsp
0x00000000004bfb6f : add byte ptr [rax + 0x34], dl ; cmc ; call qword ptr [rax]
0x00000000004c482f : add byte ptr [rax + 0x37], ah ; stc ; call rdi
0x000000000040f3f1 : add byte ptr [rax + 0x38], bh ; syscall
0x0000000000417efb : add byte ptr [rax + 0x39], cl ; ret
0x000000000046dd17 : add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483d6b : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x00000000004183e6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044ed7b : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004183a7 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000442bc1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000442c80 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000046def5 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004475c0 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042fce1 : add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x000000000043df08 : add byte ptr [rax + 0x39], cl ; retf -0x78f1
0x0000000000432d6e : add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x00000000004301b6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004345d3 : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043ebff : add byte ptr [rax + 0x3b], bh ; syscall
0x000000000040f1c8 : add byte ptr [rax + 0x3e], bh ; mov rbx, rdi ; syscall
0x000000000046acef : add byte ptr [rax + 0x3f], bh ; syscall
0x0000000000425e5b : add byte ptr [rax + 0x43d7d0], bh ; cmove rax, rdx ; ret
0x000000000047a946 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000412688 : add byte ptr [rax + 0x5b004a1e], ah ; ret
0x00000000004c0397 : add byte ptr [rax + 0x5b], ch ; cmc ; call qword ptr [rcx]
0x0000000000463207 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000043fedf : add byte ptr [rax + 0x61], bh ; syscall
0x000000000044297f : add byte ptr [rax + 0x63], bh ; syscall
0x0000000000412da8 : add byte ptr [rax + 0x63], cl ; jnp 0x412e22 ; syscall
0x000000000045d2be : add byte ptr [rax + 0x63], cl ; ret
0x0000000000464d3f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000040ef41 : add byte ptr [rax + 0x63], cl ; retf -0x76b4
0x000000000045c8e5 : add byte ptr [rax + 0x63], cl ; retf -0x76b8
0x000000000048b1f4 : add byte ptr [rax + 0x63], cl ; retf -0x7cb8
0x000000000040dcb2 : add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000043f780 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x48 ; syscall
0x000000000044ce78 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x00000000004bea4f : add byte ptr [rax + 0x63], dl ; hlt ; call qword ptr [rax]
0x000000000046ad2f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000046ad1f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046ad3f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004188b2 : add byte ptr [rax + 0x6ca800], bh ; ret
0x00000000004c09b7 : add byte ptr [rax + 0x6e], bh ; cmc ; call qword ptr [rsi]
0x000000000042390f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000476974 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043b9df : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000040feca : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000046d08e : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000004400bf : add byte ptr [rax + 0xb], bh ; syscall
0x00000000004673cf : add byte ptr [rax + 0xc9], bh ; syscall
0x0000000000442a21 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ee06 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000041d765 : add byte ptr [rax + 0xf48006c], ch ; retf -0x76b4
0x0000000000465a55 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044399b : add byte ptr [rax + 0xf], cl ; ret
0x0000000000413137 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425e60 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000410219 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000046907f : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426783 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000448e5a : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004486ad : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044b26a : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041d768 : add byte ptr [rax + 0xf], cl ; retf -0x76b4
0x0000000000469708 : add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x000000000041ca95 : add byte ptr [rax + 0xf], cl ; retf -0x7cb8
0x0000000000401550 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000474a87 : add byte ptr [rax + 1], bh ; ret
0x0000000000425f05 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000411107 : add byte ptr [rax + 1], cl ; ret
0x0000000000488cbf : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b6dc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047f347 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000469e4c : add byte ptr [rax + 1], cl ; retf
0x0000000000488d62 : add byte ptr [rax + 1], cl ; retf -0x74b8
0x0000000000402b0f : add byte ptr [rax + 1], cl ; retf -0x76b8
0x0000000000425f0f : add byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000434691 : add byte ptr [rax + 1], cl ; retf -0x7eb8
0x000000000047f457 : add byte ptr [rax + 1], cl ; retf 0x42f6
0x0000000000479b30 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000040042e : add byte ptr [rax + 2], bh ; syscall
0x000000000040042d : add byte ptr [rax + 2], dil ; syscall
0x000000000044f034 : add byte ptr [rax + 3], bh ; syscall
0x00000000004c568f : add byte ptr [rax + 3], dh ; cli ; jmp rdx
0x000000000049ae0f : add byte ptr [rax + 5], bh ; ret
0x000000000043e57e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000044293f : add byte ptr [rax + 8], bh ; syscall
0x000000000043e57d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004ad5cb : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004be583 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; and al, 0xf4 ; call rax
0x000000000041c3bf : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041cae9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c0bff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add byte ptr es:[rax], al ; retf
0x00000000004c8db3 : add byte ptr [rax + rbp*4], cl ; add byte ptr [rax + 0x33], bh ; std ; call rsp
0x00000000004c3e1b : add byte ptr [rax + rbx*2 - 0x66a00000], dh ; clc ; call qword ptr [rdx]
0x00000000004713a0 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004ae777 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000049c34f : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c8aaf : add byte ptr [rax - 0x10], al ; cld ; call qword ptr [rax]
0x00000000004c6f9f : add byte ptr [rax - 0x14], dh ; cli ; jmp qword ptr [rdx]
0x0000000000462a17 : add byte ptr [rax - 0x14dff3b5], al ; retf -0x6f9a
0x00000000004c4f77 : add byte ptr [rax - 0x16], cl ; stc ; call qword ptr [rsi]
0x0000000000403356 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c4d2f : add byte ptr [rax - 0x1d], dl ; stc ; jmp rax
0x00000000004c450f : add byte ptr [rax - 0x26], al ; clc ; call qword ptr [rbx]
0x00000000004c453f : add byte ptr [rax - 0x26], al ; clc ; call qword ptr [rdx]
0x00000000004c4527 : add byte ptr [rax - 0x26], cl ; clc ; call qword ptr [rax]
0x00000000004c6bdf : add byte ptr [rax - 0x2c], al ; cli ; jmp rsi
0x00000000004c13d7 : add byte ptr [rax - 0x32], ch ; cmc ; call rdx
0x00000000004c416f : add byte ptr [rax - 0x39], al ; std ; call qword ptr [rbx]
0x000000000043ff41 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000452a5f : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dcdf : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042116b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044f99f : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000411127 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004668df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004668bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000046691f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004668cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000046690f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000044fa7f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000459490 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044cd8d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000478ad5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004c213f : add byte ptr [rax - 0x41], al ; idiv edi ; retf 2
0x00000000004896d2 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000048d807 : add byte ptr [rax - 0x48], cl ; retf -2
0x00000000004c8a1f : add byte ptr [rax - 0x49], dl ; cld ; call qword ptr [rax]
0x00000000004c3e1f : add byte ptr [rax - 0x67], ah ; clc ; call qword ptr [rdx]
0x00000000004c73cf : add byte ptr [rax - 0x69], dh ; std ; call rcx
0x000000000041c358 : add byte ptr [rax - 0x6af0ff94], ch ; ret 0x8349
0x000000000044fe63 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000004196b1 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000449d3f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449d23 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449d5b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047b9da : add byte ptr [rax - 0x73], cl ; jl 0x47ba0a ; js 0x47ba29 ; call rsp
0x000000000047bcef : add byte ptr [rax - 0x73], cl ; jl 0x47bd1f ; js 0x47bd3e ; call rsp
0x000000000047c0b6 : add byte ptr [rax - 0x73], cl ; jl 0x47c0e6 ; js 0x47c105 ; call rsp
0x000000000049ad6f : add byte ptr [rax - 0x73], cl ; jl 0x49ada0 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041b51d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004750c7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049bcef : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044cdbf : add byte ptr [rax - 0x75], cl ; add eax, 0x280411 ; ret
0x0000000000445a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x288371 ; ret
0x000000000041720f : add byte ptr [rax - 0x75], cl ; add eax, 0x2b2ea9 ; ret
0x000000000049eca8 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; retf
0x000000000044fe7f : add byte ptr [rax - 0x75], cl ; jl 0x44feb0 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045af28 : add byte ptr [rax - 0x75], cl ; jl 0x45af59 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x0000000000415be6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464ff6 : add byte ptr [rax - 0x75], cl ; jp 0x465041 ; jmp 0x464fc6
0x000000000046502f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047d7dd : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x00000000004177b7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004316ff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041e467 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x0000000000478e9f : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x0000000000445572 : add byte ptr [rax - 0x75], cl ; ret
0x000000000049c487 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x000000000041723f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410312 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041e073 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004004a1 : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000004003d1 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 1] ; syscall
0x0000000000415752 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004158c2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000456082 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b4
0x0000000000454337 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x0000000000469a09 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441855 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441755 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044134d : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf -0x13
0x0000000000419965 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x000000000047a9dc : add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x00000000004694d8 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091e2e
0x0000000000410161 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000004014c2 : add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x000000000041c1ae : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x418c76
0x0000000000441411 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041e720 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000040348c : add byte ptr [rax - 0x77], cl ; ret
0x00000000004183d2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x0000000000417c0c : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000045a510 : add byte ptr [rax - 0x77], cl ; ret 0x24e9
0x000000000047aa63 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000046a29f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x000000000043ef1a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402afe : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046c80f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000041a1cf : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459e39 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044f0d4 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000041c96f : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043ed83 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044f4a7 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470ea7 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000485d94 : add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x0000000000425e0b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045ad8f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000413e60 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004738d6 : add byte ptr [rax - 0x77], cl ; retf
0x000000000042ae3c : add byte ptr [rax - 0x77], cl ; retf -0x63b
0x0000000000422b40 : add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x000000000048b740 : add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x000000000045386f : add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000422d82 : add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x0000000000429444 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000041caa7 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000410b07 : add byte ptr [rax - 0x77], cl ; retf 0x294c
0x000000000046a23e : add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x0000000000422be2 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x00000000004437a4 : add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000404e72 : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x00000000004292c6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000047217f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000040f1cd : add byte ptr [rax - 0x77], cl ; sti ; syscall
0x000000000049e22d : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000470e43 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000043ebbf : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x0000000000404a73 : add byte ptr [rax - 0x7af0a707], al ; retf -5
0x00000000004657df : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000046821f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x0000000000464b1a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000004434e2 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000411fd7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000045f06c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x000000000047181b : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x0000000000459b59 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27ee369
0x000000000041cf56 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004213ad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004017e8 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000455378 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045699f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000048988b : add byte ptr [rax - 0x7d], cl ; jl 0x4898bc ; or byte ptr [rax], al ; jne 0x489866 ; jmp 0x48986e
0x000000000048cabb : add byte ptr [rax - 0x7d], cl ; jl 0x48caec ; adc byte ptr [rax], al ; jne 0x48ca96 ; jmp 0x48ca9e
0x000000000041e762 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040167e : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c10f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043d8af : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041cb09 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000469dff : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040ee5f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047605f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0c1f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045337f : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004013df : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000447186 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044c170 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000422c0f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000464a37 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004260ff : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047dd1e : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044757f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004629e7 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000484adf : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000004256a0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000429523 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c33 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046774f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041a76f : add byte ptr [rax - 0x7d], cl ; retf
0x000000000040da78 : add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040da28 : add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d8dc : add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040da50 : add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040daa0 : add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d9b5 : add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d940 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040db40 : add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040db14 : add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d982 : add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d910 : add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000042e46f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000046591f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044c8f4 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044e37f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004201d4 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; jmp qword ptr [rdi]
0x0000000000451c40 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000451e39 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0xf5
0x00000000004a00e6 : add byte ptr [rax - 0x7f], cl ; jmp rax
0x0000000000446e6c : add byte ptr [rax - 0x7f], cl ; ret 0x5b80
0x0000000000432e7b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004174df : add byte ptr [rax - 1], bh ; jmp 0x4174b8
0x00000000004640a2 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410c52 : add byte ptr [rax - 1], bh ; ret
0x000000000041736e : add byte ptr [rax - 1], dil ; ret
0x00000000004bef77 : add byte ptr [rax - 5], bh ; hlt ; call qword ptr [rbx]
0x0000000000445edd : add byte ptr [rax], 0 ; add al, ch ; cli ; retf -1
0x00000000004201d8 : add byte ptr [rax], 0 ; add al, ch ; jmp qword ptr [rdi]
0x0000000000451c44 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000451e3d : add byte ptr [rax], 0 ; add al, ch ; retf -0xf5
0x0000000000403cfa : add byte ptr [rax], 0 ; add al, ch ; std ; ret 0xffbf
0x0000000000414e29 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000004188af : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043468e : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x0000000000410e89 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000419962 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x000000000047a9d9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000048b800 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000413e5d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047e1db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x000000000043569b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047854b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046638b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044ed13 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041caf3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004188bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cefb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000045c5a3 : add byte ptr [rax], 0 ; add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret 0x2718
0x000000000047c685 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042e951 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447372 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040fecb : add byte ptr [rax], 0 ; je 0x40fee0 ; mov eax, edx ; pop rbx ; ret
0x000000000047a947 : add byte ptr [rax], 0 ; je 0x47a958 ; mov eax, edx ; pop rbx ; ret
0x00000000004c41df : add byte ptr [rax], ah ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004bc757 : add byte ptr [rax], ah ; ret
0x00000000004c7a0f : add byte ptr [rax], ah ; sti ; jmp qword ptr [rdx]
0x00000000004bf9ca : add byte ptr [rax], al ; adc al, 0 ; add al, dh ; sub esi, ebp ; jmp qword ptr [rsi]
0x00000000004c3a2e : add byte ptr [rax], al ; adc byte ptr [rdi - 8], dh ; call qword ptr [rcx]
0x00000000004c59fe : add byte ptr [rax], al ; adc byte ptr [rsi], 0xfa ; jmp qword ptr [rax]
0x00000000004bf02e : add byte ptr [rax], al ; adc ch, bh ; hlt ; call qword ptr [rax]
0x00000000004c6a29 : add byte ptr [rax], al ; add ah, al ; test byte ptr [rax], al ; add al, dl ; retf
0x00000000004bfb6a : add byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rax], al ; push rax ; xor al, 0xf5 ; call qword ptr [rax]
0x000000000047139f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004bc74d : add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x0000000000445ede : add byte ptr [rax], al ; add al, ch ; cli ; retf -1
0x00000000004201d9 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rdi]
0x0000000000451c45 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000004839b6 : add byte ptr [rax], al ; add al, ch ; ret 0xf9a1
0x000000000047882d : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000451e3e : add byte ptr [rax], al ; add al, ch ; retf -0xf5
0x0000000000403cfb : add byte ptr [rax], al ; add al, ch ; std ; ret 0xffbf
0x00000000004bc825 : add byte ptr [rax], al ; add al, cl ; ret
0x00000000004a35bd : add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004bc735 : add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004a35b5 : add byte ptr [rax], al ; add al, dl ; retf 0x42
0x00000000004607b6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000046706f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000046a1c8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000046bd5c : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000486fd6 : add byte ptr [rax], al ; add bl, ch ; retf -0x76bb
0x0000000000414e2a : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042128d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000043f41d : add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x000000000045ca9b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046dd15 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483d69 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044ed79 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004301b4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004345d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043ebfd : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x000000000043fedd : add byte ptr [rax], al ; add byte ptr [rax + 0x61], bh ; syscall
0x000000000044297d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], bh ; syscall
0x0000000000412da6 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x412e24 ; syscall
0x0000000000464d3d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000040dcb0 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000046ad2d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000046ad1d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046ad3d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004188b0 : add byte ptr [rax], al ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043b9dd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004400bd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x0000000000442a1f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ee04 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000448e58 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004486ab : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044b268 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041ca93 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf -0x7cb8
0x000000000040154e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a6d3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000488de4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000488cbd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000043468f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x000000000044f032 : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; syscall
0x000000000049ae0d : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x000000000044293d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x000000000049c34d : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000462a15 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf -0x6f9a
0x000000000043ff3f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040f41d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000410e8a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044cd8b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000478ad3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000047b9d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47ba0c ; js 0x47ba2b ; call rsp
0x000000000047bced : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bd21 ; js 0x47bd40 ; call rsp
0x000000000047c0b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47c0e8 ; js 0x47c107 ; call rsp
0x0000000000415be4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464ff4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x465043 ; jmp 0x464fc8
0x000000000041723d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000456080 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b4
0x0000000000454335 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x0000000000469a07 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441853 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441753 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044134b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf -0x13
0x0000000000419963 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x000000000047a9da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000044140f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00000000004101a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000417c0a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000046c80d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000046df22 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043ed81 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000485d92 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x0000000000425e09 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045ad8d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000413e5e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004738d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000042ae3a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x63b
0x0000000000422b3e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x000000000048b73e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x000000000045386d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000410b05 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004292c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000047217d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000040f1cb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sti ; syscall
0x000000000043ebbd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x0000000000404a71 : add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf -5
0x000000000045f06a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x0000000000442f4c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d8ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444dc3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047605d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0c1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045337d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044c16e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042ab77 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004260fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000044757d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484bbd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042abe1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046774d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e46d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044e37d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000434688 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410c50 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004bc755 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bc74b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x00000000004bc823 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x00000000004a35bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004bc733 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004a35b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 0x42
0x00000000004171fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047473b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000464d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000046313b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040f41b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000049ae7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041723b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000417c08 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485d90 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb3e8
0x000000000045ec9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045845b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000047605b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0c1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045337b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004260fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000044757b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484bbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000049a7eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004bc753 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000041603b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af452 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af942 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004aeb02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004af492 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af982 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004b3eb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x45
0x00000000004aeafa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004bc6d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc6bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x4b
0x00000000004a35cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x00000000004a35db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x00000000004a35c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x0000000000417a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043daeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b4cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000422beb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004217bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041280b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000004430c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000049e46b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000046689c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047832f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000476626 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4430d6
0x000000000047e1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b147c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b062c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004bc74c : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x4b
0x000000000045fbc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043c00c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043c01c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043c02c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043c03c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043c04c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043bf8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043bf9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043bfac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bfbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043bfcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bfdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043bfec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bffc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043bf7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000400ad5 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000043b9dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000042128c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f41c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000043ebfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x000000000043fedc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x000000000044297c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046ad2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046ad1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046ad3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000004400bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000415acc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a6d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049ae0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000044293c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x000000000043569c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047854c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041722c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041723c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044ef83 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x000000000043ebbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000041280c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004357ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004430ca : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004bc704 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0x4b
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000415eb0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004156b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a35d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x000000000041603d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b044c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0be4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af454 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af944 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a4084 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43e4
0x00000000004b7144 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b6a
0x00000000004a47f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0484 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0c24 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004af494 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af984 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004bdde5 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004a48d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x43ee
0x00000000004b3eb5 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x45
0x00000000004b3964 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x45fb
0x00000000004a6ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4b29
0x00000000004aeafc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000043f57a : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x000000000041caf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041257c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000400d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000042cefc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004bc6d5 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x4b
0x00000000004bc6bd : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x4b
0x00000000004a35cd : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x00000000004a35dd : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x00000000004a35c5 : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x0000000000476139 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000045c86c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000004428d8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000046240d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000448312 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e1da : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043e529 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047bd1f : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000442d0c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000047f558 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4bcd40], bh ; jmp 0x47f535
0x0000000000434f7d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000411fc3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415eb1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000413970 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046346c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; retf -0x38b8
0x000000000045c5a4 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret 0x2718
0x000000000046a724 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000460936 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045e0dc : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x0000000000443ecd : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000463266 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004c1cde : add byte ptr [rax], al ; add byte ptr [rbx - 0xa], cl ; call qword ptr [rsi]
0x000000000041703c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000410647 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000045d6e2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d665 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403dd3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043daed : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b4cd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000420858 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000441051 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000441185 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000440fba : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000440fc9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000425a01 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000458dec : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000422bed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004217bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ec97 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x0000000000426210 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426236 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c686 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045bb6a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040ecda : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c167 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049c18f : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043e485 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043577d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004357ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448f0c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462e85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000041280d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042613d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004673e5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d946 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000443324 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046bd17 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042e952 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426052 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440f93 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049e875 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c2be1 : add byte ptr [rax], al ; add byte ptr [rsi + rax*2], bh ; add byte ptr [rax], cl ; ret 0xfffd
0x00000000004c94de : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004430cb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004be585 : add byte ptr [rax], al ; add byte ptr [rsi], ah ; and al, 0xf4 ; call rax
0x00000000004c2cca : add byte ptr [rax], al ; add byte ptr fs:[r8], r8b ; mov al, 0 ; clc ; call rsp
0x0000000000458abd : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000449da5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000472562 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000049b026 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048ba78 : add byte ptr [rax], al ; add cl, ch ; retf -0xe
0x000000000043f14d : add byte ptr [rax], al ; add cl, ch ; retf -4
0x0000000000453bbe : add byte ptr [rax], al ; add cl, ch ; retf -6
0x0000000000400ad6 : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000418289 : add byte ptr [rax], al ; add dh, al ; and al, 0x10 ; add al, ch ; retf 0x3a1
0x0000000000418258 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000447373 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043d241 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485c60 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000049afb5 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478aa7 : add byte ptr [rax], al ; add rax, -8 ; ret
0x000000000046689e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425f04 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043e6fe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043ea47 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049c3b8 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040121c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044fc66 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040fa85 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000445ab7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478331 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c09b2 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax + 0x6e], bh ; cmc ; call qword ptr [rsi]
0x00000000004c2f8a : add byte ptr [rax], al ; and al, 0x4a ; add byte ptr [rax], al ; nop ; sbb al, 0xf8 ; call qword ptr [rax]
0x00000000004c568a : add byte ptr [rax], al ; and al, 0x71 ; add byte ptr [rax], al ; jo 0x4c569e ; cli ; jmp rdx
0x00000000004be586 : add byte ptr [rax], al ; and al, 0xf4 ; call rax
0x00000000004c7a0e : add byte ptr [rax], al ; and byte ptr [rsi], dh ; sti ; jmp qword ptr [rdx]
0x00000000004c0ab2 : add byte ptr [rax], al ; and rax, 0x6fa80000 ; cmc ; jmp qword ptr [rax]
0x000000000042613e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000423a00 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000465a54 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000416768 : add byte ptr [rax], al ; call 0x4429e4
0x00000000004167ff : add byte ptr [rax], al ; call 0x442a14
0x0000000000476628 : add byte ptr [rax], al ; call 0x4430d4
0x0000000000403cfc : add byte ptr [rax], al ; call 4
0x000000000044ca9b : add byte ptr [rax], al ; call r12
0x000000000047bb94 : add byte ptr [rax], al ; call r14
0x000000000044cb75 : add byte ptr [rax], al ; call r15
0x000000000040173a : add byte ptr [rax], al ; call rax
0x0000000000440f99 : add byte ptr [rax], al ; call rbx
0x00000000004b147e : add byte ptr [rax], al ; call rdi
0x000000000040ea8c : add byte ptr [rax], al ; call rdx
0x00000000004b062e : add byte ptr [rax], al ; call rsp
0x00000000004a33d8 : add byte ptr [rax], al ; clc ; call rax
0x00000000004c79c6 : add byte ptr [rax], al ; clc ; mov esi, ebx ; jmp qword ptr [rsi]
0x00000000004bc74e : add byte ptr [rax], al ; clc ; ret 0x4b
0x00000000004c7716 : add byte ptr [rax], al ; cmp byte ptr [rax], ch ; sti ; call rsp
0x00000000004c6ef6 : add byte ptr [rax], al ; cmp cl, ah ; cli ; jmp qword ptr [rdx]
0x0000000000411647 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x411658 ; pop rbx ; ret
0x0000000000464ab5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x464ac9 ; ret
0x000000000048caba : add byte ptr [rax], al ; cmp qword ptr [rsp + 0x10], 0 ; jne 0x48ca97 ; jmp 0x48ca9f
0x000000000048988a : add byte ptr [rax], al ; cmp qword ptr [rsp + 8], 0 ; jne 0x489867 ; jmp 0x48986f
0x00000000004c6296 : add byte ptr [rax], al ; cwde ; cli ; jmp rsp
0x00000000004c7146 : add byte ptr [rax], al ; cwde ; or bl, bh ; jmp rsi
0x00000000004c0866 : add byte ptr [rax], al ; cwde ; push 0xf5 ; jmp qword ptr [rax]
0x00000000004ad5da : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004b162e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000004ae786 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004adf86 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000004ae386 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004b182e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004b1a2e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004b1c2e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004b1e2e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004b202e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004b222e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004b242e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004b262e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004b282e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004c1e26 : add byte ptr [rax], al ; fcom dword ptr [rax - 0xa] ; jmp qword ptr [rsi]
0x00000000004c6c66 : add byte ptr [rax], al ; fcom st(5) ; cli ; jmp rdi
0x00000000004c1842 : add byte ptr [rax], al ; fdiv qword ptr [rdx] ; add byte ptr [rax], al ; or cl, dh ; cmc ; call qword ptr [rdx]
0x00000000004c7142 : add byte ptr [rax], al ; fmul qword ptr [rbx + 0x8980000] ; sti ; jmp rsi
0x00000000004bf042 : add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rax], al ; or ch, bh ; hlt ; call qword ptr [rdx]
0x00000000004c6d5a : add byte ptr [rax], al ; hlt ; xchg dword ptr [rax], eax ; add al, al ; fsqrt ; call rsi
0x00000000004bea4a : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; push rax ; movsxd rsi, esp ; call qword ptr [rax]
0x00000000004c3352 : add byte ptr [rax], al ; in al, dx ; add byte ptr [r8], r8b ; mov ch, cl ; std ; jmp qword ptr [rdx]
0x00000000004c5552 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; sub dh, bh ; stc ; call rsi
0x000000000040fecc : add byte ptr [rax], al ; je 0x40fedf ; mov eax, edx ; pop rbx ; ret
0x00000000004210f7 : add byte ptr [rax], al ; je 0x421104 ; ret
0x000000000047a948 : add byte ptr [rax], al ; je 0x47a957 ; mov eax, edx ; pop rbx ; ret
0x000000000049c34e : add byte ptr [rax], al ; je 0x49c30a ; add rsp, 0x18 ; ret
0x000000000049e876 : add byte ptr [rax], al ; je 0x49e885 ; ret
0x00000000004c1cda : add byte ptr [rax], al ; je 0x4c1d1e ; add byte ptr [rax], al ; add byte ptr [rbx - 0xa], cl ; call qword ptr [rsi]
0x000000000046a1c9 : add byte ptr [rax], al ; jmp 0x46a192
0x000000000046bd5d : add byte ptr [rax], al ; jmp 0x46bd2f
0x000000000047976f : add byte ptr [rax], al ; jmp 0x479741
0x0000000000479e4f : add byte ptr [rax], al ; jmp 0x479e21
0x0000000000486fd7 : add byte ptr [rax], al ; jmp 0x486fa8
0x000000000049adcc : add byte ptr [rax], al ; jmp 0x49ad9e
0x0000000000440184 : add byte ptr [rax], al ; jmp rax
0x000000000043f515 : add byte ptr [rax], al ; jne 0x43f536 ; mov eax, 2 ; syscall
0x000000000043f575 : add byte ptr [rax], al ; jne 0x43f596 ; mov eax, 0 ; syscall
0x000000000043f5d5 : add byte ptr [rax], al ; jne 0x43f5f6 ; mov eax, 1 ; syscall
0x000000000043f7c5 : add byte ptr [rax], al ; jne 0x43f7e6 ; mov eax, 3 ; syscall
0x000000000046af55 : add byte ptr [rax], al ; jne 0x46af76 ; mov eax, 0x14 ; syscall
0x00000000004c568e : add byte ptr [rax], al ; jo 0x4c569a ; cli ; jmp rdx
0x00000000004c6f9e : add byte ptr [rax], al ; jo 0x4c6f93 ; cli ; jmp qword ptr [rdx]
0x00000000004c73ce : add byte ptr [rax], al ; jo 0x4c736e ; std ; call rcx
0x00000000004bef76 : add byte ptr [rax], al ; js 0x4bef7a ; hlt ; call qword ptr [rbx]
0x00000000004c09b6 : add byte ptr [rax], al ; js 0x4c0a2d ; cmc ; call qword ptr [rsi]
0x00000000004c8db6 : add byte ptr [rax], al ; js 0x4c8df2 ; std ; call rsp
0x000000000043c00e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043c01e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043c02e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043c03e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043c04e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043bf6d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043bf8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043bf9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043bfae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bfbe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043bfce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bfde : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043bf1a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bfee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bffe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043bf7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000047b9d9 : add byte ptr [rax], al ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x0000000000400ad7 : add byte ptr [rax], al ; leave ; ret
0x00000000004c7712 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ecx ; add byte ptr [rax], al ; cmp byte ptr [rax], ch ; sti ; call rsp
0x00000000004c74be : add byte ptr [rax], al ; loopne 0x4c74dc ; sti ; call qword ptr [rax]
0x00000000004c231a : add byte ptr [rax], al ; mov ah, 0x3d ; add byte ptr [rax], al ; push rax ; ret
0x00000000004c8a1a : add byte ptr [rax], al ; mov ah, 0xa4 ; add byte ptr [rax], al ; push rax ; mov bh, 0xfc ; call qword ptr [rax]
0x00000000004c2cce : add byte ptr [rax], al ; mov al, 0 ; clc ; call rsp
0x000000000043aeee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000043973e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000043b9de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b3be : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c3356 : add byte ptr [rax], al ; mov ch, cl ; std ; jmp qword ptr [rdx]
0x0000000000464b8b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b3ce : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400ad2 : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x000000000042128e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f41e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000043ebfe : add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x000000000046acee : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x000000000043fede : add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x000000000044297e : add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046ad2e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046ad1e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046ad3e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000004188b1 : add byte ptr [rax], al ; mov eax, 0x6ca800 ; ret
0x000000000046d08d : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004400be : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000442a20 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ee05 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000004174de : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x4174b9
0x00000000004640a1 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410c51 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000474a86 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044f033 : add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049ae0e : add byte ptr [rax], al ; mov eax, 5 ; ret
0x000000000044293e : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x0000000000416efe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049e25e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e279 ; ret
0x000000000049e47e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e499 ; ret
0x000000000048875e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2455fa] ; ret
0x000000000040fce1 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410648 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004736c6 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000046aef3 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000040ff15 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000444d63 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000047f559 : add byte ptr [rax], al ; mov ebx, 0x4bcd40 ; jmp 0x47f534
0x000000000046aeee : add byte ptr [rax], al ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000043b3fe : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000402cf6 : add byte ptr [rax], al ; mov edi, 0x6cd200 ; call rbx
0x000000000049c168 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049c190 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000434f7e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043569e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000473d19 : add byte ptr [rax], al ; mov edx, r13d ; xor edi, edi ; call 0x440009
0x00000000004c73ca : add byte ptr [rax], al ; mov es, word ptr fs:[rax] ; add byte ptr [rax - 0x69], dh ; std ; call rcx
0x0000000000442ad6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000440f94 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000046a725 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000047b108 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004552f5 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000488072 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004880f6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470e14 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042cb8e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c4ce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a6c0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000418219 : add byte ptr [rax], al ; mov qword ptr fs:[r9], rdx ; mov rax, rdx ; ret
0x000000000044f9af : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004171ae : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000044fa7e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000004668be : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004668ce : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004668de : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004668ee : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004668fe : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000046690e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000046691e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00000000004156e9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000411660 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000415be5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047854e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000471c4e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000046502e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041722e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c49e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c4de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c53e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c52e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c4ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000445a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x288371] ; ret
0x000000000041720e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b2ea9] ; ret
0x00000000004100b5 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c647 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000410311 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e072 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041c3c2 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041723e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e71f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047aa89 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000040f1cc : add byte ptr [rax], al ; mov rbx, rdi ; syscall
0x000000000044ef85 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000464ff5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464fc7
0x0000000000441186 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000441052 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440fca : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440fbb : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000400464 : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x000000000041c1ad : add byte ptr [rax], al ; mov rdi, rbp ; call 0x418c77
0x0000000000441410 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000462bb6 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004624cb : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004004a0 : add byte ptr [rax], al ; mov rdi, rbx ; mov eax, r10d ; syscall
0x000000000043ebbe : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000040fe30 : add byte ptr [rax], al ; mov rdi, rsi ; call 0x49c8b7
0x00000000004354de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004183d1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x4183f4
0x000000000049caae : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x0000000000474818 : add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004c4af2 : add byte ptr [rax], al ; mov word ptr [rbp], fs ; add byte ptr [rax], cl ; jg 0x4c4afd ; call rdx
0x00000000004c58f2 : add byte ptr [rax], al ; mov word ptr [rbx], dr0 ; add byte ptr [rax + 0x12], bl ; cli ; jmp rdx
0x00000000004c6ef2 : add byte ptr [rax], al ; mov word ptr [rcx - 0x1ec80000], cs ; cli ; jmp qword ptr [rdx]
0x00000000004c1cf2 : add byte ptr [rax], al ; mov word ptr [rdi], dr0 ; add byte ptr [rax], al ; or byte ptr [rbx - 0xa], cl ; jmp rbx
0x00000000004bea0a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add al, al ; add bh, dh ; call rdi
0x00000000004c7a0a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, esp ; add byte ptr [rax], al ; and byte ptr [rsi], dh ; sti ; jmp qword ptr [rdx]
0x0000000000440076 : add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000049a30f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000412da7 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x000000000040dcb1 : add byte ptr [rax], al ; movsxd rdi, ecx ; syscall
0x000000000044fb74 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000041280e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043510e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004357ee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043577e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400a79 : add byte ptr [rax], al ; nop ; leave ; ret
0x000000000046adfc : add byte ptr [rax], al ; nop ; mov eax, 0x15 ; syscall
0x00000000004400fc : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x000000000046ad0c : add byte ptr [rax], al ; nop ; mov eax, 0x66 ; syscall
0x00000000004400dc : add byte ptr [rax], al ; nop ; mov eax, 0xa ; syscall
0x00000000004430cc : add byte ptr [rax], al ; nop ; ret
0x00000000004c69ee : add byte ptr [rax], al ; nop ; retf
0x00000000004c2f8e : add byte ptr [rax], al ; nop ; sbb al, 0xf8 ; call qword ptr [rax]
0x00000000004bef72 : add byte ptr [rax], al ; or al, 0xa ; add byte ptr [rax], al ; js 0x4bef7e ; hlt ; call qword ptr [rbx]
0x00000000004c01c6 : add byte ptr [rax], al ; or byte ptr [rbp - 0xb], dl ; jmp qword ptr [rcx]
0x00000000004c1cf6 : add byte ptr [rax], al ; or byte ptr [rbx - 0xa], cl ; jmp rbx
0x00000000004c4af6 : add byte ptr [rax], al ; or byte ptr [rdi - 7], bh ; call rdx
0x0000000000476a44 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004bf046 : add byte ptr [rax], al ; or ch, bh ; hlt ; call qword ptr [rdx]
0x00000000004c1846 : add byte ptr [rax], al ; or cl, dh ; cmc ; call qword ptr [rdx]
0x00000000004c58f6 : add byte ptr [rax], al ; pop rax ; adc bh, dl ; jmp rdx
0x00000000004bc706 : add byte ptr [rax], al ; pop rax ; ret 0x4b
0x000000000045c79d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c86d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e52a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000463267 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a86c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000442d0d : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000411fc4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f293 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c01c2 : add byte ptr [rax], al ; pop rsp ; sbb al, 0 ; add byte ptr [rax], cl ; push rbp ; cmc ; jmp qword ptr [rcx]
0x00000000004c79c2 : add byte ptr [rax], al ; pop rsp ; xchg eax, esp ; add byte ptr [rax], al ; clc ; mov esi, ebx ; jmp qword ptr [rsi]
0x00000000004c4d2e : add byte ptr [rax], al ; push rax ; jrcxz 0x4c4d31 ; jmp rax
0x00000000004c8a1e : add byte ptr [rax], al ; push rax ; mov bh, 0xfc ; call qword ptr [rax]
0x00000000004bea4e : add byte ptr [rax], al ; push rax ; movsxd rsi, esp ; call qword ptr [rax]
0x00000000004c22ae : add byte ptr [rax], al ; push rax ; ret
0x00000000004a35d6 : add byte ptr [rax], al ; push rax ; retf
0x00000000004bfb6e : add byte ptr [rax], al ; push rax ; xor al, 0xf5 ; call qword ptr [rax]
0x00000000004c0c02 : add byte ptr [rax], al ; pushfq ; add byte ptr es:[rax], al ; retf
0x00000000004c6d5e : add byte ptr [rax], al ; rcr cl, 0xfa ; call rsi
0x0000000000401223 : add byte ptr [rax], al ; ret
0x00000000004a7806 : add byte ptr [rax], al ; ret 0
0x00000000004ae77e : add byte ptr [rax], al ; ret 0x10
0x00000000004b044e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0be6 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004af456 : add byte ptr [rax], al ; ret 0x24
0x00000000004af946 : add byte ptr [rax], al ; ret 0x33
0x00000000004a4086 : add byte ptr [rax], al ; ret 0x43e4
0x00000000004b7146 : add byte ptr [rax], al ; ret 0x4b6a
0x00000000004adf7e : add byte ptr [rax], al ; ret 0xa
0x00000000004ae37e : add byte ptr [rax], al ; ret 0xd
0x00000000004c222e : add byte ptr [rax], al ; ret 0xfff7
0x00000000004b1822 : add byte ptr [rax], al ; ret 1
0x00000000004b1a22 : add byte ptr [rax], al ; ret 2
0x00000000004b1c22 : add byte ptr [rax], al ; ret 3
0x00000000004b1e22 : add byte ptr [rax], al ; ret 4
0x00000000004b2022 : add byte ptr [rax], al ; ret 5
0x00000000004adb26 : add byte ptr [rax], al ; ret 6
0x00000000004b2422 : add byte ptr [rax], al ; ret 7
0x00000000004b2622 : add byte ptr [rax], al ; ret 8
0x00000000004b2822 : add byte ptr [rax], al ; ret 9
0x00000000004a47f6 : add byte ptr [rax], al ; retf
0x00000000004c130f : add byte ptr [rax], al ; retf -0xb
0x00000000004a7826 : add byte ptr [rax], al ; retf 0
0x00000000004ae8de : add byte ptr [rax], al ; retf 0x11
0x00000000004b0486 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0c26 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004af496 : add byte ptr [rax], al ; retf 0x24
0x00000000004af986 : add byte ptr [rax], al ; retf 0x33
0x00000000004bdde7 : add byte ptr [rax], al ; retf 0x3b9a
0x00000000004a48d6 : add byte ptr [rax], al ; retf 0x43ee
0x00000000004b3eb7 : add byte ptr [rax], al ; retf 0x45
0x00000000004b3966 : add byte ptr [rax], al ; retf 0x45fb
0x00000000004a6ec6 : add byte ptr [rax], al ; retf 0x4b29
0x00000000004ae0de : add byte ptr [rax], al ; retf 0xb
0x00000000004ae4de : add byte ptr [rax], al ; retf 0xe
0x00000000004aeafe : add byte ptr [rax], al ; retf 1
0x00000000004b1a32 : add byte ptr [rax], al ; retf 2
0x00000000004b1c32 : add byte ptr [rax], al ; retf 3
0x00000000004ad986 : add byte ptr [rax], al ; retf 4
0x00000000004b2032 : add byte ptr [rax], al ; retf 5
0x00000000004b2232 : add byte ptr [rax], al ; retf 6
0x00000000004b2432 : add byte ptr [rax], al ; retf 7
0x00000000004b2632 : add byte ptr [rax], al ; retf 8
0x00000000004b2832 : add byte ptr [rax], al ; retf 9
0x00000000004b1e1e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004bea0e : add byte ptr [rax], al ; rol byte ptr [rdx], 0xfe ; call rdi
0x00000000004ae226 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004be582 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; and al, 0xf4 ; call rax
0x00000000004c6292 : add byte ptr [rax], al ; sub al, 0x7d ; add byte ptr [rax], al ; cwde ; cli ; jmp rsp
0x00000000004c5556 : add byte ptr [rax], al ; sub dh, bh ; stc ; call rsi
0x000000000042f39c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000416636 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000046ae4f : add byte ptr [rax], al ; sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000004003d8 : add byte ptr [rax], al ; syscall
0x00000000004c8db2 : add byte ptr [rax], al ; test al, 0 ; add byte ptr [rax + 0x33], bh ; std ; call rsp
0x00000000004c0ab6 : add byte ptr [rax], al ; test al, 0x6f ; cmc ; jmp qword ptr [rax]
0x00000000004428d9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004c6f9a : add byte ptr [rax], al ; xor al, 0x8a ; add byte ptr [rax], al ; jo 0x4c6f97 ; cli ; jmp qword ptr [rdx]
0x0000000000451f47 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ecdb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a6c5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041caf6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041257e : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000413e0e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x413e29 ; ret
0x0000000000400d5e : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004882e1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000043ed3a : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x00000000004038f7 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000440f06 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440f2b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440f4f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440f6f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004260ed : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400ad3 : add byte ptr [rax], bh ; leave ; ret
0x00000000004c6ef7 : add byte ptr [rax], bh ; loope 0x4c6ef9 ; jmp qword ptr [rdx]
0x00000000004bc6d7 : add byte ptr [rax], bh ; ret 0x4b
0x00000000004c7717 : add byte ptr [rax], bh ; sub bl, bh ; call rsp
0x00000000004c41c7 : add byte ptr [rax], bl ; mov bh, 0xf8 ; call qword ptr [rdi]
0x00000000004bc6bf : add byte ptr [rax], bl ; ret 0x4b
0x00000000004c41f7 : add byte ptr [rax], ch ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c2307 : add byte ptr [rax], ch ; ret
0x00000000004c1347 : add byte ptr [rax], ch ; retf
0x000000000044f12d : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x00000000004c1847 : add byte ptr [rax], cl ; int1 ; cmc ; call qword ptr [rdx]
0x0000000000476a45 : add byte ptr [rax], cl ; je 0x476ab2 ; pop rbx ; ret
0x00000000004c4af7 : add byte ptr [rax], cl ; jg 0x4c4af8 ; call rdx
0x000000000049abee : add byte ptr [rax], cl ; mov byte ptr [rip + 0x232a49], 8 ; ret
0x00000000004c01c7 : add byte ptr [rax], cl ; push rbp ; cmc ; jmp qword ptr [rcx]
0x000000000049abf5 : add byte ptr [rax], cl ; ret
0x00000000004c2be7 : add byte ptr [rax], cl ; ret 0xfffd
0x00000000004bf047 : add byte ptr [rax], cl ; std ; hlt ; call qword ptr [rdx]
0x00000000004c420f : add byte ptr [rax], dh ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004a35cf : add byte ptr [rax], dh ; retf
0x00000000004a35df : add byte ptr [rax], dh ; retf 0x42
0x000000000040f3ef : add byte ptr [rax], dl ; add byte ptr [rax + 0x38], bh ; syscall
0x0000000000474816 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004c26bf : add byte ptr [rax], dl ; fincstp ; jmp qword ptr [rbx]
0x00000000004c3a2f : add byte ptr [rax], dl ; ja 0x4c3a2f ; call qword ptr [rcx]
0x000000000040110f : add byte ptr [rax], dl ; jmp 0x401073
0x00000000004c412f : add byte ptr [rax], dl ; mov dl, 0xf8 ; call qword ptr [rdi]
0x00000000004a35c7 : add byte ptr [rax], dl ; retf
0x00000000004bf02f : add byte ptr [rax], dl ; std ; hlt ; call qword ptr [rax]
0x00000000004b3eb2 : add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x45
0x0000000000470efd : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047851d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000047e37d : add byte ptr [rax], r8b ; call rbx
0x000000000046aced : add byte ptr [rax], r8b ; mov eax, 0x3f ; syscall
0x00000000004174dd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; jmp 0x4174ba
0x0000000000474a85 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043b3ed : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042cb8d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043b42d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047ae85 : add byte ptr [rax], r8b ; pop rbx ; ret
0x000000000041362d : add byte ptr [rax], r8b ; ret
0x000000000049a245 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000413ded : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043f576 : add byte ptr [rbp + 0x14], dh ; mov eax, 0 ; syscall
0x000000000046af56 : add byte ptr [rbp + 0x14], dh ; mov eax, 0x14 ; syscall
0x000000000043f5d6 : add byte ptr [rbp + 0x14], dh ; mov eax, 1 ; syscall
0x000000000043f516 : add byte ptr [rbp + 0x14], dh ; mov eax, 2 ; syscall
0x000000000043f7c6 : add byte ptr [rbp + 0x14], dh ; mov eax, 3 ; syscall
0x00000000004675f7 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x0000000000468457 : add byte ptr [rbp + 0x39440753], cl ; retf -0x72f1
0x000000000041b631 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041b7ae : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047613b : add byte ptr [rbp + 0x39], cl ; retf
0x000000000047893c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c79e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c86e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000046907c : add byte ptr [rbp + 0x4b], cl ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000474857 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x00000000004c4af3 : add byte ptr [rbp + 0x7f080000], cl ; stc ; call rdx
0x000000000045a957 : add byte ptr [rbp + 0xa], dh ; jmp 0x45a985
0x00000000004a0a52 : add byte ptr [rbp + 0xa], dh ; jmp 0x4a0a80
0x00000000004787c2 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x000000000047915f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000047904f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000478864 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004ae377 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000046517e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047841a : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000049ede4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000489891 : add byte ptr [rbp - 0x36], dh ; jmp 0x489868
0x000000000048cac1 : add byte ptr [rbp - 0x36], dh ; jmp 0x48ca98
0x00000000004428da : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ae623 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000475e2a : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf -0x7cf1
0x0000000000452b89 : add byte ptr [rbp - 0x75], cl ; jl 0x452bba ; and byte ptr [rax + 1], cl ; ret
0x000000000045ce29 : add byte ptr [rbp - 0x75], cl ; jl 0x45ce5a ; and byte ptr [rax + 1], cl ; ret
0x000000000040dcc7 : add byte ptr [rbp - 0x76208037], al ; retf -0x2509
0x000000000046240f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000448314 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x0000000000423c0d : add byte ptr [rbp - 0x77], cl ; retf
0x00000000004674f5 : add byte ptr [rbp - 0x77], cl ; retf 0x694d
0x000000000043e1dc : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x0000000000416722 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x77], 0x1d ; ret
0x00000000004807ef : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000004bde60 : add byte ptr [rbp - 3], dh ; jmp rax
0x00000000004c8aab : add byte ptr [rbp], al ; add byte ptr [rax - 0x10], al ; cld ; call qword ptr [rax]
0x00000000004293a9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000474a78 : add byte ptr [rbx + 0x2566f00d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043e52b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000004703c0 : add byte ptr [rbx + 0x25d93115], cl ; add bh, dh ; ret 0x804
0x0000000000411648 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000417b76 : add byte ptr [rbx + 0x2b4bfa05], al ; add byte ptr [rcx], al ; ret
0x00000000004172a7 : add byte ptr [rbx + 0x2b545505], al ; add byte ptr [rcx], al ; ret
0x000000000047bd21 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000442d0e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a86d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043b3ff : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043af2f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000047f55a : add byte ptr [rbx + 0x4bcd40], bh ; jmp 0x47f533
0x0000000000420357 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000434f7f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000470ef6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041e827 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000413041 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411fc5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046346e : add byte ptr [rbx + 0x7501046a], al ; retf -0x38b8
0x000000000049e25f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483d65 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f8aa : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c68fb : add byte ptr [rbx + rax*4 - 0x54800000], dl ; cli ; call rdx
0x00000000004c10eb : add byte ptr [rbx + rbp - 0x45f00000], al ; cmc ; call qword ptr [rax]
0x00000000004bf0f3 : add byte ptr [rbx + rcx + 0xc80000], cl ; cmc ; call rdi
0x0000000000400654 : add byte ptr [rbx + rcx*4 + 0x15], al ; retf
0x0000000000400e6f : add byte ptr [rbx + rcx*4 + 0x2d], al ; stc ; ret 0x2c
0x000000000045c5a6 : add byte ptr [rbx + rcx*4 + 0x2d], cl ; ret 0x2718
0x000000000046a726 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x000000000047055b : add byte ptr [rbx + rcx*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x0000000000475282 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a627 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000480137 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004c58f3 : add byte ptr [rbx + rsi*2 + 0x12580000], cl ; cli ; jmp rdx
0x0000000000460938 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047ca47 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47ca61 ; ret
0x0000000000467cea : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x00000000004115df : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e5a6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043e59f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043e598 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043e591 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043e58a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043e583 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000045e0de : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043e2f5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043e2e0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000474ae1 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047534e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000041a567 : add byte ptr [rbx - 0x76b3fe1e], al ; retf
0x0000000000443ecf : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000463268 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000410e44 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043d3e6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406883 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462e94 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000407420 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000040b354 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0xf
0x000000000040a4f8 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x00000000004c1ce0 : add byte ptr [rbx - 0xa], cl ; call qword ptr [rsi]
0x0000000000442d6f : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x000000000041703e : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004a3ef4 : add byte ptr [rbx - 7], bh ; call qword ptr [rax]
0x00000000004c426b : add byte ptr [rbx*2 - 0x48300000], al ; clc ; jmp qword ptr [rsi]
0x0000000000470e47 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000494425 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000044f22f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000046594f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041b56f : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000489c0d : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000426a66 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e5ce : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000410649 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000040fce2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004752bf : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000415f06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000470ef3 : add byte ptr [rcx + 0x5d5b006c], dh ; jmp rax
0x0000000000464b8c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042fdce : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004039f3 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x000000000042e64c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b278 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000049a310 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x000000000046aeef : add byte ptr [rcx + 0xc], bh ; mov eax, ecx ; syscall
0x00000000004407a5 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d6e4 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d667 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041b267 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f56e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403dd5 : add byte ptr [rcx + 0xf], cl ; ret
0x0000000000417c8b : add byte ptr [rcx + 0xf], cl ; retf -0xcf
0x000000000043daef : add byte ptr [rcx + 1], cl ; ret
0x000000000049b4cf : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042085a : add byte ptr [rcx + 9], al ; ret
0x0000000000412f92 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c26bb : add byte ptr [rcx + rax*2], dl ; add byte ptr [rax], dl ; fincstp ; jmp qword ptr [rbx]
0x000000000042cb8f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412f93 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000441053 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000044f12f : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x0000000000473d1a : add byte ptr [rcx + rcx*4 - 0x16], al ; xor edi, edi ; call 0x440008
0x000000000047e4cf : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000441187 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004456e2 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004c6ef3 : add byte ptr [rcx + rcx*4 - 0x1ec80000], cl ; cli ; jmp qword ptr [rdx]
0x000000000041af8a : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x0000000000400465 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000049caaf : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000440fbc : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000045a640 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x466936
0x000000000044563c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000440fcb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000004c7713 : add byte ptr [rcx + rdx*4 + 0x28380000], ch ; sti ; call rsp
0x00000000004c568b : add byte ptr [rcx + rsi*2], ah ; add byte ptr [rax], al ; jo 0x4c569d ; cli ; jmp rdx
0x0000000000400d93 : add byte ptr [rcx - 0x2fe2763e], cl ; ret
0x000000000048f06b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048c1b3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000488fb3 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045b3e4 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000041aabf : add byte ptr [rcx - 0x43], al ; adc byte ptr [rax], ch ; add cl, bpl ; retf -2
0x0000000000419d91 : add byte ptr [rcx - 0x44], al ; retf
0x0000000000405614 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x000000000044a083 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000044a0a0 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044a0bd : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000041a500 : add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000483180 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000046353f : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047fe6b : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x0000000000440abf : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e9ef : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000044900d : add byte ptr [rcx - 0x76ec7738], cl ; retf -0x1f7d
0x000000000044aca7 : add byte ptr [rcx - 0x77], al ; add al, 0x24 ; mov r12, rsi ; jmp 0x44ac85
0x0000000000442a37 : add byte ptr [rcx - 0x77], al ; ret
0x000000000044f44a : add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x0000000000473518 : add byte ptr [rcx - 0x77], cl ; call 0xffffffffca8c4473
0x0000000000425a03 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000041bbc7 : add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00000000004436ea : add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443717 : add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004105e7 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411eb3 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000458dee : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000491d6b : add byte ptr [rcx - 0x7d], cl ; jmp 0x491d87
0x00000000004964eb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496507
0x0000000000496aeb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496b07
0x0000000000496deb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496e07
0x00000000004970eb : add byte ptr [rcx - 0x7d], cl ; jmp 0x497107
0x00000000004973eb : add byte ptr [rcx - 0x7d], cl ; jmp 0x497407
0x00000000004976eb : add byte ptr [rcx - 0x7d], cl ; jmp 0x497707
0x00000000004443c7 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000446137 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046cb3f : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x0000000000422bef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041fea0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004217bf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ec99 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x000000000041de03 : add byte ptr [rcx - 0x80], al ; stc ; add dword ptr [rdi + rcx + 0x44], eax ; retf -0x76b8
0x0000000000418e6f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041ab62 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000047cf21 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047ca4a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004a3558 : add byte ptr [rcx - 8], dl ; call qword ptr [rax]
0x0000000000426212 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426238 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000443322 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000474a7e : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x000000000044451c : add byte ptr [rcx], bh ; ret
0x0000000000400d2c : add byte ptr [rcx], bh ; ret 0x860f
0x0000000000468309 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x000000000049cb20 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045bb6c : add byte ptr [rcx], ch ; ret 0xd089
0x000000000040f4d3 : add byte ptr [rcx], cl ; ret
0x000000000041429a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000043ed3b : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x000000000047b647 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ecdc : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046b28f : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b28a ; ret
0x000000000046af0a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46af41 ; ret
0x0000000000488cd7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000413e0f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413e28 ; ret
0x000000000047a938 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004882e2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000447f6e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000447167 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004475ee : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044453b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046bd57 : add byte ptr [rcx], dh ; sar byte ptr [rdx + 1], 0xeb ; retf
0x000000000046554b : add byte ptr [rdi + 0x4a208c], bh ; call 0x401858
0x000000000041b15f : add byte ptr [rdi + 0x4a24e8], bh ; call 0x417c58
0x000000000041b15e : add byte ptr [rdi + 0x4a24e8], dil ; call 0x417c59
0x000000000041b17e : add byte ptr [rdi + 0x4a2517], bh ; call 0x417c58
0x000000000041b17d : add byte ptr [rdi + 0x4a2517], dil ; call 0x417c59
0x00000000004425c2 : add byte ptr [rdi + 0x4a4ddd], bh ; mov eax, ebx ; syscall
0x00000000004425f1 : add byte ptr [rdi + 0x4a4de8], bh ; mov eax, ebx ; syscall
0x0000000000444e25 : add byte ptr [rdi + 0x4a547f], bh ; call 0x401858
0x0000000000444e24 : add byte ptr [rdi + 0x4a547f], dil ; call 0x401859
0x0000000000444e0c : add byte ptr [rdi + 0x4a5498], bh ; call 0x401858
0x0000000000444e0b : add byte ptr [rdi + 0x4a5498], dil ; call 0x401859
0x000000000044f734 : add byte ptr [rdi + 0x4a6d20], bh ; mov eax, ecx ; syscall
0x0000000000454dd4 : add byte ptr [rdi + 0x4b2d21], bh ; call 0x401858
0x0000000000454e06 : add byte ptr [rdi + 0x4b2d88], bh ; call 0x401858
0x0000000000454ded : add byte ptr [rdi + 0x4b2db8], bh ; call 0x401858
0x0000000000474d82 : add byte ptr [rdi + 0x4b61d4], bh ; call 0x401858
0x0000000000432d85 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000445af0 : add byte ptr [rdi + 0x6cd1b0], bh ; call rax
0x0000000000445aef : add byte ptr [rdi + 0x6cd1b0], r15b ; call rax
0x0000000000402cf7 : add byte ptr [rdi + 0x6cd200], bh ; call rbx
0x000000000047ac71 : add byte ptr [rdi + 0x6cd4a0], bh ; call rax
0x000000000047ad9c : add byte ptr [rdi + 0x6cd4a4], bh ; call rdx
0x000000000049c169 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049c191 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c4523 : add byte ptr [rdi + rbx*2 - 0x25b80000], bh ; clc ; call qword ptr [rax]
0x00000000004c450b : add byte ptr [rdi + rbx*2 - 0x25c00000], ah ; clc ; call qword ptr [rbx]
0x000000000045bac4 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045aab0 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004436e7 : add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x0000000000443714 : add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x00000000004437a1 : add byte ptr [rdi - 0x76b7ff94], bl ; retf 0x348
0x00000000004a3ecc : add byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x00000000004c6293 : add byte ptr [rdi*2 + 0x4f980000], ch ; cli ; jmp rsp
0x000000000043471a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043e487 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043577f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004357ef : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448f0e : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462e87 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000044837a : add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf -0x7bc0
0x0000000000422a5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000466a40 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000041280f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042e65f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042cebf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042615f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042614f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042613f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004673e7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d948 : add byte ptr [rdi], cl ; ret 0x4389
0x0000000000403373 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000004497ba : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000420854 : add byte ptr [rdi], cl ; test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460f09 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000452089 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047dd18 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044a29c : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x76fffff9], ebp ; retf -0x74b7
0x000000000040ee59 : add byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042016a : add byte ptr [rdi], cl ; test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045e30b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c35b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x0000000000467e99 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000443326 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000467e0d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046bd1a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000476135 : add byte ptr [rdi], cl ; xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000042677e : add byte ptr [rdx + 0x42fc80], bh ; cmove rax, rdx ; ret
0x000000000043aeef : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000043973f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000444d5f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000049c306 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004adf77 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004c2f8b : add byte ptr [rdx + rcx*2], ah ; add byte ptr [rax], al ; nop ; sbb al, 0xf8 ; call qword ptr [rax]
0x00000000004c6f9b : add byte ptr [rdx + rcx*4], dh ; add byte ptr [rax], al ; jo 0x4c6f96 ; cli ; jmp qword ptr [rdx]
0x00000000004bef73 : add byte ptr [rdx + rcx], cl ; add byte ptr [rax], al ; js 0x4bef7d ; hlt ; call qword ptr [rbx]
0x0000000000469b50 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469b65
0x0000000000489065 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044f9ad : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000400462 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x00000000004a3b5c : add byte ptr [rdx], bl ; stc ; call qword ptr [rax + 0x20fff919]
0x00000000004a3944 : add byte ptr [rip + 0x1c90fff9], bl ; stc ; jmp qword ptr [rax]
0x0000000000442ad7 : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000042e954 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004581a3 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000426054 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440f95 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000441182 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x000000000044104e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440fc6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000441400 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000441173 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000044103f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440fb7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049e877 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c2be3 : add byte ptr [rsi + rax*2], bh ; add byte ptr [rax], cl ; ret 0xfffd
0x00000000004c6bdb : add byte ptr [rsi + rax*4], dh ; add byte ptr [rax - 0x2c], al ; cli ; jmp rsi
0x00000000004c13d3 : add byte ptr [rsi + rbp], ch ; add byte ptr [rax - 0x32], ch ; cmc ; call rdx
0x00000000004c94e0 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c33fb : add byte ptr [rsi + rcx*2 + 0x2ff00000], dl ; clc ; jmp rsp
0x00000000004c73cb : add byte ptr [rsi + rcx*4], ah ; add byte ptr [rax - 0x69], dh ; std ; call rcx
0x00000000004bfb6b : add byte ptr [rsi + rdx], al ; add byte ptr [rax], al ; push rax ; xor al, 0xf5 ; call qword ptr [rax]
0x000000000046adfd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x00000000004400fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1c ; syscall
0x000000000046ad0d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x66 ; syscall
0x00000000004400dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa ; syscall
0x00000000004430cd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004a3e9c : add byte ptr [rsi - 7], dh ; call qword ptr [rax]
0x00000000004be587 : add byte ptr [rsi], ah ; and al, 0xf4 ; call rax
0x00000000004bcf6f : add byte ptr [rsi], dh ; or cl, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004c49f3 : add byte ptr [rsp + 0x7cd80000], cl ; stc ; call rdi
0x00000000004c420b : add byte ptr [rsp + rbx*2 - 0x48d00000], ah ; clc ; call qword ptr [rcx]
0x00000000004c41f3 : add byte ptr [rsp + rbx*2 - 0x48d80000], cl ; clc ; call qword ptr [rcx]
0x00000000004c41c3 : add byte ptr [rsp + rbx*2], bl ; add byte ptr [rax], bl ; mov bh, 0xf8 ; call qword ptr [rdi]
0x00000000004c41db : add byte ptr [rsp + rbx*2], dh ; add byte ptr [rax], ah ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c01c3 : add byte ptr [rsp + rbx], bl ; add byte ptr [rax], cl ; push rbp ; cmc ; jmp qword ptr [rcx]
0x00000000004c7a0b : add byte ptr [rsp + rdx*4 + 0x36200000], ah ; sti ; jmp qword ptr [rdx]
0x00000000004c79c3 : add byte ptr [rsp + rdx*4], bl ; add al, bh ; mov esi, ebx ; jmp qword ptr [rsi]
0x00000000004bf9cb : add byte ptr [rsp + rdx], ah ; add al, dh ; sub esi, ebp ; jmp qword ptr [rsi]
0x00000000004c59fb : add byte ptr [rsp + rsi*2 + 0x16800000], dl ; cli ; jmp qword ptr [rax]
0x00000000004c8a1b : add byte ptr [rsp - 0x48b00000], dh ; cld ; call qword ptr [rax]
0x00000000004c09b3 : add byte ptr [rsp], cl ; add byte ptr [rax + 0x6e], bh ; cmc ; call qword ptr [rsi]
0x000000000045cbf6 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f1ca : add byte ptr ds:[rax], al ; add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000004b3eb1 : add byte ptr ds:[rax], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x45
0x000000000046a020 : add byte ptr es:[rax + 0x39], cl ; retf
0x000000000045c8e4 : add byte ptr es:[rax + 0x63], cl ; retf -0x76b8
0x0000000000469707 : add byte ptr es:[rax + 0xf], cl ; retf -0x76b8
0x0000000000469e4b : add byte ptr es:[rax + 1], cl ; retf
0x00000000004694d7 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091e2f
0x00000000004680c3 : add byte ptr es:[rax - 0x7d], cl ; ret
0x00000000004c0c05 : add byte ptr es:[rax], al ; retf
0x0000000000467e98 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467e0c : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000469b4f : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469b66
0x00000000004c2ccc : add byte ptr fs:[r8], r8b ; mov al, 0 ; clc ; call rsp
0x00000000004839b5 : add byte ptr fs:[rax], al ; add al, ch ; ret 0xf9a1
0x0000000000425e08 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004428d7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000413de0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c4af5 : add byte ptr gs:[rax], al ; or byte ptr [rdi - 7], bh ; call rdx
0x0000000000412543 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000045bac2 : add byte ptr ss:[r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045aaae : add byte ptr ss:[r15 + r9 + 0x45], cl ; ret 0xf4c
0x000000000045a63e : add byte ptr ss:[r9 + r9*4 - 9], cl ; call 0x466938
0x00000000004a3730 : add ch, 0xf8 ; call qword ptr [rax]
0x00000000004ae383 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000414b10 : add ch, al ; pop rdx ; retf
0x0000000000458abf : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb5dc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb5dd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000046759b : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458fe0 : add ch, byte ptr [rcx] ; retf -0x2e77
0x0000000000464e9a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d720 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000472638 : add ch, cl ; ret 0xfffd
0x00000000004bf0f9 : add ch, dh ; call rdi
0x000000000045ab89 : add cl, bl ; in eax, -0x21 ; loopne 0x45ab1e ; ret 0xe680
0x00000000004ba9aa : add cl, bl ; retf -0x156f
0x000000000041aac4 : add cl, bpl ; retf -2
0x0000000000439767 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045e01e : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000489704 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048972d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000044ba8c : add cl, byte ptr [rax + 0x39] ; int 0xf
0x0000000000449d43 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046fa2b : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004324aa : add cl, byte ptr [rax + 0x39] ; retf -0x7df1
0x000000000045c82d : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000041d7fc : add cl, byte ptr [rax + 0xf] ; retf -0x7cb8
0x0000000000411029 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000483fc5 : add cl, byte ptr [rax + 1] ; ret
0x000000000044d3b3 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x000000000045a730 : add cl, byte ptr [rax - 0x73] ; js 0x45a754 ; call 0x466957
0x0000000000439768 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004396d5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047c071 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x0000000000416ee2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041b362 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000047b520 : add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fd30
0x000000000046b359 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000479a7c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000004238a0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000448954 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000423903 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004644c1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bff68 : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000048a0f3 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004355c2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000403e0b : add cl, byte ptr [rcx + 0x75] ; retf
0x000000000047d6b4 : add cl, byte ptr [rcx - 0x73] ; jl 0x47d686 ; adc byte ptr [rax - 0x77], cl ; retf -0x74b8
0x000000000043f73f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043f697 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000404518 : add cl, byte ptr [rdi] ; retf -0x74b8
0x000000000041b7a8 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000463065 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000046e479 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e25d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c7eff : add cl, byte ptr [rdx] ; ret
0x000000000047674d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x000000000044413f : add cl, ch ; ret
0x00000000004086f8 : add cl, ch ; ret 0xffe2
0x000000000045a739 : add cl, ch ; ret 0xffe8
0x0000000000472564 : add cl, ch ; ret 0xfffd
0x0000000000407c64 : add cl, ch ; retf
0x000000000048ba7a : add cl, ch ; retf -0xe
0x000000000041aac5 : add cl, ch ; retf -2
0x000000000043f14f : add cl, ch ; retf -4
0x0000000000453bc0 : add cl, ch ; retf -6
0x0000000000400ad8 : add cl, cl ; ret
0x00000000004ba863 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x00000000004ba862 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x00000000004bfe70 : add dh, ah ; ret
0x00000000004b202b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000041828b : add dh, al ; and al, 0x10 ; add al, ch ; retf 0x3a1
0x00000000004bce8f : add dh, al ; or cl, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b1477 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435773 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004bcf97 : add dh, bl ; or cl, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000043ffab : add dh, bl ; ret
0x0000000000484458 : add dh, byte ptr [rax] ; jmp 0x480ef1
0x00000000004bfd6e : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049e882 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x0000000000470a50 : add dh, byte ptr [rdi + rbx - 0x7d] ; retf 0x4108
0x000000000049e22a : add dh, dh ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000041825a : add dh, dh ; ret
0x0000000000447375 : add dh, dh ; ret 0x4801
0x0000000000426918 : add dh, dh ; ret 0x7404
0x0000000000400f6a : add dh, dh ; ret 0x7420
0x000000000043be17 : add dh, dh ; ret 0x7501
0x000000000043be24 : add dh, dh ; ret 0x7502
0x000000000043be31 : add dh, dh ; ret 0x7504
0x000000000043bde9 : add dh, dh ; ret 0x7510
0x000000000043bdf6 : add dh, dh ; ret 0x7520
0x000000000043be03 : add dh, dh ; ret 0x7540
0x000000000041b7a5 : add dh, dh ; ret 0xf02
0x0000000000470a3a : add dh, dh ; ret 0xf08
0x00000000004a375c : add dl, 0xf8 ; call qword ptr [rax]
0x000000000046d08b : add dl, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004c9756 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x000000000049d533 : add dword ptr [r11], esp ; add cl, ch ; ret
0x00000000004c1e54 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x000000000044a086 : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000046279e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462ef2 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000004496f0 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043aef1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000047ea71 : add dword ptr [rax + 0x29], ecx ; retf -0x72b8
0x000000000048add2 : add dword ptr [rax + 0x29], ecx ; retf -0x7cb8
0x000000000047e711 : add dword ptr [rax + 0x29], ecx ; retf 0x148
0x0000000000415b61 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000004748c9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004748db : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479c10 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000459b5d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000041ca9d : add dword ptr [rax + 0x39], ecx ; retf
0x000000000047c434 : add dword ptr [rax + 0x39], ecx ; retf 0xf40
0x000000000049cc59 : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000475b26 : add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000047bfbd : add dword ptr [rax + 1], ecx ; ret
0x000000000040dc46 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049e872 : add dword ptr [rax + 3], edi ; je 0x49e889 ; ret
0x000000000041cc5a : add dword ptr [rax + 9], ecx ; retf -0x76b8
0x00000000004c5226 : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000004ba45b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4ba4c7 ; retf
0x0000000000458606 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x0000000000402943 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049b5ba : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439741 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000047476d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004396d2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000415963 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000041913e : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000415afa : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000465621 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471da7 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000041384f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000047b524 : add dword ptr [rax - 0x77], ecx ; retf
0x00000000004746cd : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004258c2 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000473984 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046279f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000450949 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041b366 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000044493c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452e23 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x000000000044704e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000489fe4 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047d7e3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462ef3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000048142a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048921c : add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c6685 : add dword ptr [rax], 0xfa88d800 ; call rsi
0x000000000049adcb : add dword ptr [rax], eax ; add bl, ch ; retf
0x0000000000410166 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044c596 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044b70e : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000473a94 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004475be : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000412686 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5b004a1e], ah ; ret
0x000000000047ee07 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000421169 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041b51b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000411f06 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004183d0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000044f4a5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049bff5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000464b18 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041e636 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e760 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405b17 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041cb07 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040ee5d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042368d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000449b44 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042569e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042c10f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004235e1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040da76 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040da26 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d8da : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040da4e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da9e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d9b3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d93e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040db3e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040db12 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d980 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d90e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000044c8f2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004640a0 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444dc1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b147a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b062a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b0452 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b044a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0be2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004b048a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0482 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0c22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000049c16b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401738 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440f97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000046a1c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a194
0x000000000046bd5b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46bd31
0x0000000000486fd5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x486faa
0x000000000049ca5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000442a1e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ee03 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000044f031 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049c6d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a6be : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000441184 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000441050 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440fc8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000044140e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000462bb4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004624c9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c86b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415f63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043eadc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004444e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004003d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000041b7ac : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000004251e8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000416720 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x77], 0x1d ; ret
0x000000000049bfce : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040f51e : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000400e6d : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x2d], al ; stc ; ret 0x2c
0x0000000000467ce8 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410e42 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462e92 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000044f448 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x00000000004461bc : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041fe9e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004497be : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000468307 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x0000000000414298 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000447165 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000448378 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf -0x7bc0
0x000000000043be15 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043be22 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043be2f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043bde7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043bdf4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043be01 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000043eef9 : add dword ptr [rax], eax ; jmp 0x43ee27
0x00000000004213d8 : add dword ptr [rax], eax ; ret
0x0000000000425cc1 : add dword ptr [rax], edi ; ret
0x00000000004258c6 : add dword ptr [rax], edi ; retf 0xf41
0x000000000043e297 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00000000004ba9a4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000047e4c2 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000048a0d3 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000041ec9d : add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x0000000000485ff7 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000442849 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bad8a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435632 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004b996a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test dl, bh ; retf -0x2081
0x000000000040d67d : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c97a1 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c979e : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000049d534 : add dword ptr [rbx], esp ; add cl, ch ; ret
0x000000000045c8df : add dword ptr [rcx + 0x26f1c60d], ecx ; add byte ptr [rax + 0x63], cl ; retf -0x76b8
0x000000000046a2d9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x000000000044718a : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000447618 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000041bdda : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439771 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000004622b0 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000049dbaf : add dword ptr [rcx - 0x77], ecx ; retf -0x4617
0x000000000049adc6 : add dword ptr [rcx - 0x78], eax ; xchg eax, esi ; jo 0x49add6 ; add byte ptr [rax], al ; jmp 0x49ada4
0x000000000044616d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000040437d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000004256b7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043fa01 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000047773b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004752da : add dword ptr [rcx], edi ; retf
0x00000000004ba8b5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x000000000041de07 : add dword ptr [rdi + rcx + 0x44], eax ; retf -0x76b8
0x00000000004c711d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c705d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c70bd : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c706e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c70ce : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c712e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c2dbd : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c7efb : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c7e4a : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043e2f8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e2e3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045c051 : add dword ptr [rdi], ecx ; test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004475ba : add dword ptr [rdi], ecx ; test eax, edi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000474ae7 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475354 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e1bd : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000049a080 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x0000000000403e05 : add dword ptr [rdx + 0x75], edx ; rol dword ptr [rax + 0x7549027a], 1 ; retf
0x000000000043dd82 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043597d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048855b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bfe6e : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046da87 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004ba58f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000046dd77 : add dword ptr [rdx - 0x77], eax ; je 0x46dd07 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046dd76 : add dword ptr [rdx - 0x77], eax ; je 0x46dd08 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x00000000004c10dd : add dword ptr [rdx], 0x43 ; ret
0x00000000004c6e2d : add dword ptr [rdx], 0x48 ; ret
0x00000000004c951c : add dword ptr [rdx], 0x54 ; ret
0x00000000004c2c03 : add dword ptr [rdx], 0x55 ; ret
0x00000000004c6e24 : add dword ptr [rdx], 0x5b ; ret
0x00000000004c94c4 : add dword ptr [rdx], 0x69 ; ret
0x0000000000417e1e : add dword ptr [rdx], 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c5374 : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c514c : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004c06dc : add dword ptr [rdx], 2 ; ret
0x00000000004bff7a : add dword ptr [rdx], ecx ; ret
0x00000000004bf89b : add dword ptr [rip + 0x2a00e52], 2 ; retf
0x0000000000417b77 : add dword ptr [rip + 0x2b4bfa], 1 ; ret
0x00000000004172a8 : add dword ptr [rip + 0x2b5455], 1 ; ret
0x00000000004bf30e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf324 ; ret
0x00000000004bf31c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439752 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004c027e : add dword ptr [rsi], 0xa ; ret
0x00000000004c02f0 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c1e55 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400ddd : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c2886 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000497997 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c7f12 : add dword ptr es:[rdx], ecx ; ret
0x0000000000426d78 : add eax, 0x12ad3 ; ret
0x0000000000423848 : add eax, 0x14853 ; ret
0x00000000004261ea : add eax, 0x15e71 ; ret
0x00000000004267c4 : add eax, 0x17647 ; ret
0x00000000004213d5 : add eax, 0x1a966 ; ret
0x00000000004261ce : add eax, 0x1d ; ret
0x000000000044f9ac : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c199c : add eax, 0x2300e4a ; ret
0x0000000000488761 : add eax, 0x2455fa ; ret
0x0000000000476970 : add eax, 0x257382 ; jne 0x4769b9 ; ret
0x000000000047417c : add eax, 0x2596c7 ; mov qword ptr [rsi], rax ; ret
0x000000000047411b : add eax, 0x259730 ; ret
0x000000000047403a : add eax, 0x259811 ; add rsp, 8 ; ret
0x000000000044cdc2 : add eax, 0x280411 ; ret
0x0000000000445a52 : add eax, 0x288371 ; ret
0x0000000000444501 : add eax, 0x2898aa ; test eax, eax ; je 0x444519 ; ret
0x000000000041db69 : add eax, 0x2aebf6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417212 : add eax, 0x2b2ea9 ; ret
0x0000000000417b78 : add eax, 0x2b4bfa ; add ebx, esi ; ret
0x0000000000417316 : add eax, 0x2b53e9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040161b : add eax, 0x2c8a70 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2ca9a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2cb1f5 ; add ebx, esi ; ret
0x00000000004c1e53 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000489761 : add eax, 0x394d0000 ; retf
0x000000000043af88 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00000000004397b8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043b486 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043b009 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004397f9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047aac6 : add eax, 0x5b000000 ; ret
0x00000000004b201d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000419535 : add eax, 0x5c415d5b ; ret
0x00000000004b202d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000426e94 : add eax, 0x67 ; ret
0x000000000048a153 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043e1b7 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000042327d : add eax, 0x83480000 ; ret 0x4910
0x000000000042a701 : add eax, 0x83480000 ; ret 0xe910
0x00000000004231d1 : add eax, 0x83480000 ; ret 0xeb10
0x000000000043af8b : add eax, 0x8428d48 ; ret
0x00000000004261e2 : add eax, 0x8449 ; ret
0x000000000048583a : add eax, 0x89000001 ; ret 0x348
0x0000000000424d68 : add eax, 0x894d0000 ; retf
0x0000000000449d3d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000044a09e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044a0bb : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042f68a : add eax, 0xc0310000 ; ret
0x000000000043b00d : add eax, 0xc428d48 ; ret
0x000000000043baed : add eax, 0xc478d48 ; ret
0x0000000000441432 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000441457 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000004415a0 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000441639 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000435623 : add eax, 0xf7f0ff3 ; ret
0x000000000047397f : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000478aaa : add eax, 0xfffffff8 ; ret
0x000000000043e295 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466891 : add eax, 1 ; ret
0x0000000000444da5 : add eax, 2 ; push rax ; call rbx
0x0000000000466888 : add eax, 2 ; ret
0x0000000000421628 : add eax, 3 ; ret
0x0000000000426ee7 : add eax, 4 ; ret
0x000000000044f909 : add eax, dword ptr [0] ; ret
0x0000000000470e48 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004196d3 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000047139e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004196af : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x000000000044dfc8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041cf54 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046fd83 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042341d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a8a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423441 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004459f6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049e874 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49e887 ; ret
0x000000000044019c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000046a723 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044197d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004419d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441a54 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441b54 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000412da5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000421629 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040048a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000476a43 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x476ab4 ; pop rbx ; ret
0x0000000000495d1a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e2f3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e5cc : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000044900b : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf -0x1f7d
0x0000000000442a35 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004976e9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x497709
0x000000000041aba2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000442ad5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000470a38 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000004456e1 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000044563b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000444fea : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043e510 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e530 : add eax, dword ptr [rax] ; ret
0x00000000004c62c3 : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bff62 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047ebf1 : add eax, dword ptr [rbx] ; call rax
0x00000000004c7071 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x0000000000411cb4 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047ce7d : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c7fcb : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bf98a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046b07a : add eax, dword ptr [rcx + rdx] ; ret
0x000000000045699d : add eax, dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000471c55 : add eax, dword ptr [rdi] ; call rax
0x0000000000478854 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475fa9 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c70d1 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c7131 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bf6da : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c497a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bfe6a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c2882 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004717bb : add eax, dword ptr [rsp] ; call rax
0x000000000049778f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000444fe9 : add eax, dword ptr ss:[rax] ; mov rdi, rbx ; call r14
0x000000000043e5d8 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000049a0ee : add eax, eax ; jmp r8
0x000000000049b616 : add eax, eax ; jmp rax
0x000000000045a7b8 : add eax, eax ; ret
0x0000000000425e06 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000405686 : add eax, ebp ; hlt ; loop 0x405694 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b2be : add eax, ebp ; jmp rax
0x0000000000457e88 : add eax, ebp ; ret 0xfd44
0x000000000045a3cf : add eax, ebp ; retf
0x000000000049d64b : add eax, ebx ; cmp rdi, r8 ; jae 0x49d61b ; mov rdx, rcx ; jmp 0x49d633
0x0000000000416f83 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000425f0a : add eax, ecx ; ret
0x0000000000425f07 : add eax, edi ; add rax, rcx ; ret
0x0000000000426144 : add eax, edi ; ret
0x0000000000423b16 : add eax, edx ; sub rax, rdi ; ret
0x000000000049bb9e : add eax, esi ; jmp rax
0x0000000000467407 : add eax, esi ; ret
0x000000000045a7b7 : add eax, r8d ; ret
0x0000000000457cd8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047b8bd : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c0e23 : add ebp, dword ptr [rdi + 0x380e0a01] ; ret
0x00000000004c9759 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000047be6d : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004b94f7 : add ebp, ebp ; retf
0x00000000004c975b : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000004717b7 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000048879a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c70c2 : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000471453 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004bff78 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478b41 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004855ba : add ebx, ebp ; ret 0x8d48
0x00000000004357e3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x00000000004268a4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x426899 ; ret
0x0000000000486fd1 : add ecx, 8 ; mov esi, 1 ; jmp 0x486fae
0x00000000004397a5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000418d9a : add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000449d5f : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004644c7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000415cb5 : add ecx, dword ptr [rax + 0x39] ; retf -0x76b8
0x0000000000432aba : add ecx, dword ptr [rax + 0x39] ; retf 0x1073
0x000000000046dcb9 : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049b5be : add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004397a9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047de38 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041d55e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004195f8 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000004345d8 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x0000000000447585 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040e0bd : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e197 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000049ebe6 : add ecx, dword ptr [rax - 0x7f] ; jmp rax
0x0000000000412437 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048a113 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435552 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c7062 : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043b424 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e48f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004397a6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046dceb : add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x00000000004c220a : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c5758 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046b8bd : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000045236c : add ecx, ebp ; ret
0x000000000046b46b : add ecx, ebp ; retf -2
0x000000000042fcae : add ecx, ebx ; jmp r9
0x000000000042e652 : add ecx, ebx ; jmp rcx
0x000000000049a316 : add ecx, esi ; jmp rcx
0x0000000000470c37 : add edi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ef0f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000004647d7 : add edi, dword ptr [rcx] ; retf 0xf48
0x000000000042fcab : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004c5691 : add edi, edx ; jmp rdx
0x000000000047279c : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c96bb : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x0000000000476465 : add edx, eax ; jmp 0x47647a
0x00000000004796d2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452d33 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x00000000004445f0 : add edx, ebx ; loopne 0x444654 ; pop rbp ; ret
0x00000000004bf84a : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c297a : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044d7b7 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c97a2 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000435703 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f48c : add esi, ebx ; ret
0x000000000043e5c0 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042fca8 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004635b8 : add esi, esi ; ret 0x7420
0x0000000000487cf7 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000410721 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e719 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420577 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e701 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004736c2 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x00000000004736a4 : add esp, 0x140 ; pop rbx ; ret
0x000000000040f51b : add esp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000476c2d : add esp, 0x18 ; jmp r11
0x000000000043ffed : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000417701 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004115a7 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f460 : add esp, 0x18 ; ret
0x00000000004445d0 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x00000000004525b3 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00000000004880cc : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445b11 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415a0f : add esp, 0x20 ; pop rbx ; ret
0x000000000047b159 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040dc18 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041526e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000488021 : add esp, 0x28 ; ret
0x0000000000476f9c : add esp, 0x30 ; jmp r11
0x000000000046aec2 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478739 : add esp, 0x30 ; pop rbx ; ret
0x00000000004770ae : add esp, 0x30 ; ret
0x000000000043ee20 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004787c6 : add esp, 0x38 ; ret
0x000000000047864c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046ae32 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000478858 : add esp, 0x48 ; ret
0x00000000004785da : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000488174 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000466a4c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f710 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478942 : add esp, 0x68 ; ret
0x000000000044284d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040ff11 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000040f28f : add esp, 0x80 ; pop rbx ; ret
0x0000000000414e27 : add esp, 0x80 ; ret
0x0000000000420036 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046aca9 : add esp, 0x90 ; pop rbx ; ret
0x000000000046acc7 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000041396d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040121f : add esp, 0x98 ; ret
0x000000000044fc69 : add esp, 0xd0 ; ret
0x000000000040f9f7 : add esp, 0xd8 ; ret
0x0000000000478515 : add esp, 8 ; jmp rax
0x0000000000411953 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041eed8 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043ff4a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004184f4 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ec40 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f513 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000488057 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000040f714 : add esp, 8 ; movzx eax, al ; ret
0x000000000041dcde : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000405a61 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004018f3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004135b8 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000423969 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473f91 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004babeb : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x00000000004c6c92 : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c7f11 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000044704d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000042384a : add qword ptr [rax], rax ; ret
0x00000000004c7efa : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000047f55e : add r11b, bpl ; retf 0x1f0f
0x000000000042678c : add r11b, sil ; ret
0x00000000004357e2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435772 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435702 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045fb3d : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000495dc0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049a0ed : add r8, rax ; jmp r8
0x0000000000454df1 : add r8b, bpl ; pop rax ; retf -6
0x0000000000474d86 : add r8b, bpl ; ret
0x0000000000483d87 : add r8b, bpl ; ret 0xf7da
0x000000000047ed7e : add r8b, bpl ; retf
0x000000000046d67f : add r8b, bpl ; retf -0x6bf
0x0000000000454e23 : add r8b, bpl ; retf -6
0x000000000042fcad : add r9, r11 ; jmp r9
0x00000000004ba9a9 : add r9b, bl ; retf -0x156f
0x000000000044ba8b : add r9b, byte ptr [r8 + 0x39] ; int 0xf
0x000000000044a0a3 : add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044a0c0 : add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000497572 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000478aa9 : add rax, -8 ; ret
0x000000000043e294 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466890 : add rax, 1 ; ret
0x0000000000466887 : add rax, 2 ; ret
0x00000000004668a0 : add rax, 3 ; ret
0x000000000044f908 : add rax, qword ptr [0] ; ret
0x00000000004717ba : add rax, qword ptr [r12] ; call rax
0x0000000000471c54 : add rax, qword ptr [r15] ; call rax
0x000000000044900a : add rax, qword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf -0x1f7d
0x000000000047ebf0 : add rax, qword ptr [rbx] ; call rax
0x0000000000478853 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475fa8 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044f907 : add rax, qword ptr fs:[0] ; ret
0x000000000049bb9d : add rax, r14 ; jmp rax
0x000000000049b615 : add rax, r8 ; jmp rax
0x000000000049b2bd : add rax, rbp ; jmp rax
0x0000000000425f09 : add rax, rcx ; ret
0x0000000000425f06 : add rax, rdi ; add rax, rcx ; ret
0x0000000000426143 : add rax, rdi ; ret
0x0000000000423b15 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047be6c : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004717b6 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042e651 : add rcx, r11 ; jmp rcx
0x000000000049a315 : add rcx, r14 ; jmp rcx
0x0000000000470c36 : add rdi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ef0e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042fcaa : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000047279b : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452d32 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004796d1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000476464 : add rdx, rax ; jmp 0x47647b
0x0000000000487cf6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000410720 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e718 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043e700 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004736a3 : add rsp, 0x140 ; pop rbx ; ret
0x000000000040f51a : add rsp, 0x178 ; pop rbx ; pop rbp ; ret
0x0000000000476c2c : add rsp, 0x18 ; jmp r11
0x000000000043ffec : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000004115a6 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f45f : add rsp, 0x18 ; ret
0x00000000004445cf : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x00000000004525b2 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00000000004880cb : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445b10 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415a0e : add rsp, 0x20 ; pop rbx ; ret
0x000000000047b158 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041526d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000488020 : add rsp, 0x28 ; ret
0x0000000000476f9b : add rsp, 0x30 ; jmp r11
0x000000000046aec1 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478738 : add rsp, 0x30 ; pop rbx ; ret
0x00000000004770ad : add rsp, 0x30 ; ret
0x000000000043ee1f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004787c5 : add rsp, 0x38 ; ret
0x000000000047864b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046ae31 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000478857 : add rsp, 0x48 ; ret
0x00000000004785d9 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000488173 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000466a4b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f70f : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478941 : add rsp, 0x68 ; ret
0x000000000044284c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f28e : add rsp, 0x80 ; pop rbx ; ret
0x0000000000414e26 : add rsp, 0x80 ; ret
0x000000000046aca8 : add rsp, 0x90 ; pop rbx ; ret
0x000000000041396c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040121e : add rsp, 0x98 ; ret
0x000000000044fc68 : add rsp, 0xd0 ; ret
0x000000000040f9f6 : add rsp, 0xd8 ; ret
0x0000000000478514 : add rsp, 8 ; jmp rax
0x0000000000411952 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041eed7 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043ff49 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004184f3 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ec3f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f512 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000488056 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000040f713 : add rsp, 8 ; movzx eax, al ; ret
0x000000000041dcdd : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004018f2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004135b7 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000423968 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042c37e : add sil, sil ; ret 0x7404
0x000000000048855a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004c09b5 : and al, 0 ; add byte ptr [rax + 0x6e], bh ; cmc ; call qword ptr [rsi]
0x0000000000491ce5 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000488558 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000488764 : and al, 0 ; ret
0x000000000041828e : and al, 0x10 ; add al, ch ; retf 0x3a1
0x000000000048cabf : and al, 0x10 ; add byte ptr [rbp - 0x36], dh ; jmp 0x48ca9a
0x000000000043f73d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c518 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004473f3 : and al, 0x10 ; call r12
0x000000000041b95d : and al, 0x10 ; call rax
0x00000000004650a9 : and al, 0x10 ; call rbx
0x0000000000400cc5 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000440731 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004476e7 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044804a : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000048801b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049cbc5 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x0000000000450866 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000419566 : and al, 0x14 ; pop r12 ; ret
0x000000000041dcdb : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044bc3c : and al, 0x18 ; call r14
0x0000000000400d22 : and al, 0x18 ; call rax
0x00000000004650a4 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000041b958 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000444d18 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000448430 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047b220 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x00000000004473ee : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000465182 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000419532 : and al, 0x1c ; je 0x419543 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000419531 : and al, 0x1c ; je 0x419544 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004476ec : and al, 0x20 ; call rax
0x0000000000466c07 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000044bc0e : and al, 0x20 ; mov qword ptr [rsp + 0x40], rax ; call 0x478679
0x0000000000450e83 : and al, 0x20 ; mov rdi, r12 ; call r15
0x00000000004b9724 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004787c0 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000489c0b : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000447b67 : and al, 0x28 ; call r12
0x0000000000448892 : and al, 0x28 ; call r14
0x00000000004471f4 : and al, 0x28 ; call r15
0x000000000044804f : and al, 0x28 ; call rax
0x0000000000447c1b : and al, 0x28 ; call rbx
0x0000000000466f22 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466caf : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041eb53 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048fc9f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044b47c : and al, 0x30 ; call r14
0x000000000047366f : and al, 0x30 ; call r9
0x0000000000449a9a : and al, 0x30 ; call rbx
0x000000000048813f : and al, 0x30 ; je 0x488153 ; mov edi, 0x6cb140 ; call rax
0x000000000040e159 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000466aed : and al, 0x30 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000449eda : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447291 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447c16 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000041af5d : and al, 0x30 ; mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000004822af : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048ce42 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000047896e : and al, 0x38 ; add rsp, 0x68 ; ret
0x000000000047366a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000449a95 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000411fa6 : and al, 0x38 ; mov rsi, r13 ; call 0x41e247
0x000000000041b995 : and al, 0x40 ; add al, ch ; ret
0x0000000000478649 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004785d7 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000044bc13 : and al, 0x40 ; call 0x478674
0x000000000044bc12 : and al, 0x40 ; call 0x478675
0x0000000000448e1a : and al, 0x40 ; call r15
0x0000000000466c0c : and al, 0x40 ; call rbx
0x00000000004491c1 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000476c2b : and al, 0x48 ; add esp, 0x18 ; jmp r11
0x000000000043ffeb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043f45e : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000476f9a : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x00000000004770ac : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000041e163 : and al, 0x48 ; call rax
0x000000000046fad4 : and al, 0x48 ; lea edi, dword ptr [rax + 0x6cb1e0] ; call rdx
0x000000000044238d : and al, 0x48 ; mov edx, eax ; mov eax, r12d ; syscall
0x0000000000447b62 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004471ef : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000448e15 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000467312 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049e04c : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000044acab : and al, 0x49 ; mov esp, esi ; jmp 0x44ac81
0x00000000004c2f8c : and al, 0x4a ; add byte ptr [rax], al ; nop ; sbb al, 0xf8 ; call qword ptr [rax]
0x000000000043f7d8 : and al, 0x4f ; add byte ptr [rax], al ; ret
0x000000000044bc37 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041cc9d : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000419561 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466e20 : and al, 0x60 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e46b : and al, 0x68 ; call rax
0x000000000041f7ab : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004c568c : and al, 0x71 ; add byte ptr [rax], al ; jo 0x4c569c ; cli ; jmp rdx
0x0000000000411fde : and al, 0x74 ; ret 0x8b4c
0x0000000000472d0a : and al, 0x75 ; ret
0x000000000047b9de : and al, 0x78 ; call r12
0x000000000047bead : and al, 0x78 ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000044888d : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b477 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048b7ff : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c684 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000447371 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041c166 : and al, 0x89 ; ret 0xb48b
0x000000000043f695 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000046af79 : and al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f539 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f599 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f5f9 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000043f7e9 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000049c0ab : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004787ef : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400cc9 : and al, 0xc ; call r12
0x0000000000400d1d : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047bc5a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040890b : and al, 0xe8 ; call rbx
0x0000000000409a64 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000409a7a : and al, 0xe8 ; nop ; ret 0xffff
0x0000000000409a1b : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x0000000000409a9c : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409ab2 : and al, 0xe8 ; pop rax ; ret 0xffff
0x00000000004099bc : and al, 0xe8 ; ret
0x0000000000409ac3 : and al, 0xe8 ; ret 0xffff
0x0000000000409240 : and al, 0xe8 ; retf -0x36
0x000000000040d040 : and al, 0xe8 ; retf -0x74
0x0000000000409134 : and al, 0xe8 ; salc ; retf
0x0000000000409260 : and al, 0xe8 ; stosb byte ptr [rdi], al ; retf -1
0x0000000000409973 : and al, 0xe8 ; xchg eax, edi ; ret
0x0000000000408635 : and al, 0xe9 ; retf
0x0000000000478680 : and al, 0xe9 ; retf 0x76
0x0000000000491a88 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049cfa5 : and al, 0xf ; ret 0x8348
0x00000000004be589 : and al, 0xf4 ; call rax
0x000000000042c486 : and al, 0xf8 ; jne 0x42c362 ; ret
0x0000000000491a41 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491a47 : and al, 0xf8 ; ret
0x00000000004919fb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000491a01 : and al, 0xfc ; ret
0x000000000044f9d7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044f9db : and al, 0xfe ; ret
0x000000000046a1c6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044fdec : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000048988f : and al, 8 ; add byte ptr [rbp - 0x36], dh ; jmp 0x48986a
0x000000000043e716 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047acd2 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004092b1 : and al, 8 ; call 0x405d14
0x00000000004092b0 : and al, 8 ; call 0x405d15
0x0000000000440648 : and al, 8 ; call rbx
0x0000000000488099 : and al, 8 ; je 0x4880ad ; mov edi, 0x6cb140 ; call rax
0x000000000041b105 : and al, 8 ; jmp 0x41a94e
0x000000000043f7a1 : and al, 8 ; jmp 0x43f718
0x000000000043fc0b : and al, 8 ; mov eax, 0x101 ; syscall
0x000000000043fcc2 : and al, 8 ; mov eax, 3 ; syscall
0x0000000000478380 : and al, 8 ; mov edi, 0x6cb140 ; call rax
0x000000000041ba14 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000409220 : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405d18
0x000000000040921f : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405d19
0x000000000040e316 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004423d2 : and al, 8 ; xor eax, eax ; syscall
0x00000000004a0b38 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000491e8e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000411646 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000040741e : and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000049ede3 : and al, byte ptr [rax] ; jne 0x49edcd ; pop rbx ; ret
0x00000000004a0a51 : and al, byte ptr [rax] ; jne 0x4a0a67 ; jmp 0x4a0a81
0x000000000049e1a4 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000042391a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004a3824 : and al, ch ; clc ; jmp qword ptr [rax]
0x0000000000474a7c : and ax, 0x100 ; pop rbx ; ret
0x000000000045d71e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a37f0 : and bh, bl ; clc ; jmp rax
0x00000000004748c3 : and bl, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004a39f0 : and bl, byte ptr [rax] ; stc ; call qword ptr [rdx + 0x22fff91e]
0x0000000000462a1b : and bl, ch ; retf -0x6f9a
0x000000000040dcbf : and bl, dh ; ret
0x0000000000412096 : and byte ptr [edx], cl ; mov eax, 2 ; syscall
0x000000000046763e : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000041a503 : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000415634 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049ea44 : and byte ptr [rax + 0x39], cl ; ret
0x000000000041a599 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000410e17 : and byte ptr [rax + 0x39], cl ; retf -0x428b
0x0000000000410024 : and byte ptr [rax + 0x63], cl ; shr al, cl ; ret
0x0000000000452b8e : and byte ptr [rax + 1], cl ; ret
0x00000000004239e8 : and byte ptr [rax + 9], cl ; retf -0x76b8
0x0000000000423b0d : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046598e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048f7e0 : and byte ptr [rax + rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000040ea80 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000466c08 : and byte ptr [rax - 0x73], cl ; je 0x466c37 ; call rbx
0x0000000000476fc6 : and byte ptr [rax - 0x75], cl ; jg 0x476ffa ; call r11
0x00000000004775b6 : and byte ptr [rax - 0x75], cl ; jg 0x4775ea ; call r11
0x0000000000477952 : and byte ptr [rax - 0x75], cl ; jg 0x477986 ; call r11
0x000000000041be73 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000045d64c : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000044bc0f : and byte ptr [rax - 0x77], cl ; and al, 0x40 ; call 0x478678
0x000000000040edc3 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469b54 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000446144 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x0000000000452666 : and byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045af2d : and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000044f2e4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44f2f8 ; call rax
0x000000000049d21b : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000445fde : and byte ptr [rax - 0x7d], cl ; ret
0x000000000041a504 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412e32 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000043e5a3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004920de : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a3d9c : and byte ptr [rax], dl ; stc ; jmp qword ptr [rax + 0x10fff90f]
0x000000000043ec5c : and byte ptr [rbp - 2], cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c7fce : and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bb4c8 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000405c68 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046763f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000445b13 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bf98d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bff65 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000046087e : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x00000000004558c0 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000463209 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004bde5c : and byte ptr [rbx - 3], dh ; inc dword ptr [rax] ; jne 0x4bde67 ; jmp rax
0x00000000004a3d84 : and byte ptr [rbx], dl ; stc ; jmp qword ptr [rax + 0x20fff912]
0x0000000000415635 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c48ae : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450e84 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000004525b5 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000004a3d7c : and byte ptr [rcx + rdi*8], dl ; jmp qword ptr [rax + 0x20fff913]
0x0000000000491a85 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000004460cc : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004a3d94 : and byte ptr [rcx], dl ; stc ; jmp qword ptr [rax + 0x20fff910]
0x000000000046a4fc : and byte ptr [rdi], ch ; add byte ptr es:[rax + 0x39], cl ; retf
0x00000000004460b9 : and byte ptr [rdi], cl ; test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043bdf0 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000046554e : and byte ptr [rdx], cl ; call 0x401855
0x000000000040042c : and byte ptr [rdx], cl ; mov eax, 2 ; syscall
0x00000000004a3d8c : and byte ptr [rdx], dl ; stc ; jmp qword ptr [rax + 0x20fff911]
0x000000000040042b : and byte ptr [rdx], r9b ; mov eax, 2 ; syscall
0x00000000004a3b78 : and byte ptr [rip + 0x1490fff9], dl ; stc ; call qword ptr [rax]
0x000000000042e6ea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c497d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004c7a10 : and byte ptr [rsi], dh ; sti ; jmp qword ptr [rdx]
0x0000000000466882 : and ch, 0xf ; je 0x4668a9 ; add rax, 2 ; ret
0x000000000046686d : and cl, 0xf ; je 0x466895 ; ret
0x000000000041b086 : and cl, bpl ; ret
0x000000000047eb33 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004bd2b1 : and cl, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004262cd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000041b087 : and cl, ch ; ret
0x00000000004268b7 : and dh, dh ; ret 0x7504
0x000000000045d71d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004bdf48 : and dl, al ; std ; push qword ptr [rax] ; ret 0xfffd
0x00000000004a3828 : and dl, ch ; clc ; jmp qword ptr [rax]
0x0000000000497e5e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457b39 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bb242 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000041659c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004105e9 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000048ee4c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000454dd6 : and dword ptr [rip + 0x71e8004b], ebp ; retf -6
0x00000000004b82f9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004bb241 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044f90b : and eax, 0 ; ret
0x000000000049cd3a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x0000000000411e0e : and eax, 0x29480005 ; ret
0x000000000047ca76 : and eax, 0x2d0 ; ret
0x000000000040ead1 : and eax, 0x30 ; call rax
0x000000000040ea89 : and eax, 0x30 ; call rdx
0x0000000000476973 : and eax, 0x38754000 ; ret
0x000000000047457d : and eax, 0x3d8b4800 ; ret 0x2592
0x000000000043e50d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e52d : and eax, 0x3fc00 ; ret
0x000000000043e4ec : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004712f0 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000043f61b : and eax, 0x50 ; add byte ptr [rax], al ; ret
0x000000000047417f : and eax, 0x6894800 ; ret
0x00000000004c0a9d : and eax, 0x6fa00000 ; cmc ; call qword ptr [rdx]
0x00000000004c0ab5 : and eax, 0x6fa80000 ; cmc ; jmp qword ptr [rax]
0x000000000043e560 : and eax, 0x7ff80000 ; ret
0x0000000000474a63 : and eax, 0x89485300 ; ret
0x000000000041b266 : and eax, 0x950f4100 ; ret
0x0000000000442ab7 : and eax, 0xc ; cmp eax, 4 ; je 0x442ac8 ; ret
0x0000000000442c08 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000041b181 : and eax, 0xc7e8004a ; retf -1
0x0000000000400ddf : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000444706 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000478b3c : and eax, 2 ; sub eax, 1 ; ret
0x0000000000497cb5 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000491d69 : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x491d89
0x000000000041659d : and ebp, edi ; pop rbx ; ret
0x0000000000442a52 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x442a65 ; ret
0x00000000004b99f4 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x000000000042fc65 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042f398 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000041a61b : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000041fe6c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041734c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000491a5e : and esi, 0xe0837fff ; jg 0x491a77 ; ret 0x5488
0x000000000043ebce : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000004c0ab4 : and rax, 0x6fa80000 ; cmc ; jmp qword ptr [rax]
0x000000000042cd5a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000426140 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000426150 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000426160 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000426130 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000042607f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042cf53 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004239b6 : bsf eax, edx ; ret
0x0000000000423b12 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042d070 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000423a02 : bsf rax, rdx ; ret
0x0000000000465a57 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000465cdb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000465be9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000465ae5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000465a56 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000465cda : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000465be8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000465ae4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047bd67 : call 0x1009f58e
0x000000000047c6ca : call 0x1009fef1
0x0000000000452a45 : call 0x1f54f537
0x000000000044b568 : call 0x20738b8
0x000000000042c694 : call 0x24b751ed
0x000000000047394a : call 0x400352
0x000000000047394a : call 0x400357
0x000000000046d5a9 : call 0x400358
0x0000000000465551 : call 0x401852
0x0000000000409a1c : call 0x405d12
0x000000000044b60e : call 0x4078fe
0x00000000004017b2 : call 0x40fe48
0x000000000041b165 : call 0x417c52
0x000000000041c1b2 : call 0x418c72
0x0000000000441dc1 : call 0x41e082
0x00000000004086f4 : call 0x41e086
0x0000000000411fab : call 0x41e242
0x0000000000420380 : call 0x41efc6
0x000000000045cc68 : call 0x4268f7
0x000000000041f8f4 : call 0x42c352
0x0000000000400618 : call 0x43e358
0x0000000000400721 : call 0x43e476
0x0000000000473d20 : call 0x440002
0x000000000041676a : call 0x4429e2
0x0000000000416801 : call 0x442a12
0x000000000047662a : call 0x4430d2
0x0000000000402ebc : call 0x44f8e2
0x000000000045df28 : call 0x45a9e2
0x00000000004589d6 : call 0x4638f6
0x000000000045a644 : call 0x466932
0x000000000045a735 : call 0x466952
0x000000000045a735 : call 0x466956
0x000000000046eafb : call 0x46b552
0x000000000047811c : call 0x473d36
0x000000000044bc15 : call 0x478672
0x000000000044bc14 : call 0x478673
0x000000000048cefc : call 0x4791c2
0x000000000047b557 : call 0x4911b6a7
0x000000000040fe35 : call 0x49c8b2
0x00000000004bac3a : call 0x4c15d5f5
0x0000000000434d6a : call 0x4fc25d68
0x0000000000434d69 : call 0x4fc25d69
0x000000000047d6b3 : call 0x7cd51fc3
0x000000000047b8cb : call 0xffffffff8a09e1f2
0x000000000047ba32 : call 0xffffffff8a09e359
0x000000000047bc1f : call 0xffffffff8a09e546
0x000000000047c24b : call 0xffffffff8a09eb72
0x000000000047c3a8 : call 0xffffffff8a09eccf
0x000000000047c576 : call 0xffffffff8a09ee9d
0x00000000004bab9a : call 0xffffffffab597690
0x00000000004b8d63 : call 0xffffffffaf0e2bd9
0x000000000047b54a : call 0xffffffffc270fd92
0x000000000041c288 : call 0xffffffffc27b0a99
0x0000000000459b5c : call 0xffffffffc27ee366
0x000000000041cb68 : call 0xffffffffc2cb1381
0x00000000004693bd : call 0xffffffffc37fdcca
0x0000000000485f1a : call 0xffffffffc381ab24
0x0000000000466cec : call 0xffffffffc3a2ae52
0x000000000044fde5 : call 0xffffffffc3f40d36
0x0000000000467cec : call 0xffffffffc40dc525
0x0000000000426e57 : call 0xffffffffc412f7a8
0x0000000000423927 : call 0xffffffffc43ac278
0x000000000048ba89 : call 0xffffffffc7820296
0x000000000047351b : call 0xffffffffca8c4470
0x000000000047a504 : call 0xffffffffca943059
0x0000000000480014 : call 0xffffffffca948b69
0x000000000047a511 : call 0xffffffffce9c306b
0x0000000000480021 : call 0xffffffffce9c8b7b
0x0000000000403cfe : call 2
0x0000000000452d35 : call qword ptr [r10 + rax*8]
0x00000000004a3b9b : call qword ptr [rax + 0x10fff910]
0x00000000004a3b93 : call qword ptr [rax + 0x10fff911]
0x00000000004a3b8b : call qword ptr [rax + 0x10fff912]
0x00000000004a3b83 : call qword ptr [rax + 0x10fff913]
0x00000000004a3b7b : call qword ptr [rax + 0x10fff914]
0x00000000004a37eb : call qword ptr [rax + 0x20fff8ec]
0x00000000004a3b5f : call qword ptr [rax + 0x20fff919]
0x00000000004a3947 : call qword ptr [rax + 0x20fff91c]
0x0000000000410e87 : call qword ptr [rax + 0x80]
0x00000000004bdec3 : call qword ptr [rax - 0x1f0002bf]
0x00000000004a391b : call qword ptr [rax - 0x1f00072a]
0x00000000004a38c7 : call qword ptr [rax - 0x1f000731]
0x00000000004a3503 : call qword ptr [rax - 0x1f000780]
0x00000000004bdf2b : call qword ptr [rax - 0x2f000249]
0x00000000004bdf1b : call qword ptr [rax - 0x2f000252]
0x00000000004bdf0b : call qword ptr [rax - 0x2f00025b]
0x00000000004a3733 : call qword ptr [rax]
0x0000000000400be8 : call qword ptr [rbx + 0x10]
0x0000000000401678 : call qword ptr [rbx*8 + 0x6c9ed8]
0x000000000047e4d8 : call qword ptr [rbx]
0x000000000049a80e : call qword ptr [rcx]
0x00000000004c2b23 : call qword ptr [rdi]
0x00000000004a39f3 : call qword ptr [rdx + 0x22fff91e]
0x0000000000452d36 : call qword ptr [rdx + rax*8]
0x00000000004a3a13 : call qword ptr [rdx]
0x00000000004a36c3 : call qword ptr [rsi + 0x16fff8bf]
0x00000000004a36cb : call qword ptr [rsi + 0x16fff8c0]
0x00000000004a36d3 : call qword ptr [rsi + 0x26fff8c1]
0x00000000004a398f : call qword ptr [rsi + 0x26fff91b]
0x0000000000492a02 : call qword ptr [rsi]
0x0000000000476fcc : call r11
0x0000000000400ccb : call r12
0x000000000040e0e0 : call r14
0x0000000000403651 : call r15
0x0000000000462bbb : call r8
0x0000000000473671 : call r9
0x00000000004a38d7 : call rax
0x0000000000402cfd : call rbx
0x000000000040561a : call rcx
0x0000000000403652 : call rdi
0x000000000040ea8e : call rdx
0x000000000040e0e1 : call rsi
0x0000000000400ccc : call rsp
0x0000000000443740 : cdq ; add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x000000000044f4a4 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004c3e21 : cdq ; clc ; call qword ptr [rdx]
0x00000000004c3eb1 : cdq ; clc ; jmp rbx
0x00000000004baaa0 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000491913 : cdq ; ret
0x0000000000485dbe : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041c163 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x000000000045926a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000404a70 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf -5
0x000000000045e01d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000041ec9c : clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x000000000040d67c : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043e1bc : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047ce7c : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000046dcea : clc ; add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x0000000000425f08 : clc ; add rax, rcx ; ret
0x00000000004a37ea : clc ; call qword ptr [rax + 0x20fff8ec]
0x00000000004a391a : clc ; call qword ptr [rax - 0x1f00072a]
0x00000000004a38c6 : clc ; call qword ptr [rax - 0x1f000731]
0x00000000004a3502 : clc ; call qword ptr [rax - 0x1f000780]
0x00000000004a3732 : clc ; call qword ptr [rax]
0x00000000004c4512 : clc ; call qword ptr [rbx]
0x00000000004c3a32 : clc ; call qword ptr [rcx]
0x00000000004c4132 : clc ; call qword ptr [rdi]
0x00000000004c3e22 : clc ; call qword ptr [rdx]
0x00000000004a36c2 : clc ; call qword ptr [rsi + 0x16fff8bf]
0x00000000004a36ca : clc ; call qword ptr [rsi + 0x16fff8c0]
0x00000000004a36d2 : clc ; call qword ptr [rsi + 0x26fff8c1]
0x00000000004a36b6 : clc ; call qword ptr [rsi]
0x00000000004a38d6 : clc ; call rax
0x00000000004a369a : clc ; call rcx
0x00000000004a36e2 : clc ; call rsi
0x00000000004c2cd2 : clc ; call rsp
0x000000000042fc09 : clc ; cmp rcx, rax ; jne 0x42fc3b ; xor eax, eax ; ret
0x000000000042fc08 : clc ; cmp rcx, rax ; jne 0x42fc3c ; xor eax, eax ; ret
0x00000000004746d0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004213b0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412f66 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x00000000004017eb : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a3716 : clc ; dec dword ptr [rbx] ; ret 0xfff8
0x000000000045537b : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004569a2 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047a93d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a375a : clc ; inc dword ptr [rax + 0x10fff8c2] ; ret
0x00000000004a3566 : clc ; inc dword ptr [rax + 0x59] ; clc ; jmp rax
0x00000000004a34fe : clc ; inc dword ptr [rax + 0x7f] ; clc ; call qword ptr [rax - 0x1f000780]
0x00000000004a389e : clc ; inc dword ptr [rax - 0x1b] ; clc ; call qword ptr [rax]
0x00000000004a3776 : clc ; inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a3916 : clc ; inc dword ptr [rax - 0x2b] ; clc ; call qword ptr [rax - 0x1f00072a]
0x00000000004a350e : clc ; inc dword ptr [rax - 0x2f00077c] ; test edi, eax ; jmp qword ptr [rax]
0x00000000004a38c2 : clc ; inc dword ptr [rax - 0x32] ; clc ; call qword ptr [rax - 0x1f000731]
0x00000000004a3766 : clc ; inc dword ptr [rax - 0x3c] ; clc ; jmp rax
0x00000000004a3556 : clc ; inc dword ptr [rax] ; push rcx ; clc ; call qword ptr [rax]
0x00000000004a3622 : clc ; inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x00000000004a3696 : clc ; inc dword ptr [rcx - 0x3e] ; clc ; call rcx
0x000000000044e749 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a365a : clc ; inc dword ptr [rdx - 0x42] ; clc ; jmp rax
0x00000000004a3656 : clc ; inc dword ptr [rdx - 0x43] ; clc ; inc dword ptr [rdx - 0x42] ; clc ; jmp rax
0x00000000004a36de : clc ; inc dword ptr [rsi - 0x3d] ; clc ; call rsi
0x00000000004a36b2 : clc ; inc dword ptr [rsi - 0x44] ; clc ; call qword ptr [rsi]
0x00000000004a3546 : clc ; inc eax ; clc ; call rax
0x00000000004a38e2 : clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a35fa : clc ; inc eax ; lahf ; clc ; jmp rax
0x00000000004a351e : clc ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004a38f6 : clc ; inc eax ; retf -8
0x00000000004a361a : clc ; inc eax ; test al, 0xf8 ; jmp rax
0x0000000000449f2e : clc ; jg 0x449ebd ; ret 0x5c77
0x00000000004a3762 : clc ; jmp qword ptr [rax + 0x40fff8c3]
0x00000000004a3516 : clc ; jmp qword ptr [rax]
0x00000000004a369e : clc ; jmp qword ptr [rcx - 0x3d]
0x000000000047e428 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004a36d6 : clc ; jmp qword ptr [rsi]
0x00000000004a35fe : clc ; jmp rax
0x00000000004c3eb2 : clc ; jmp rbx
0x00000000004c3402 : clc ; jmp rsp
0x000000000042c487 : clc ; jne 0x42c361 ; ret
0x00000000004a371a : clc ; lcall ptr [rbx + 0x2bfff8c2] ; ret
0x000000000049c720 : clc ; leave ; ret
0x00000000004a371e : clc ; ljmp ptr [rbx] ; ret
0x00000000004b9702 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c79c8 : clc ; mov esi, ebx ; jmp qword ptr [rsi]
0x00000000004316e7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432057 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432257 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a67 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432457 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431703 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043594c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049c7b8 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000043f4c9 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000491a42 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a34ca : clc ; push qword ptr [rax + 0x6a] ; clc ; call qword ptr [rax]
0x00000000004a37ae : clc ; push qword ptr [rax - 0x21] ; clc ; push qword ptr [rax] ; loope 0x4a37b8 ; call qword ptr [rax]
0x00000000004a384e : clc ; push qword ptr [rax - 0x22] ; clc ; push qword ptr [rax] ; loopne 0x4a3858 ; call qword ptr [rax]
0x00000000004a38de : clc ; push qword ptr [rax - 0x29] ; clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a38f2 : clc ; push qword ptr [rax - 0x37] ; clc ; inc eax ; retf -8
0x00000000004a3542 : clc ; push qword ptr [rax - 0x3f0007ba] ; clc ; call rax
0x00000000004a351a : clc ; push qword ptr [rax - 0x78] ; clc ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004a34c2 : clc ; push qword ptr [rax] ; clc ; call rax
0x00000000004a383a : clc ; push qword ptr [rax] ; in al, -8 ; call qword ptr [rax]
0x00000000004a34e2 : clc ; push qword ptr [rax] ; je 0x4a34e4 ; call rax
0x00000000004a3796 : clc ; push qword ptr [rax] ; jrcxz 0x4a3798 ; call qword ptr [rax]
0x00000000004a37b2 : clc ; push qword ptr [rax] ; loope 0x4a37b4 ; call qword ptr [rax]
0x00000000004a3852 : clc ; push qword ptr [rax] ; loopne 0x4a3854 ; call qword ptr [rax]
0x00000000004a3562 : clc ; push qword ptr [rax] ; push rdi ; clc ; inc dword ptr [rax + 0x59] ; clc ; jmp rax
0x000000000041164a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000004165f0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442d71 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000416598 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004a3692 : clc ; push qword ptr [rcx + 0x41fff8c1] ; ret 0xfff8
0x0000000000415a75 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a36da : clc ; push qword ptr [rsi + 0x46fff8c2] ; ret
0x000000000046ac8c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a36e6 : clc ; push qword ptr [rsi - 0x3c] ; clc ; call qword ptr [rsi]
0x00000000004a3552 : clc ; push rax ; clc ; inc dword ptr [rax] ; push rcx ; clc ; call qword ptr [rax]
0x00000000004a37ba : clc ; push rax ; in al, -8 ; call rax
0x00000000004a385a : clc ; push rax ; jrcxz 0x4a385c ; call rax
0x00000000004a37d6 : clc ; push rax ; loop 0x4a37d8 ; call rax
0x00000000004a379e : clc ; push rax ; out 0xf8, al ; jmp rax
0x00000000004a3756 : clc ; push rax ; sar eax, -1 ; add dl, 0xf8 ; call qword ptr [rax]
0x00000000004a36a2 : clc ; push rcx ; ret
0x0000000000417242 : clc ; ret
0x00000000004bc750 : clc ; ret 0x4b
0x000000000042af24 : clc ; rol ch, 1 ; jns 0x42af05 ; retf -0x152d
0x000000000042b074 : clc ; rol ch, 1 ; jns 0x42b055 ; retf -0x152d
0x000000000042b1c4 : clc ; rol ch, 1 ; jns 0x42b1a5 ; retf -0x152d
0x000000000042b314 : clc ; rol ch, 1 ; jns 0x42b2f5 ; retf -0x152d
0x000000000042b464 : clc ; rol ch, 1 ; jns 0x42b445 ; retf -0x152d
0x000000000042b5b4 : clc ; rol ch, 1 ; jns 0x42b595 ; retf -0x152d
0x000000000042b704 : clc ; rol ch, 1 ; jns 0x42b6e5 ; retf -0x152d
0x000000000042b854 : clc ; rol ch, 1 ; jns 0x42b835 ; retf -0x152d
0x000000000042b9a4 : clc ; rol ch, 1 ; jns 0x42b985 ; retf -0x152d
0x000000000042baf4 : clc ; rol ch, 1 ; jns 0x42bad5 ; retf -0x152d
0x000000000042bc44 : clc ; rol ch, 1 ; jns 0x42bc25 ; retf -0x152d
0x000000000042bd94 : clc ; rol ch, 1 ; jns 0x42bd75 ; retf -0x152d
0x000000000042bee4 : clc ; rol ch, 1 ; jns 0x42bec5 ; retf -0x152d
0x000000000042c034 : clc ; rol ch, 1 ; jns 0x42c015 ; retf -0x152d
0x000000000042c184 : clc ; rol ch, 1 ; jns 0x42c165 ; retf -0x152d
0x00000000004963e4 : clc ; rol ch, 1 ; jns 0x4963c5 ; retf -0x152d
0x0000000000496564 : clc ; rol ch, 1 ; jns 0x496545 ; retf -0x152d
0x00000000004966e4 : clc ; rol ch, 1 ; jns 0x4966c5 ; retf -0x152d
0x0000000000496864 : clc ; rol ch, 1 ; jns 0x496845 ; retf -0x152d
0x00000000004969e4 : clc ; rol ch, 1 ; jns 0x4969c5 ; retf -0x152d
0x0000000000496b64 : clc ; rol ch, 1 ; jns 0x496b45 ; retf -0x152d
0x0000000000496ce4 : clc ; rol ch, 1 ; jns 0x496cc5 ; retf -0x152d
0x0000000000496e64 : clc ; rol ch, 1 ; jns 0x496e45 ; retf -0x152d
0x0000000000496fe4 : clc ; rol ch, 1 ; jns 0x496fc5 ; retf -0x152d
0x0000000000497164 : clc ; rol ch, 1 ; jns 0x497145 ; retf -0x152d
0x00000000004972e4 : clc ; rol ch, 1 ; jns 0x4972c5 ; retf -0x152d
0x0000000000497464 : clc ; rol ch, 1 ; jns 0x497445 ; retf -0x152d
0x00000000004975e4 : clc ; rol ch, 1 ; jns 0x4975c5 ; retf -0x152d
0x0000000000497764 : clc ; rol ch, 1 ; jns 0x497745 ; retf -0x152d
0x00000000004978e4 : clc ; rol ch, 1 ; jns 0x4978c5 ; retf -0x152d
0x00000000004bdf44 : clc ; sar ebp, -1 ; and dl, al ; std ; push qword ptr [rax] ; ret 0xfffd
0x000000000047909a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047830d : clc ; std ; jbe 0x47831c ; ret
0x000000000044f135 : clc ; syscall
0x0000000000426781 : cld ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000046e478 : cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e50f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e52f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c8452 : cld ; call qword ptr [rax]
0x00000000004c846a : cld ; call qword ptr [rdx]
0x0000000000480d2f : cld ; cmove rsi, r9 ; jmp 0x480cfe
0x000000000045cc6b : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x000000000047144e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043e5be : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ee : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000480767 : cld ; jmp 0x480734
0x00000000004ba485 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4ba454 ; retf
0x0000000000431e72 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432075 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432275 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432475 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043595e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004039f6 : cld ; mov eax, 3 ; syscall
0x00000000004329a8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431aa6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c86 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c86 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c06 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431e66 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b86 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004318c6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d06 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004919fc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004268d8 : cld ; ret
0x0000000000400e9c : cld ; ret 0x2c
0x0000000000441e80 : cld ; sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000047abe0 : cld ; scasd eax, dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004b8ba3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004b8bb6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c1b64 : cld ; xor eax, 0x3d180000 ; idiv bh ; ret
0x000000000041fe69 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000420049 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000467556 : cli ; add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf -0x72bf
0x000000000047ca49 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x0000000000414b0f : cli ; add ch, al ; pop rdx ; retf
0x000000000046759a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458fdf : cli ; add ch, byte ptr [rcx] ; retf -0x2e77
0x0000000000489703 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048972c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000045c82c : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000411028 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000045a72f : cli ; add cl, byte ptr [rax - 0x73] ; js 0x45a755 ; call 0x466958
0x000000000043e25c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004496ef : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000474ae6 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475353 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043dd81 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043597c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b8bc : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004bab99 : cli ; call 0xffffffffab597691
0x00000000004c64ea : cli ; call rax
0x00000000004c6902 : cli ; call rdx
0x00000000004c668a : cli ; call rsi
0x0000000000481634 : cli ; dec dword ptr [rdi] ; retf -0x7277
0x000000000043296b : cli ; jg 0x43297e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000435937 : cli ; jg 0x43594a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043dd41 : cli ; jg 0x43dd53 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dec6 : cli ; jg 0x43ded8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c5a02 : cli ; jmp qword ptr [rax]
0x00000000004c6efa : cli ; jmp qword ptr [rdx]
0x00000000004c5bda : cli ; jmp rdi
0x00000000004c5692 : cli ; jmp rdx
0x00000000004c6be2 : cli ; jmp rsi
0x00000000004c629a : cli ; jmp rsp
0x0000000000432278 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004262e8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047b5f2 : cli ; or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x000000000047b3a6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000048a0b8 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004bb021 : cli ; push 0x6e ; ja 0x4bafae ; ret 0x48f
0x0000000000488762 : cli ; push rbp ; and al, 0 ; ret
0x00000000004b9ac5 : cli ; ret 0xac65
0x0000000000465552 : cli ; ret 0xfff9
0x000000000041b052 : cli ; retf
0x0000000000445ee2 : cli ; retf -1
0x00000000004429db : cli ; setae al ; ret
0x0000000000417b79 : cli ; sub rax, qword ptr [r8] ; add ebx, esi ; ret
0x00000000004b9970 : cli ; test dl, bh ; retf -0x2081
0x0000000000423a59 : cli ; test rdx, rdx ; je 0x423a79 ; bsf rax, rdx ; ret
0x00000000004658e8 : cli ; test rdx, rdx ; je 0x465919 ; bsf rax, rdx ; ret
0x00000000004b870a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c975c : cmc ; add al, byte ptr [rax] ; ret
0x0000000000496018 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000443ecc : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041de80 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049e2fb : cmc ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004bfb72 : cmc ; call qword ptr [rax]
0x00000000004c039a : cmc ; call qword ptr [rcx]
0x00000000004c0aa2 : cmc ; call qword ptr [rdx]
0x00000000004c09ba : cmc ; call qword ptr [rsi]
0x00000000004bf0fa : cmc ; call rdi
0x00000000004c13da : cmc ; call rdx
0x0000000000487017 : cmc ; jmp 0x486fe6
0x00000000004c086a : cmc ; jmp qword ptr [rax]
0x00000000004c01ca : cmc ; jmp qword ptr [rcx]
0x00000000004bf9d2 : cmc ; jmp qword ptr [rsi]
0x00000000004bb449 : cmc ; mov ch, 0xab ; ret
0x0000000000400966 : cmc ; mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000434c0a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043d2d3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b82f7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047abed : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043d2d7 : cmc ; sub eax, edx ; ret
0x00000000004baa85 : cmc ; xlatb ; ret 0x4e27
0x000000000049cb27 : cmova eax, edx ; ret
0x0000000000467401 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000417a49 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000417a48 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f45b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000465011 : cmove eax, ecx ; ret
0x000000000043f740 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000004213b3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425e62 : cmove eax, edx ; ret
0x0000000000480d31 : cmove esi, ecx ; jmp 0x480cfc
0x0000000000465010 : cmove r8, rcx ; ret
0x000000000043f45a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046b300 : cmove rax, r9 ; ret
0x00000000004213b2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425e61 : cmove rax, rdx ; ret
0x0000000000480d30 : cmove rsi, r9 ; jmp 0x480cfd
0x000000000041558b : cmovg eax, ecx ; test rdx, rdx ; jne 0x415589 ; ret
0x0000000000463c0b : cmovg eax, ecx ; test rdx, rdx ; jne 0x463c09 ; ret
0x0000000000400546 : cmovle eax, ecx ; jmp 0x400519
0x0000000000414023 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421433 : cmovne eax, edx ; ret
0x0000000000421432 : cmovne rax, rdx ; ret
0x0000000000443e73 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x0000000000425ebd : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf -0x7cb8
0x000000000045696d : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000446f3c : cmovs eax, edx ; ret
0x000000000041a452 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049ca58 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000489d30 : cmovs edi, dword ptr [rcx] ; retf 0xf48
0x0000000000426780 : cmp ah, 0x42 ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000480d2e : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480cff
0x0000000000440691 : cmp al, 0x24 ; call rbx
0x000000000049e04b : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000469706 : cmp al, 0x26 ; add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x000000000040e15d : cmp al, 0x33 ; call rax
0x00000000004b9700 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b8603 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004bb0eb : cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000048aa6b : cmp al, 9 ; ja 0x489670 ; jmp 0x48aa49
0x000000000048dca3 : cmp al, 9 ; ja 0x48c890 ; jmp 0x48dc81
0x00000000004913eb : cmp al, 9 ; ja 0x48f6f0 ; jmp 0x4913c9
0x000000000043d796 : cmp al, byte ptr [rsi - 1] ; jne 0x43d7bc ; xor eax, eax ; ret
0x000000000043f988 : cmp al, ch ; ret 0x2b3
0x0000000000426136 : cmp al, dh ; ret
0x0000000000426135 : cmp al, r14b ; ret
0x00000000004c3491 : cmp bh, al ; call qword ptr [rax]
0x0000000000453473 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000487299 : cmp bl, ch ; ret 0x8148
0x000000000042cb93 : cmp bl, dh ; ret
0x0000000000410ccb : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000004105a7 : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004013e3 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x0000000000426c9f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000426177 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000440644 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000416e5e : cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x0000000000410ccc : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000459dca : cmp byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000004832a7 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000426166 : cmp byte ptr [rax], ah ; ret
0x000000000040f3f3 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000415a43 : cmp byte ptr [rax], al ; je 0x415a54 ; ret
0x000000000049c305 : cmp byte ptr [rax], al ; je 0x49c37b ; add rsp, 0x18 ; ret
0x00000000004c7718 : cmp byte ptr [rax], ch ; sti ; call rsp
0x0000000000421430 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000426156 : cmp byte ptr [rax], dl ; ret
0x0000000000426155 : cmp byte ptr [rax], r10b ; ret
0x0000000000426165 : cmp byte ptr [rax], r12b ; ret
0x000000000042142f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c2dbc : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c70cd : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c712d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c706d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043ee22 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000047366b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000479ac9 : cmp byte ptr [rbx - 0x7ad7dbbc], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000460545 : cmp byte ptr [rbx], cl ; jmp rax
0x0000000000464ae7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000411fa7 : cmp byte ptr [rcx + rcx*4 - 0x12], cl ; call 0x41e246
0x0000000000476fa6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000415a08 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042f0dd : cmp byte ptr [rdi], dl ; ret
0x000000000042fbf0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbc2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046b2fc : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000469bac : cmp byte ptr [rsi], ah ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000469b4e : cmp byte ptr [rsi], ah ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469b67
0x0000000000449da3 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045d9ef : cmp ch, cl ; retf
0x000000000040d8bd : cmp ch, cl ; retf -5
0x00000000004c6ef8 : cmp cl, ah ; cli ; jmp qword ptr [rdx]
0x000000000041ad80 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000481f8b : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000473bbe : cmp cl, byte ptr [rax - 0x77] ; retf
0x0000000000461d4d : cmp cl, byte ptr [rbx] ; jmp rax
0x000000000046b2ff : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x00000000004302a1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x00000000004303f1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000430541 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x0000000000430691 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x00000000004307e1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000430931 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000430a81 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000430bd1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000430d21 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000430e71 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x0000000000430fc1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000431111 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000431261 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x00000000004313b1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000431501 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x0000000000432fea : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043316a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004332ea : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043346a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004335ea : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043376a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004338ea : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000433a6a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000433bea : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433d6a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000433eea : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043406a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004341ea : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043436a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004344ea : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004bb4c6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004897c6 : cmp cl, ch ; ret
0x000000000046b2ce : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46b28a ; xor eax, eax ; ret
0x000000000046e473 : cmp dh, byte ptr [rcx] ; rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043597b : cmp dl, 1 ; jb 0x43598d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dd80 : cmp dl, 1 ; jb 0x43dd8e ; mov byte ptr [rdi], cl ; ret
0x000000000043defa : cmp dl, 1 ; jb 0x43df08 ; mov byte ptr [rdi], cl ; ret
0x0000000000464ab8 : cmp dword ptr [rax + 0x30], 0 ; je 0x464ac6 ; ret
0x000000000040064d : cmp dword ptr [rbx + rcx*4 + 0xd], eax ; retf
0x000000000043471c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000461869 : cmp dword ptr [rbx], ecx ; jmp rax
0x0000000000450cee : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000415a41 : cmp dword ptr [rdi + 0x38], 0 ; je 0x415a56 ; ret
0x0000000000442d60 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x00000000004bc748 : cmp dword ptr [rsi + 0x4b], edi ; add byte ptr [rax], al ; clc ; ret 0x4b
0x000000000049cb24 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000048cabd : cmp dword ptr [rsp + 0x10], 0 ; jne 0x48ca94 ; jmp 0x48ca9c
0x000000000048988d : cmp dword ptr [rsp + 8], 0 ; jne 0x489864 ; jmp 0x48986c
0x000000000043f693 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047afb9 : cmp eax, 0x2524e6 ; call rax
0x000000000047ae7c : cmp eax, 0x252623 ; jmp rax
0x00000000004bdefd : cmp eax, 0x9ed0fffd ; std ; call qword ptr [rax]
0x00000000004b89eb : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000047830c : cmp eax, 0xfd ; jbe 0x47831d ; ret
0x00000000004746cf : cmp eax, 0xff ; cmove rax, rdx ; ret
0x0000000000415a74 : cmp eax, 0xff ; je 0x415a89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416597 : cmp eax, 0xff ; je 0x4165a8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464cca : cmp eax, 0xff ; je 0x464cdb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464d0e : cmp eax, 0xff ; je 0x464d1f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411649 : cmp eax, 0xff ; jne 0x411656 ; pop rbx ; ret
0x00000000004165ef : cmp eax, 0xff ; jne 0x4165e0 ; pop rbx ; ret
0x0000000000442d70 : cmp eax, 0xff ; jne 0x442d70 ; xor eax, eax ; leave ; ret
0x000000000040dcb9 : cmp eax, 0xfffff000 ; ja 0x40dce8 ; ret
0x000000000043eb1b : cmp eax, 0xfffff000 ; ja 0x43eb2f ; ret
0x000000000043f486 : cmp eax, 0xfffff000 ; ja 0x43f498 ; ret
0x000000000043f4d5 : cmp eax, 0xfffff000 ; ja 0x43f4e8 ; ret
0x000000000043f664 : cmp eax, 0xfffff000 ; ja 0x43f6a8 ; ret
0x000000000044fd01 : cmp eax, 0xfffff000 ; ja 0x44fd18 ; ret
0x000000000046a9d8 : cmp eax, 0xfffff000 ; ja 0x46a9f0 ; pop rbx ; ret
0x000000000046ad66 : cmp eax, 0xfffff000 ; ja 0x46ad78 ; ret
0x000000000046adbb : cmp eax, 0xfffff000 ; ja 0x46add0 ; ret
0x000000000043e60b : cmp eax, 2 ; je 0x43e61f ; xor eax, eax ; ret
0x0000000000442aba : cmp eax, 4 ; je 0x442ac5 ; ret
0x00000000004c213d : cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x41], al ; idiv edi ; retf 2
0x000000000043ec01 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000413a75 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413a88 ; movzx eax, byte ptr [rax] ; ret
0x0000000000441431 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000474718 : cmp eax, dword ptr [rsi + rdx] ; jae 0x4746c8 ; xor eax, eax ; ret
0x00000000004ba8b7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x0000000000417349 : cmp eax, ecx ; jae 0x417377 ; movzx eax, byte ptr [rax] ; ret
0x000000000043d7b3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004784e4 : cmp eax, esi ; je 0x4784f4 ; ret
0x0000000000442a56 : cmp ebx, 0xa ; je 0x442a61 ; ret
0x000000000044453e : cmp ebx, eax ; setne dl ; jmp 0x44452a
0x000000000041de53 : cmp ebx, ecx ; jb 0x41de39 ; mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x00000000004717b1 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000049ecab : cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; retf
0x000000000046d78e : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447fe9 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000417c35 : cmp ecx, dword ptr [rbx + 0x2b] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000467400 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000046500e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000040ef3f : cmp ecx, dword ptr [rdx] ; add byte ptr [rax + 0x63], cl ; retf -0x76b4
0x000000000042fc0b : cmp ecx, eax ; jne 0x42fc39 ; xor eax, eax ; ret
0x0000000000473ff6 : cmp ecx, edx ; jne 0x473fd5 ; ret
0x000000000049d64e : cmp edi, eax ; jae 0x49d618 ; mov rdx, rcx ; jmp 0x49d630
0x000000000045a7a5 : cmp edi, ecx ; ja 0x45a790 ; mov eax, r8d ; ret
0x000000000046af0e : cmp edi, edx ; ja 0x46af3d ; ret
0x000000000047ca48 : cmp edx, 0 ; mov eax, edx ; jle 0x47ca60 ; ret
0x0000000000442c82 : cmp edx, eax ; jne 0x442c65 ; ret
0x0000000000474008 : cmp edx, eax ; jne 0x473fb2 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004268a8 : cmp edx, ecx ; jne 0x426895 ; ret
0x00000000004429da : cmp edx, edi ; setae al ; ret
0x0000000000467096 : cmp edx, esi ; je 0x4670a7 ; test edx, edx ; jne 0x467099 ; ret
0x0000000000417389 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x000000000044d7b5 : cmp esi, 3 ; je 0x44d7c6 ; pop rbx ; ret
0x00000000004baa84 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000464d6a : cmp esi, ecx ; jb 0x464d67 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000041662a : cmp esi, ecx ; jne 0x416627 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000464ab7 : cmp qword ptr [rax + 0x30], 0 ; je 0x464ac7 ; ret
0x0000000000415a40 : cmp qword ptr [rdi + 0x38], 0 ; je 0x415a57 ; ret
0x000000000049cb23 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000048cabc : cmp qword ptr [rsp + 0x10], 0 ; jne 0x48ca95 ; jmp 0x48ca9d
0x000000000048988c : cmp qword ptr [rsp + 8], 0 ; jne 0x489865 ; jmp 0x48986d
0x000000000042cb92 : cmp r11b, r14b ; ret
0x0000000000442a55 : cmp r11d, 0xa ; je 0x442a62 ; ret
0x0000000000480d2d : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x480d00
0x0000000000474717 : cmp r8, qword ptr [rsi + rdx] ; jae 0x4746c9 ; xor eax, eax ; ret
0x000000000040dcb8 : cmp rax, -0x1000 ; ja 0x40dce9 ; ret
0x000000000043eb1a : cmp rax, -0x1000 ; ja 0x43eb30 ; ret
0x000000000043f485 : cmp rax, -0x1000 ; ja 0x43f499 ; ret
0x000000000043f4d4 : cmp rax, -0x1000 ; ja 0x43f4e9 ; ret
0x000000000043f663 : cmp rax, -0x1000 ; ja 0x43f6a9 ; ret
0x000000000044fd00 : cmp rax, -0x1000 ; ja 0x44fd19 ; ret
0x000000000046a9d7 : cmp rax, -0x1000 ; ja 0x46a9f1 ; pop rbx ; ret
0x000000000046ad65 : cmp rax, -0x1000 ; ja 0x46ad79 ; ret
0x000000000046adba : cmp rax, -0x1000 ; ja 0x46add1 ; ret
0x000000000047830b : cmp rax, 0xfd ; jbe 0x47831e ; ret
0x00000000004746ce : cmp rax, 0xff ; cmove rax, rdx ; ret
0x0000000000413a74 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413a89 ; movzx eax, byte ptr [rax] ; ret
0x0000000000417348 : cmp rax, rcx ; jae 0x417378 ; movzx eax, byte ptr [rax] ; ret
0x00000000004784e3 : cmp rax, rsi ; je 0x4784f5 ; ret
0x000000000046500d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042fc0a : cmp rcx, rax ; jne 0x42fc3a ; xor eax, eax ; ret
0x0000000000473ff5 : cmp rcx, rdx ; jne 0x473fd6 ; ret
0x000000000049d64d : cmp rdi, r8 ; jae 0x49d619 ; mov rdx, rcx ; jmp 0x49d631
0x000000000046af0d : cmp rdi, rdx ; ja 0x46af3e ; ret
0x0000000000474007 : cmp rdx, r8 ; jne 0x473fb3 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000442c81 : cmp rdx, rax ; jne 0x442c66 ; ret
0x00000000004268a7 : cmp rdx, rcx ; jne 0x426896 ; ret
0x00000000004268a6 : cmp rdx, rcx ; jne 0x426897 ; ret
0x00000000004429d9 : cmp rdx, rdi ; setae al ; ret
0x0000000000464d69 : cmp rsi, rcx ; jb 0x464d68 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000416629 : cmp rsi, rcx ; jne 0x416628 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000496617 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496917 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497817 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041cb06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425c15 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497517 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042f689 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x00000000004b8ab6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8a82 ; mov ecx, 0x5b92ac50 ; retf
0x000000000042a1b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497217 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496f17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004babd1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x0000000000409a66 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004a3619 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; inc eax ; test al, 0xf8 ; jmp rax
0x00000000004b859f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x000000000047ed4a : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000043df05 : cmpsd dword ptr [rsi], dword ptr [rdi] ; shr dword ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf -0x78f1
0x00000000004bdf11 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; call qword ptr [rax]
0x000000000041396f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b614 : cwde ; add rax, r8 ; jmp rax
0x00000000004c6298 : cwde ; cli ; jmp rsp
0x0000000000442664 : cwde ; mov eax, 3 ; syscall
0x000000000041579c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004c7148 : cwde ; or bl, bh ; jmp rsi
0x00000000004c0868 : cwde ; push 0xf5 ; jmp qword ptr [rax]
0x00000000004bdfcc : cwde ; retf -3
0x0000000000444503 : cwde ; sub byte ptr [rax], al ; test eax, eax ; je 0x444517 ; ret
0x00000000004674f2 : dec al ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004685f3 : dec al ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004394b1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000048e405 : dec byte ptr [r8 - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x00000000004394b2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000047a0d6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000045d37c : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000048e406 : dec byte ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x000000000046579d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e31a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e62d : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000483183 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000478309 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x478320 ; ret
0x000000000041b39c : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x0000000000410fe9 : dec dword ptr [rax + 0x29] ; ret
0x00000000004395f2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473c01 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045e9e6 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000419a9d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041d8fd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000419185 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480e54 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000485c4d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004708f5 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x000000000047485a : dec dword ptr [rax + 0x63] ; ret
0x000000000045eb0e : dec dword ptr [rax + 0x63] ; retf
0x000000000046a9cc : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x000000000046279b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462eef : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465cd9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000004746d1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004213b1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004598eb : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412f67 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000041104c : dec dword ptr [rax + 1] ; ret
0x000000000047db97 : dec dword ptr [rax + 1] ; ret 0x3948
0x00000000004be3fb : dec dword ptr [rax - 0x2a] ; std ; ljmp ptr [rcx] ; salc ; std ; jmp rax
0x000000000040f5cf : dec dword ptr [rax - 0x39] ; ret
0x000000000045cc6c : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004121d7 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000480dbe : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043ee8c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000049b051 : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000419a73 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d8d2 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x000000000046982e : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000478d9d : dec dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004748c5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000410cc8 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481f88 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004403cd : dec dword ptr [rax - 0x75] ; jge 0x4403d7 ; call rbx
0x0000000000440680 : dec dword ptr [rax - 0x75] ; jge 0x44068a ; call rbx
0x0000000000442218 : dec dword ptr [rax - 0x75] ; jge 0x442222 ; call rbx
0x00000000004793c7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041be5f : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000414a51 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x000000000047876c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000483fc2 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x0000000000488797 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000426a18 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000049ecb4 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x000000000049ef0a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000004017ec : dec dword ptr [rax - 0x77] ; ret
0x000000000046aefe : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000048400f : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041dcc1 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044fb82 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045e9aa : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000466616 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000483899 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x00000000004555b7 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000460176 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000004828cd : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x000000000042132e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b4c3 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402c18 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x0000000000473a3b : dec dword ptr [rax - 0x77] ; retf
0x000000000049db94 : dec dword ptr [rax - 0x77] ; retf -0x76b4
0x0000000000456721 : dec dword ptr [rax - 0x77] ; retf -0x76b8
0x000000000044837e : dec dword ptr [rax - 0x77] ; retf -0x7bc0
0x000000000047d7d5 : dec dword ptr [rax - 0x77] ; retf 0x1b8
0x00000000004786d1 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000487b08 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000463eae : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf -2
0x0000000000484404 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; test bl, bh ; retf -1
0x0000000000485dbb : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000047830a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x47831f ; ret
0x0000000000454031 : dec dword ptr [rax - 0x7d] ; jge 0x45406e ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004041dc : dec dword ptr [rax - 0x7d] ; ret
0x0000000000419a4f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000448f12 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000470cff : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000470ced : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000457394 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x000000000046a336 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000470d8b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x00000000004857b2 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000453476 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000434720 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046cb20 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000049dbab : dec dword ptr [rbp + rcx*4 + 0x42] ; add dword ptr [rcx - 0x77], ecx ; retf -0x4617
0x000000000047e62e : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049b689 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000478e9c : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x000000000044088e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000041c969 : dec dword ptr [rbx + 0x2ade003d] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041b79f : dec dword ptr [rbx + 0x2af05e15] ; add dh, dh ; ret 0xf02
0x00000000004787ec : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000448146 : dec dword ptr [rbx + 0x79c98508] ; jrcxz 0x44813f ; retf
0x00000000004a3717 : dec dword ptr [rbx] ; ret 0xfff8
0x000000000049b96c : dec dword ptr [rcx + 0x21] ; retf -0x76b4
0x0000000000484656 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x0000000000455874 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046dd23 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049b94e : dec dword ptr [rcx + 0x29] ; retf -0x76b4
0x000000000049b9d6 : dec dword ptr [rcx + 0x31] ; retf -0x76b4
0x0000000000455483 : dec dword ptr [rcx + 0x39] ; ret
0x000000000041c8d3 : dec dword ptr [rcx + 0x39] ; ret 0x4874
0x000000000046cb52 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x0000000000455401 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047242a : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049b977 : dec dword ptr [rcx + 0x39] ; retf -0x76b4
0x000000000049d6bc : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000469806 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045afac : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x000000000049ba02 : dec dword ptr [rcx + 1] ; retf -0x76b4
0x000000000049ba0d : dec dword ptr [rcx + 9] ; retf -0x76b4
0x000000000040502e : dec dword ptr [rcx + rcx*4 + 0x25] ; retf 0x2c70
0x0000000000452a42 : dec dword ptr [rcx + rcx*4 - 0x18] ; jmp 0x452a17
0x00000000004530d9 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x0000000000467f5e : dec dword ptr [rcx - 0x50f0b73f] ; retf
0x0000000000480ecf : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000440205 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044068e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440298 : dec dword ptr [rcx - 0x75] ; jge 0x4402a2 ; call rbx
0x00000000004403bf : dec dword ptr [rcx - 0x75] ; jge 0x4403c9 ; call rbx
0x0000000000440502 : dec dword ptr [rcx - 0x75] ; jge 0x44050c ; call rbx
0x0000000000440672 : dec dword ptr [rcx - 0x75] ; jge 0x44067c ; call rbx
0x0000000000441e90 : dec dword ptr [rcx - 0x75] ; jge 0x441e9a ; call rbx
0x0000000000441fb8 : dec dword ptr [rcx - 0x75] ; jge 0x441fc2 ; call rbx
0x00000000004420fb : dec dword ptr [rcx - 0x75] ; jge 0x442105 ; call rbx
0x00000000004421fc : dec dword ptr [rcx - 0x75] ; jge 0x442206 ; call rbx
0x000000000047ce3c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000454073 : dec dword ptr [rcx - 0x77] ; ret
0x00000000004463b8 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044ec17 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000004566a3 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041b39d : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485f17 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381ab27
0x0000000000457e84 : dec dword ptr [rcx - 0x7d] ; in eax, dx ; add eax, ebp ; ret 0xfd44
0x000000000043f525 : dec dword ptr [rdi] ; adc esp, 0x51 ; add byte ptr [rax], al ; ret
0x000000000043f619 : dec dword ptr [rdi] ; and eax, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000484336 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x0000000000486bef : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000414022 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000004687f9 : dec dword ptr [rdi] ; mov bh, 5 ; mov edi, 0x8900264b ; ret 0xe883
0x000000000043f42c : dec dword ptr [rdi] ; or ebp, 0x52 ; add byte ptr [rax], al ; ret
0x0000000000446f3b : dec dword ptr [rdi] ; ret 0x41c3
0x00000000004046c7 : dec dword ptr [rdi] ; retf
0x0000000000481635 : dec dword ptr [rdi] ; retf -0x7277
0x000000000044010c : dec dword ptr [rdi] ; sub ebp, 0x45 ; add byte ptr [rax], al ; ret
0x000000000043ec0c : dec dword ptr [rdi] ; sub ebp, 0x5a ; add byte ptr [rax], al ; ret
0x0000000000411101 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004496d4 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x77000000], ch ; retf -0x1d7f
0x000000000048b2c7 : dec dword ptr [rdi] ; test byte ptr [rsi + rax + 0x63480000], al ; retf -0x7cb8
0x000000000043d640 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047098c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000041738b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485b0f : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000041b1d3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x24e9
0x000000000047a93e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000045989b : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043ed7d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043f585 : dec dword ptr [rdi] ; xor dword ptr [rcx + rdx*2], 0 ; ret
0x000000000043f809 : dec dword ptr [rdi] ; xor eax, 0x4e ; add byte ptr [rax], al ; ret
0x00000000004bdf83 : dec dword ptr [rdx - 0x3b] ; std ; ljmp ptr [rax - 0x3b] ; std ; jmp rax
0x000000000047a45d : dec ecx ; ret
0x00000000004395f1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000462926 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000448f11 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046dd22 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000040dc94 : div byte ptr [rbp + 0x31] ; mov eax, 0xba ; syscall
0x00000000004657e2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000046a01e : div byte ptr [rbx] ; add byte ptr es:[rax + 0x39], cl ; retf
0x000000000047abec : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a7b5 : div ecx ; add eax, r8d ; ret
0x000000000043e5c1 : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000463406 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047abeb : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043d7b4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004394ae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004395ee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004793cb : enter -0x74b8, 0x14 ; ret
0x000000000046d904 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46d8d8
0x000000000046c044 : enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x0000000000442d5e : enter -0x7cb8, 0x7c ; retf 0x1f8
0x00000000004402e4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004ad5dc : enter 0, 0 ; retf
0x00000000004b1630 : enter 0, 0 ; retf 0
0x00000000004ae788 : enter 0x10, 0 ; retf
0x000000000044900f : enter 0x1388, -0x77 ; retf -0x1f7d
0x000000000041734a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047a75e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000422a4d : enter 0x31c3, -0x40 ; ret
0x00000000004c21e3 : enter 0x380e, 0x41 ; ret
0x000000000041913d : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041b365 : enter 0x4801, -0x7d ; ret 0x4810
0x00000000004750ef : enter 0x4b, -0x7d ; ret
0x000000000045a63d : enter 0x4b36, 0 ; mov rdi, r14 ; call 0x466939
0x000000000046b286 : enter 0x4f75, -0xd ; ret
0x00000000004bb23c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004adf88 : enter 0xa, 0 ; retf
0x00000000004ae388 : enter 0xd, 0 ; retf
0x000000000042f736 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421481 : enter 0xf66, -0x15 ; ret
0x0000000000425f0b : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf -0x7cb8
0x00000000004b1830 : enter 1, 0 ; retf 1
0x00000000004aeb40 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b1a30 : enter 2, 0 ; retf 2
0x00000000004b1c30 : enter 3, 0 ; retf 3
0x00000000004b1e30 : enter 4, 0 ; retf 4
0x00000000004b2030 : enter 5, 0 ; retf 5
0x00000000004b2230 : enter 6, 0 ; retf 6
0x00000000004b2430 : enter 7, 0 ; retf 7
0x00000000004b2630 : enter 8, 0 ; retf 8
0x00000000004b2830 : enter 9, 0 ; retf 9
0x00000000004a17f1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004156e7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000415be3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f9f9 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000442d66 : fadd dword ptr [rax] ; leave ; ret
0x000000000041cacf : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000412540 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004445d2 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c97a0 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000411cb7 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047b8c9 : fadd st(1) ; call 0xffffffff8a09e1f4
0x000000000047ba30 : fadd st(1) ; call 0xffffffff8a09e35b
0x000000000047c249 : fadd st(1) ; call 0xffffffff8a09eb74
0x000000000047c3a6 : fadd st(1) ; call 0xffffffff8a09ecd1
0x0000000000477ab5 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042f281 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049ec74 : fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004ba878 : fcmovb st(0), st(3) ; ret
0x00000000004bdfc0 : fcmovne st(0), st(1) ; std ; lcall ptr [rdi] ; retf -3
0x000000000044f41e : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000004c1e28 : fcom dword ptr [rax - 0xa] ; jmp qword ptr [rsi]
0x00000000004c6c68 : fcom st(5) ; cli ; jmp rdi
0x0000000000468da7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004101fa : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004102df : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043ff4f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041e076 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb5f9 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000040167b : fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004b9860 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004c1844 : fdiv qword ptr [rdx] ; add byte ptr [rax], al ; or cl, dh ; cmc ; call qword ptr [rdx]
0x00000000004403cb : fdiv st(5), st(0) ; dec dword ptr [rax - 0x75] ; jge 0x4403d9 ; call rbx
0x00000000004403b0 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004403bd : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4403cb ; call rbx
0x00000000004a3851 : fdivp st(0) ; push qword ptr [rax] ; loopne 0x4a3855 ; call qword ptr [rax]
0x000000000041dcbf : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004a38e5 : fdivr st(0) ; call qword ptr [rax]
0x00000000004b8bb5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000043d7b8 : fdivr st(7) ; ret
0x000000000043f692 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000004644c4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000489d2d : fiadd dword ptr [rbx + 0x39480fe2] ; retf 0xf48
0x000000000044006c : fiadd dword ptr [rcx - 0x7d] ; retf 0x3140
0x0000000000440a49 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bb446 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000049eea0 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000442bbe : fidiv word ptr [rax + 0x39480028] ; ret 0xd975
0x00000000004444e5 : fidivr dword ptr [rax + 1] ; ret
0x000000000043e1df : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004004a4 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000045a7a8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a6c5 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000432bf0 : fimul dword ptr [rax + 0x39] ; retf 0x6a77
0x000000000045c829 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000413005 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x000000000047b5f6 : fimul dword ptr [rax - 0x77] ; retf
0x00000000004110f0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000048adce : fimul dword ptr [rax - 0x7d] ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf -0x7cb8
0x0000000000404ed8 : fimul dword ptr [rax - 0x7d] ; ret
0x000000000041c637 : fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x0000000000426a42 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048d2dc : fimul dword ptr [rcx + 1] ; ror byte ptr [rcx + 0x39], cl ; retf
0x000000000048aee2 : fimul word ptr [rax + 0x29] ; ret
0x00000000004122ce : fimul word ptr [rax - 0x77] ; ret
0x000000000045a25f : fimul word ptr [rax - 0x77] ; retf
0x000000000047325a : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a5cc : fimul word ptr [rbp + 0x11] ; retf
0x000000000047a58e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47a5e8
0x000000000048009e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4800f8
0x000000000044fe50 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000041211f : fimul word ptr [rcx + rcx*4 - 0x19] ; mov eax, r9d ; syscall
0x00000000004c26c1 : fincstp ; jmp qword ptr [rbx]
0x00000000004003d4 : fistp qword ptr [rax + 1] ; syscall
0x0000000000415755 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004158c5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000418088 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000468222 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000049ec71 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000474229 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000049ee9d : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x000000000048ddb3 : fisttp dword ptr [rax - 0x77] ; jl 0x48dde4 ; sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000479631 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b610 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047964b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000004691d5 : fisttp dword ptr [rdi] ; retf 0x3948
0x0000000000440f29 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041e49e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000448317 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000048e409 : fisttp qword ptr [rax - 0x77] ; retf
0x000000000041cbc9 : fisttp word ptr [rax + 9] ; ret 0x8948
0x0000000000456085 : fisttp word ptr [rax - 0x77] ; retf -0x76b4
0x000000000045433a : fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000004796cf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000042b4ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042f651 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f351 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000432a3c : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000041c96d : fisubr word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000042661d : fld dword ptr [rbx + 0x294807e1] ; retf -0x7ab8
0x00000000004691da : fld dword ptr [rcx + 0xf] ; retf
0x000000000047d802 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400d2a : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b98a1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000491a8a : fld xword ptr [rsp - 0x18] ; ret
0x000000000044f9d9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000426069 : fldenv dword ptr [rsi + 0xf] ; je 0x4260c6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ce97 : fldenv dword ptr [rsi + 0xf] ; je 0x42cef4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042f6d1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f61 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047a634 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041970f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047e811 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047eb36 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000043da87 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000048f117 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000458ac1 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000411db1 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000484659 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047d253 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000469a0c : fmul dword ptr [rax - 0x7d] ; ret
0x000000000041243a : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045b1be : fmul dword ptr [rcx + 0xf] ; ret
0x000000000049a8bd : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x000000000049ab55 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000049d64c : fmul dword ptr [rcx + rdi - 0x39] ; jae 0x49d61a ; mov rdx, rcx ; jmp 0x49d632
0x000000000045d21b : fmul dword ptr [rdi] ; ret
0x00000000004c7144 : fmul qword ptr [rbx + 0x8980000] ; sti ; jmp rsi
0x000000000048ade7 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a46c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000421809 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272bf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004bf044 : fmul qword ptr [rdx] ; add byte ptr [rax], al ; or ch, bh ; hlt ; call qword ptr [rdx]
0x000000000048f012 : fmul st(0) ; ret
0x000000000048ef90 : fmulp st(1) ; ret
0x00000000004bb0ea : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf -0x51ce
0x000000000040dc65 : fpatan ; ret
0x00000000004a00e4 : frstor dword ptr [rdx] ; add byte ptr [rax - 0x7f], cl ; jmp rax
0x000000000042f451 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044067e : fscale ; dec dword ptr [rax - 0x75] ; jge 0x44068c ; call rbx
0x000000000044068c : fscale ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004c6d61 : fsqrt ; call rsi
0x00000000004b9587 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b9900 : fstp st(0) ; ret 0xde5d
0x000000000040167a : fstp st(0) ; sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b8acb : fstp st(3), st(0) ; retf -0x147d
0x000000000040dce8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000049ede2 : fsub dword ptr [rdx] ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000042f751 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438324 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004baeb8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000047ca72 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x000000000043dbcb : fsub qword ptr [rsi + 0xf] ; jmp 0x43db97
0x000000000042f551 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042159c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004402e2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000441deb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000004421ea : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000441858 : fsubp st(0) ; ret 0xffe8
0x0000000000441758 : fsubp st(0) ; ret 0xffe9
0x0000000000441350 : fsubp st(0) ; retf -0x13
0x00000000004bb5d8 : fucom st(5) ; loop 0x4bb631 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047efb5 : fucomi st(1) ; ret
0x000000000041f808 : fucomp st(0) ; retf
0x000000000049e8e7 : fucompi st(0) ; ret
0x0000000000419968 : fucompi st(0) ; ret 0xfff1
0x0000000000418c30 : fucompi st(0) ; retf -0x6b
0x0000000000445bb2 : fucompi st(3) ; ret
0x0000000000468226 : fucompp ; ret 0xfffe
0x00000000004bac1e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494e19 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043ed80 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000495d19 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044284b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bea52 : hlt ; call qword ptr [rax]
0x00000000004bef7a : hlt ; call qword ptr [rbx]
0x00000000004be872 : hlt ; call qword ptr [rdx]
0x00000000004be58a : hlt ; call rax
0x000000000044acae : hlt ; jmp 0x44ac7e
0x000000000048aa6f : hlt ; jmp 0x48aa76
0x00000000004b9988 : hlt ; jmp 0x4b995d
0x0000000000405688 : hlt ; loop 0x405692 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000434b8a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431cee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043ebcf : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043d2c3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004bfe71 : hlt ; ret
0x00000000004b9ac3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043d2c7 : hlt ; sub eax, edx ; ret
0x00000000004c6d5c : hlt ; xchg dword ptr [rax], eax ; add al, al ; fsqrt ; call rsi
0x00000000004c1b6a : idiv bh ; ret
0x000000000043ed3d : idiv byte ptr [rax + 2] ; syscall
0x000000000044cdff : idiv byte ptr [rdi + 0x4a6228] ; mov eax, ecx ; syscall
0x0000000000401736 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446f36 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000410cc6 : idiv dh ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000004a33d6 : idiv edi ; add byte ptr [rax], al ; clc ; call rax
0x000000000049d6ba : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049bb3f : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004a013b : idiv edi ; nop dword ptr [rax] ; ret
0x00000000004a00f8 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a0af8 : idiv edi ; ret
0x00000000004c2142 : idiv edi ; retf 2
0x00000000004a33d2 : idiv edi ; xor bh, bh ; idiv edi ; add byte ptr [rax], al ; clc ; call rax
0x0000000000469d8b : imul al ; pop rdi ; retf
0x0000000000458d88 : imul al ; ret 0x1fd
0x000000000041db6a : imul bl ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000442687 : imul eax ; ret
0x000000000046b4f8 : imul eax ; ret 0xfd42
0x000000000047a9df : imul eax ; retf
0x000000000044b70d : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043be21 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000004251e7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000424be7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000004475eb : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000049ecae : imul ebx, dword ptr [rax], -0x18 ; retf
0x000000000047ce3f : imul ecx ; ret
0x0000000000413cb4 : imul ecx, dword ptr [rax + 0x63], -0x2f ; mov eax, 2 ; syscall
0x000000000041d619 : imul ecx, dword ptr [rax - 0x73], 0x39481048 ; retf 0x1373
0x00000000004c469d : imul ecx, dword ptr [rdx], 0x4a08070c ; or eax, dword ptr [rdx] ; retf
0x00000000004248e7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000049b969 : imul edi, ecx, -1 ; dec dword ptr [rcx + 0x21] ; retf -0x76b4
0x00000000004242e7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000423fe7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000423ce7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000467404 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000497cb4 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000043b29c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000434b6a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004268ab : in al, -0xd ; ret
0x00000000004a383d : in al, -8 ; call qword ptr [rax]
0x00000000004a37bd : in al, -8 ; call rax
0x00000000004039a6 : in al, 0x4c ; mov edi, esp ; mov eax, 3 ; syscall
0x00000000004baf01 : in al, 0x4c ; pop rax ; retf
0x000000000042391c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043e258 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000485ffa : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457e18 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000405505 : in al, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004bea4c : in al, 4 ; add byte ptr [rax], al ; push rax ; movsxd rsi, esp ; call qword ptr [rax]
0x00000000004c3354 : in al, dx ; add byte ptr [r8], r8b ; mov ch, cl ; std ; jmp qword ptr [rdx]
0x0000000000445edc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; cli ; retf -1
0x00000000004201d7 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; jmp qword ptr [rdi]
0x0000000000451c43 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000451e3c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0xf5
0x0000000000400a78 : in al, dx ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000474815 : in al, dx ; add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004231d0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004a37ed : in al, dx ; clc ; jmp qword ptr [rax]
0x000000000047144d : in al, dx ; cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x00000000004c6fa1 : in al, dx ; cli ; jmp qword ptr [rdx]
0x0000000000491a89 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004424c4 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000431cea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434f6a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000465617 : in al, dx ; or al, ch ; ret 1
0x000000000041cd17 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004c5554 : in al, dx ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; sub dh, bh ; stc ; call rsi
0x0000000000473f70 : in al, dx ; ret
0x00000000004bb0ed : in al, dx ; retf -0x51ce
0x00000000004bb01e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bafb1 ; ret 0x48f
0x00000000004bb01d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bafb2 ; ret 0x48f
0x00000000004b977a : in eax, -0x1b ; retf 0x2a91
0x00000000004bb5d9 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000045ab8b : in eax, -0x21 ; loopne 0x45ab1c ; ret 0xe680
0x0000000000434bea : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042c3ca : in eax, -0xd ; ret
0x00000000004baaa1 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a38a1 : in eax, -8 ; call qword ptr [rax]
0x00000000004a379d : in eax, -8 ; push rax ; out 0xf8, al ; jmp rax
0x000000000043ee08 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x000000000047f7b1 : in eax, 0x24 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b9723 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000046755a : in eax, 0x29 ; retf -0x72bf
0x000000000042696a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000004524a2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b89b9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000466883 : in eax, 0xf ; je 0x4668a8 ; add rax, 2 ; ret
0x000000000044010f : in eax, dx ; add byte ptr [r8], r8b ; ret
0x000000000048add1 : in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf -0x7cb8
0x0000000000457e87 : in eax, dx ; add eax, ebp ; ret 0xfd44
0x000000000041f8f3 : in eax, dx ; call 0x42c353
0x000000000049ecbf : in eax, dx ; jne 0x49eca1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043dae2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004b8ce5 : in eax, dx ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8d56 ; salc ; retf
0x0000000000431afa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434fea : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495820 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478ddb : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e4e2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000049eea2 : in eax, dx ; pop rbx ; ret
0x000000000043ec0f : in eax, dx ; pop rdx ; add byte ptr [rax], al ; ret
0x0000000000415592 : in eax, dx ; ret
0x00000000004b94f8 : in eax, dx ; retf
0x000000000043dc32 : in eax, dx ; sub rax, 1 ; ret
0x000000000049cd65 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043def8 : inc bl ; cmp dl, 1 ; jb 0x43df0a ; mov byte ptr [rdi], cl ; ret
0x00000000004329c6 : inc bl ; jb 0x4329d6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004268d1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000415a02 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000045e3ea : inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x000000000044d7b6 : inc byte ptr [rbx] ; je 0x44d7c5 ; pop rbx ; ret
0x00000000004a375b : inc dword ptr [rax + 0x10fff8c2] ; ret
0x00000000004a3b6b : inc dword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004a3953 : inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004bdebf : inc dword ptr [rax + 0x3f] ; std ; call qword ptr [rax - 0x1f0002bf]
0x00000000004a3567 : inc dword ptr [rax + 0x59] ; clc ; jmp rax
0x00000000004bde57 : inc dword ptr [rax + 0x71] ; std ; jmp qword ptr [rax]
0x00000000004a34ff : inc dword ptr [rax + 0x7f] ; clc ; call qword ptr [rax - 0x1f000780]
0x00000000004a389f : inc dword ptr [rax - 0x1b] ; clc ; call qword ptr [rax]
0x00000000004a3777 : inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a3917 : inc dword ptr [rax - 0x2b] ; clc ; call qword ptr [rax - 0x1f00072a]
0x00000000004bdecf : inc dword ptr [rax - 0x2f0002b8] ; std ; jmp qword ptr [rax]
0x00000000004a350f : inc dword ptr [rax - 0x2f00077c] ; test edi, eax ; jmp qword ptr [rax]
0x00000000004a38c3 : inc dword ptr [rax - 0x32] ; clc ; call qword ptr [rax - 0x1f000731]
0x00000000004a3767 : inc dword ptr [rax - 0x3c] ; clc ; jmp rax
0x000000000045374a : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x00000000004558fc : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004a33d7 : inc dword ptr [rax] ; add al, bh ; call rax
0x00000000004604c3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000453bbc : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; retf -6
0x000000000042fc67 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a3ecb : inc dword ptr [rax] ; ja 0x4a3ecc ; jmp qword ptr [rax]
0x00000000004a3e9b : inc dword ptr [rax] ; jbe 0x4a3e9c ; call qword ptr [rax]
0x00000000004bde5f : inc dword ptr [rax] ; jne 0x4bde64 ; jmp rax
0x00000000004a3ef3 : inc dword ptr [rax] ; jnp 0x4a3ef4 ; call qword ptr [rax]
0x00000000004a3557 : inc dword ptr [rax] ; push rcx ; clc ; call qword ptr [rax]
0x00000000004be02f : inc dword ptr [rax] ; retf
0x00000000004a3b5b : inc dword ptr [rax] ; sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a3943 : inc dword ptr [rax] ; sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3623 : inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x0000000000460d76 : inc dword ptr [rbp + 0x29] ; retf
0x000000000047d045 : inc dword ptr [rbp + 0x31] ; dec dword ptr [rax - 0x77] ; retf
0x000000000047144f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000473660 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b690 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b715 ; ret
0x00000000004608b7 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d67a : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049d1f2 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044e747 : inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000045899f : inc dword ptr [rbx - 0x7af00008] ; retf -3
0x000000000046886c : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000000000407732 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000040a7b2 : inc dword ptr [rbx - 0x7bf0fe08] ; retf
0x000000000043e5bf : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ef : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004443d4 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf -0x1540
0x000000000045e589 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000045e3e7 : inc dword ptr [rcx + 1] ; inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x0000000000477a80 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000047eab3 : inc dword ptr [rcx + rdi + 0x4d] ; mov eax, 0x89459673 ; retf
0x00000000004a3697 : inc dword ptr [rcx - 0x3e] ; clc ; call rcx
0x000000000047fbfe : inc dword ptr [rcx - 0x43] ; retf
0x0000000000487014 : inc dword ptr [rcx - 0x77] ; cmc ; jmp 0x486fe9
0x000000000044e74a : inc dword ptr [rcx - 0x77] ; ret
0x0000000000414555 : inc dword ptr [rcx - 0x7f] ; retf 0
0x00000000004146f5 : inc dword ptr [rcx - 0x80] ; retf -0x1680
0x00000000004146aa : inc dword ptr [rcx - 0x80] ; retf 0x4d80
0x00000000004c979d : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000048b319 : inc dword ptr [rdi + rcx + 0x44] ; retf -0x8bf
0x000000000047ff20 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a39ff : inc dword ptr [rdx + 0x1d] ; stc ; call rdx
0x00000000004a365b : inc dword ptr [rdx - 0x42] ; clc ; jmp rax
0x00000000004a3657 : inc dword ptr [rdx - 0x43] ; clc ; inc dword ptr [rdx - 0x42] ; clc ; jmp rax
0x000000000042bccd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a399b : inc dword ptr [rsi + 0x1a] ; stc ; call rsi
0x00000000004a36df : inc dword ptr [rsi - 0x3d] ; clc ; call rsi
0x00000000004a36b3 : inc dword ptr [rsi - 0x44] ; clc ; call qword ptr [rsi]
0x00000000004a398b : inc dword ptr [rsi] ; sbb al, 0xf9 ; call qword ptr [rsi + 0x26fff91b]
0x00000000004a3ac7 : inc dword ptr [rsp + rbx - 7] ; call rsp
0x00000000004a3547 : inc eax ; clc ; call rax
0x00000000004a38e3 : inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a3ee3 : inc eax ; ja 0x4a3ee4 ; jmp rax
0x00000000004a3ec3 : inc eax ; jbe 0x4a3ec4 ; jmp rax
0x00000000004a3e8b : inc eax ; jne 0x4a3e8c ; call rax
0x00000000004a35fb : inc eax ; lahf ; clc ; jmp rax
0x00000000004a351f : inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004bdedf : inc eax ; push rcx ; std ; call qword ptr [rax]
0x00000000004a38f7 : inc eax ; retf -8
0x00000000004a361b : inc eax ; test al, 0xf8 ; jmp rax
0x000000000046501c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043d7b9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000413628 : inc ebx ; nop word ptr [rax + rax] ; ret
0x0000000000477abb : inc ebx ; sub eax, edx ; ret
0x0000000000460672 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000481426 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000484456 : inc esi ; add dh, byte ptr [rax] ; jmp 0x480ef3
0x00000000004a397b : inc esi ; sbb eax, 0x1d56fff9 ; stc ; jmp rsi
0x0000000000402cfb : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000041d767 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf -0x76b4
0x00000000004882f6 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x00000000004014c1 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x00000000004437a3 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000040167d : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000470ef5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004436e9 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443716 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x000000000041c35a : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x000000000047aff6 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047be71 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x0000000000491a8b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044f9da : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004bb5de : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000444528 : insb byte ptr [rdi], dx ; pop rdx ; sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000478da0 : insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004ba9a6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x00000000004950a0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495fa0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462e91 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bb5df : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b998d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000469d7f : insd dword ptr [rdi], dx ; retf
0x00000000004ba89f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478c83 : int 0x48
0x00000000004baefb : int 0x66
0x000000000040ef11 : int 0x80
0x00000000004c2161 : int 0xa
0x000000000044ba8f : int 0xf
0x0000000000488acf : int 0xfc
0x000000000041c1ab : int1 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x418c79
0x000000000045c8e3 : int1 ; add byte ptr es:[rax + 0x63], cl ; retf -0x76b8
0x000000000045a7b6 : int1 ; add eax, r8d ; ret
0x0000000000444d1c : int1 ; call rbx
0x00000000004c1849 : int1 ; cmc ; call qword ptr [rdx]
0x0000000000473ff4 : int1 ; cmp rcx, rdx ; jne 0x473fd7 ; ret
0x000000000044068b : int1 ; fscale ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000043de7b : int1 ; jl 0x43decc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de9c : int1 ; jl 0x43deed ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043deaf : int1 ; jl 0x43df00 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043df84 : int1 ; jl 0x43dfd5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfdc : int1 ; jl 0x43e02d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e079 : int1 ; jl 0x43e0ca ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000480d33 : int1 ; jmp 0x480cfa
0x0000000000480d32 : int1 ; jmp 0x480cfb
0x000000000049a317 : int1 ; jmp rcx
0x00000000004ba864 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x00000000004349db : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043d293 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000470cf5 : int1 ; or byte ptr [rax + 0x39], cl ; retf -0x7bf1
0x000000000043e5c2 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a36a4 : int1 ; ret
0x00000000004bafb6 : int1 ; ret 0x5803
0x000000000043d297 : int1 ; sub eax, edx ; ret
0x00000000004a38c9 : iretd ; clc ; jmp rax
0x000000000041af8d : iretd ; mov eax, 3 ; syscall
0x000000000041af61 : iretd ; mov eax, r8d ; syscall
0x00000000004be429 : iretd ; std ; call rsp
0x00000000004be405 : iretd ; std ; jmp rax
0x00000000004be409 : iretd ; std ; lcall ptr [rsi] ; salc ; std ; call qword ptr [rbx]
0x000000000040dcbe : ja 0x40dce3 ; ret
0x0000000000426832 : ja 0x426843 ; ret
0x000000000042c358 : ja 0x42c352 ; ret 0x7401
0x0000000000435da3 : ja 0x435da7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043b3e7 : ja 0x43b3ed ; ret
0x000000000043b403 : ja 0x43b40d ; mov dword ptr [rdi], ecx ; ret
0x000000000043b444 : ja 0x43b453 ; mov qword ptr [rdi], rcx ; ret
0x000000000043b4c9 : ja 0x43b4dd ; ret
0x000000000043b51f : ja 0x43b537 ; ret
0x000000000043b5a1 : ja 0x43b5bd ; ret
0x000000000043ba07 : ja 0x43ba11 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043ba23 : ja 0x43ba31 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043ba74 : ja 0x43ba87 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043bb59 : ja 0x43bb71 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043bbcf : ja 0x43bbeb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043bc51 : ja 0x43bc71 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043eb20 : ja 0x43eb2a ; ret
0x000000000043ebcd : ja 0x43ebf9 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043f48b : ja 0x43f493 ; ret
0x000000000043f4da : ja 0x43f4e3 ; ret
0x000000000043f669 : ja 0x43f6a3 ; ret
0x000000000043f70d : ja 0x43f757 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044fd06 : ja 0x44fd13 ; ret
0x000000000045a7a7 : ja 0x45a78e ; mov eax, r8d ; ret
0x000000000046a9dd : ja 0x46a9eb ; pop rbx ; ret
0x000000000046ad6b : ja 0x46ad73 ; ret
0x000000000046adc0 : ja 0x46adcb ; ret
0x000000000046af10 : ja 0x46af3b ; ret
0x0000000000476fc5 : ja 0x476fef ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x00000000004775b5 : ja 0x4775df ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000477951 : ja 0x47797b ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x00000000004790fe : ja 0x479150 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484cf4 : ja 0x484c81 ; ret 0x348
0x000000000048766b : ja 0x4875f8 ; ret 0x348
0x000000000048aa6d : ja 0x48966e ; jmp 0x48aa47
0x000000000048dca5 : ja 0x48c88e ; jmp 0x48dc7f
0x00000000004913ed : ja 0x48f6ee ; jmp 0x4913c7
0x00000000004a3ecd : ja 0x4a3eca ; jmp qword ptr [rax]
0x00000000004a3ee1 : ja 0x4a3ee2 ; inc eax ; ja 0x4a3ee6 ; jmp rax
0x00000000004a3ee5 : ja 0x4a3ee2 ; jmp rax
0x00000000004bb024 : ja 0x4bafab ; ret 0x48f
0x00000000004c3a31 : ja 0x4c3a2d ; call qword ptr [rcx]
0x0000000000413a78 : jae 0x413a85 ; movzx eax, byte ptr [rax] ; ret
0x000000000041734b : jae 0x417375 ; movzx eax, byte ptr [rax] ; ret
0x00000000004442bc : jae 0x444249 ; retf -0x72b8
0x00000000004444e4 : jae 0x4444c7 ; mov eax, 1 ; ret
0x000000000043ec0d : jae 0x444706 ; ret
0x000000000044e745 : jae 0x44e74a ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000046d67d : jae 0x46d6d2 ; add r8b, bpl ; retf -0x6bf
0x000000000047471b : jae 0x4746c5 ; xor eax, eax ; ret
0x0000000000476972 : jae 0x4769a0 ; add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000049d650 : jae 0x49d616 ; mov rdx, rcx ; jmp 0x49d62e
0x00000000004b95e2 : jae 0x4b95c4 ; jo 0x4b9660 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ba47e : jae 0x4ba459 ; push rsi ; pop rdx ; je 0x4ba44e ; ret 0xacfc
0x00000000004bde5d : jae 0x4bde62 ; inc dword ptr [rax] ; jne 0x4bde66 ; jmp rax
0x00000000004bf319 : jae 0x4bf331 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c1db1 : jae 0x4c1dab ; call qword ptr [rax]
0x00000000004c515f : jae 0x4c516d ; ret
0x00000000004c58f5 : jae 0x4c58fd ; add byte ptr [rax + 0x12], bl ; cli ; jmp rdx
0x000000000041de55 : jb 0x41de37 ; mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x00000000004302ca : jb 0x4302da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043041a : jb 0x43042a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043056a : jb 0x43057a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306ba : jb 0x4306ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043080a : jb 0x43081a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043095a : jb 0x43096a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aaa : jb 0x430aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430bfa : jb 0x430c0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d4a : jb 0x430d5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e9a : jb 0x430eaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430fea : jb 0x430ffa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043113a : jb 0x43114a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043128a : jb 0x43129a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313da : jb 0x4313ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043152a : jb 0x43153a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004328c1 : jb 0x4328aa ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432924 : jb 0x43290d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000004329c8 : jb 0x4329d4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043597e : jb 0x43598a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dd67 : jb 0x43dd77 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043dd73 : jb 0x43dd89 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043dd83 : jb 0x43dd8b ; mov byte ptr [rdi], cl ; ret
0x000000000043dee5 : jb 0x43def4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043def0 : jb 0x43df03 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043defd : jb 0x43df05 ; mov byte ptr [rdi], cl ; ret
0x0000000000464d6c : jb 0x464d65 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000049afb3 : jb 0x49afbd ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004a34e1 : jb 0x4a34e1 ; push qword ptr [rax] ; je 0x4a34e5 ; call rax
0x00000000004bac38 : jb 0x4bac92 ; call 0x4c15d5f7
0x00000000004014c8 : jbe 0x4014dc ; syscall
0x000000000041579b : jbe 0x41573b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000426176 : jbe 0x4261b5 ; add rax, rdi ; ret
0x0000000000426186 : jbe 0x4261b7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426196 : jbe 0x4261b7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004261a6 : jbe 0x4261b7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c3c3 : jbe 0x42c3de ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c3b9 ; ret
0x000000000045aaad : jbe 0x45aaec ; add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x000000000045af72 : jbe 0x45aeff ; ret 0x8166
0x000000000046429a : jbe 0x464210 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047830f : jbe 0x47831a ; ret
0x000000000049de46 : jbe 0x49de58 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a36e8 : jbe 0x4a36b1 ; clc ; call qword ptr [rsi]
0x00000000004a3e9d : jbe 0x4a3e9a ; call qword ptr [rax]
0x00000000004a3ea1 : jbe 0x4a3e9e ; jmp qword ptr [rax]
0x00000000004a3ec1 : jbe 0x4a3ec2 ; inc eax ; jbe 0x4a3ec6 ; jmp rax
0x00000000004a3ec5 : jbe 0x4a3ec2 ; jmp rax
0x00000000004a3ec9 : jbe 0x4a3eca ; inc dword ptr [rax] ; ja 0x4a3ece ; jmp qword ptr [rax]
0x00000000004baebc : jbe 0x4bae8f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004baebb : jbe 0x4bae90 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4be568 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400cc4 : je 0x400cf2 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x0000000000401733 : je 0x401747 ; xor esi, esi ; mov edi, 1 ; call rax
0x0000000000402279 : je 0x40228d ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x00000000004024c5 : je 0x4024d9 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402da4 : je 0x402db4 ; mov edi, 0x6cc060 ; call rax
0x0000000000402ff3 : je 0x40300d ; mov edi, 0x6cbfe0 ; call rax
0x00000000004031e7 : je 0x403201 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403602 : je 0x403612 ; mov edi, 0x6cc0a0 ; call rax
0x000000000040364a : je 0x40365c ; mov edi, 0x6cc0a0 ; call r15
0x000000000040374a : je 0x40375a ; mov edi, 0x6cc0a0 ; call rax
0x000000000040f433 : je 0x40f45f ; xor byte ptr [rcx], dh ; shr al, cl ; ret
0x000000000040fece : je 0x40fedd ; mov eax, edx ; pop rbx ; ret
0x0000000000410043 : je 0x410081 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004105e8 : je 0x410613 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411617 : je 0x411628 ; call 0x41e084
0x0000000000413604 : je 0x413640 ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x0000000000414b8b : je 0x414b31 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415763 : je 0x41571d ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004158d3 : je 0x41588d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415a45 : je 0x415a52 ; ret
0x0000000000415a77 : je 0x415a86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041659a : je 0x4165a5 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004183cd : je 0x41858c ; mov rdx, rax ; jmp 0x4183f8
0x000000000041890a : je 0x418911 ; pop rbx ; ret
0x00000000004189e7 : je 0x4189ed ; call rax
0x0000000000419534 : je 0x419541 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041af5c : je 0x41af8b ; xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x000000000041e162 : je 0x41e18b ; call rax
0x000000000041eb52 : je 0x41eb7e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041f0e8 : je 0x41f0ee ; call rax
0x00000000004210f9 : je 0x421102 ; ret
0x0000000000421382 : je 0x421397 ; mov eax, 0x16 ; ret
0x00000000004213d1 : je 0x4213e3 ; lea rax, qword ptr [rip + 0x1a966] ; ret
0x0000000000422b03 : je 0x422acd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004237d5 : je 0x4237dd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000423844 : je 0x423856 ; lea rax, qword ptr [rip + 0x14853] ; ret
0x00000000004239b4 : je 0x4239be ; bsf eax, edx ; ret
0x00000000004239b4 : je 0x4239bf ; bsf eax, edx ; ret
0x0000000000423a5d : je 0x423a75 ; bsf rax, rdx ; ret
0x0000000000423a5d : je 0x423a76 ; bsf rax, rdx ; ret
0x00000000004239fc : je 0x423a89 ; bsf rax, rdx ; ret
0x000000000042572b : je 0x425756 ; sub byte ptr [rax - 0x77], cl ; retf
0x000000000042606c : je 0x4260c3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004261de : je 0x4261f1 ; lea rax, qword ptr [rip + 0x8449] ; ret
0x00000000004267c0 : je 0x4267d2 ; lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000426d74 : je 0x426d86 ; lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000429243 : je 0x42920d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042add3 : je 0x42ad9d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042ce9a : je 0x42cef1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cf51 : je 0x42cf69 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000042f9c7 : je 0x42f9d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e4fd : je 0x43e4c6 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e4d5 : je 0x43e4c8 ; movzx eax, cl ; pop rbx ; ret
0x000000000043e4fd : je 0x43e4c8 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e60e : je 0x43e61c ; xor eax, eax ; ret
0x000000000043e609 : je 0x43e629 ; cmp eax, 2 ; je 0x43e621 ; xor eax, eax ; ret
0x000000000043e65d : je 0x43e643 ; ret
0x000000000043e748 : je 0x43e758 ; mov edi, 0x6cd200 ; call rax
0x000000000043e760 : je 0x43e770 ; mov edi, 0x6cd200 ; call rax
0x000000000043eac0 : je 0x43eaa1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f588 : je 0x43f5df ; add byte ptr [rax], al ; ret
0x000000000043ffaa : je 0x43ffb1 ; ret
0x00000000004412f0 : je 0x441302 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000442a59 : je 0x442a5e ; ret
0x0000000000442abd : je 0x442ac2 ; ret
0x00000000004441f3 : je 0x444203 ; mov edi, 0x6cb140 ; call rax
0x0000000000444381 : je 0x444391 ; mov edi, 0x6cb140 ; call rax
0x0000000000444508 : je 0x444512 ; ret
0x0000000000444524 : je 0x444539 ; mov dword ptr [rip + 0x285a6c], edx ; pop rbx ; ret
0x0000000000444d17 : je 0x444d43 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000448e14 : je 0x448e43 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044d7b8 : je 0x44d7c3 ; pop rbx ; ret
0x000000000044d7b3 : je 0x44d7c8 ; cmp esi, 3 ; je 0x44d7c8 ; pop rbx ; ret
0x000000000044dd40 : je 0x44dd50 ; mov edi, 0x6cd200 ; call rax
0x000000000044dd6f : je 0x44dd87 ; mov edi, 0x6cd200 ; call rax
0x000000000044de70 : je 0x44de76 ; call rax
0x000000000044decf : je 0x44dedf ; mov edi, 0x6cd200 ; call rax
0x000000000044e048 : je 0x44e05f ; mov edi, 0x6cd200 ; call rax
0x000000000044e328 : je 0x44e338 ; mov edi, 0x6cd200 ; call rax
0x000000000044e42c : je 0x44e432 ; call rax
0x000000000044f2eb : je 0x44f2f1 ; call rax
0x000000000044f8ab : je 0x44f8b3 ; ret
0x0000000000450e82 : je 0x450eaf ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000463208 : je 0x463232 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463cd6 : je 0x463d26 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463cd5 : je 0x463d27 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000464abc : je 0x464ac2 ; ret
0x0000000000464aea : je 0x464b4c ; pop rbp ; pop r12 ; ret
0x0000000000464b8f : je 0x464bf1 ; pop rbp ; pop r12 ; ret
0x0000000000464ccd : je 0x464cd8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464d11 : je 0x464d1c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004658ec : je 0x465915 ; bsf rax, rdx ; ret
0x00000000004658ec : je 0x465916 ; bsf rax, rdx ; ret
0x000000000046587c : je 0x465929 ; bsf rax, rdx ; ret
0x0000000000466869 : je 0x466889 ; mov cl, dl ; and cl, 0xf ; je 0x466899 ; ret
0x0000000000466870 : je 0x466892 ; ret
0x0000000000466885 : je 0x4668a6 ; add rax, 2 ; ret
0x0000000000466c0b : je 0x466c34 ; call rbx
0x0000000000466cb3 : je 0x466cdc ; call rbx
0x0000000000467098 : je 0x4670a5 ; test edx, edx ; jne 0x467097 ; ret
0x0000000000467097 : je 0x4670a6 ; test edx, edx ; jne 0x467098 ; ret
0x000000000046aa82 : je 0x46aaa0 ; xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf -0x7cb8
0x000000000046b295 : je 0x46b284 ; ret
0x000000000046dd7a : je 0x46dd04 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470e84 : je 0x470e94 ; mov edi, 0x6cb100 ; call rax
0x0000000000474e78 : je 0x474e88 ; mov edi, 0x6cb140 ; call rax
0x0000000000474ea0 : je 0x474eb0 ; mov edi, 0x6cb140 ; call rax
0x0000000000474f16 : je 0x474f26 ; mov edi, 0x6cb140 ; call rax
0x000000000047643b : je 0x47644f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x000000000047645e : je 0x4764aa ; shl rdx, 5 ; add rdx, rax ; jmp 0x476481
0x0000000000476a2c : je 0x476a51 ; pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x00000000004769e3 : je 0x476a57 ; mov edi, 0x6cb140 ; call rax
0x0000000000476a47 : je 0x476ab0 ; pop rbx ; ret
0x0000000000476b84 : je 0x476b8b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000476d7f : je 0x476d86 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047839e : je 0x478369 ; mov edi, 0x6cb140 ; call rax
0x000000000047837f : je 0x4783ad ; or byte ptr [rdi + 0x6cb140], bh ; call rax
0x00000000004784e6 : je 0x4784f2 ; ret
0x00000000004784fc : je 0x47850c ; mov edi, 0x6cb140 ; call rax
0x000000000047a94a : je 0x47a955 ; mov eax, edx ; pop rbx ; ret
0x000000000047b242 : je 0x47b256 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047beac : je 0x47bedb ; js 0x47bf01 ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047e918 : je 0x47e928 ; mov edi, 0x6cb140 ; call rax
0x000000000047e944 : je 0x47e954 ; mov edi, 0x6cb140 ; call rax
0x000000000047ebea : je 0x47ebfe ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000048791b : je 0x4878a8 ; ret 0x348
0x000000000048809b : je 0x4880ab ; mov edi, 0x6cb140 ; call rax
0x00000000004880c2 : je 0x4880d2 ; mov edi, 0x6cb140 ; call rax
0x0000000000488141 : je 0x488151 ; mov edi, 0x6cb140 ; call rax
0x000000000048816a : je 0x48817a ; mov edi, 0x6cb140 ; call rax
0x00000000004942a3 : je 0x49426d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496253 : je 0x49621d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000049a085 : je 0x49a063 ; ret
0x000000000049c350 : je 0x49c308 ; add rsp, 0x18 ; ret
0x000000000049c307 : je 0x49c379 ; add rsp, 0x18 ; ret
0x000000000049e243 : je 0x49e254 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e259 ; ret
0x000000000049e3fd : je 0x49e467 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e878 : je 0x49e883 ; ret
0x000000000049eaea : je 0x49eafa ; mov edi, 0x6cb100 ; call rax
0x000000000049ebab : je 0x49ebbb ; mov edi, 0x6cb100 ; call rax
0x00000000004a090e : je 0x4a0919 ; call rax
0x00000000004a34e5 : je 0x4a34e1 ; call rax
0x00000000004b89ec : je 0x4b8a1a ; push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004b9748 : je 0x4b9713 ; xor al, 0xd8 ; ret
0x00000000004b9987 : je 0x4b9984 ; jmp 0x4b995e
0x00000000004ba482 : je 0x4ba44a ; ret 0xacfc
0x00000000004bf312 : je 0x4bf320 ; ret
0x00000000004c1cdc : je 0x4c1d1c ; add byte ptr [rax], al ; add byte ptr [rbx - 0xa], cl ; call qword ptr [rsi]
0x00000000004125c2 : jg 0x41263b ; mov eax, 3 ; syscall
0x0000000000413608 : jg 0x41367e ; xor eax, eax ; syscall
0x0000000000426842 : jg 0x426894 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004268a0 : jg 0x4268ec ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x0000000000426967 : jg 0x426980 ; jne 0x426957 ; mov rax, rdi ; ret
0x000000000042c3c7 : jg 0x42c3de ; jne 0x42c3b5 ; ret
0x0000000000431ea9 : jg 0x431efc ; ret
0x0000000000431ef0 : jg 0x431f40 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000431ef5 : jg 0x431f48 ; retf
0x0000000000431f2f : jg 0x431f7a ; ret
0x0000000000431f6f : jg 0x431fba ; retf
0x00000000004320a9 : jg 0x4320fc ; ret 0x894c
0x00000000004320f0 : jg 0x432140 ; mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x00000000004320f5 : jg 0x432148 ; retf -0x76b4
0x000000000043212f : jg 0x43217a ; ret 0x894c
0x000000000043216b : jg 0x4321b6 ; retf -0x76b4
0x00000000004328c0 : jg 0x43293c ; loopne 0x432891 ; jp 0x43294d ; jp 0x4328c0 ; ret
0x000000000043296c : jg 0x43297d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000004349b8 : jg 0x434a09 ; loope 0x4349b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a2f : jg 0x434a7a ; ret 0xff2
0x0000000000434a48 : jg 0x434a99 ; loop 0x434a47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434abf : jg 0x434b0a ; ret
0x0000000000434ad8 : jg 0x434b29 ; jrcxz 0x434ad7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b68 : jg 0x434bb9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434be8 : jg 0x434c39 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c68 : jg 0x434cb9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ce8 : jg 0x434d39 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d68 : jg 0x434db9 ; call 0x4fc25d6a
0x0000000000434de8 : jg 0x434e39 ; jmp 0x4fc25dea
0x0000000000434e45 : jg 0x434e95 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000434e4f : jg 0x434e9a ; retf 0xff2
0x0000000000434ec5 : jg 0x434f15 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000434ecf : jg 0x434f1a ; retf
0x0000000000434f68 : jg 0x434fb9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fe8 : jg 0x435039 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435078 : jg 0x4350c9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004350f8 : jg 0x435149 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043516c : jg 0x435177 ; ret
0x00000000004351c6 : jg 0x4351d9 ; ret
0x00000000004351c1 : jg 0x435211 ; psllq mm1, qword ptr [rdi] ; jg 0x4351de ; ret
0x0000000000435236 : jg 0x435249 ; ret
0x00000000004352a6 : jg 0x4352b9 ; ret
0x00000000004352a1 : jg 0x4352f1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435316 : jg 0x435329 ; ret
0x0000000000435311 : jg 0x435361 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435386 : jg 0x435399 ; ret
0x0000000000435381 : jg 0x4353d1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353f6 : jg 0x435409 ; ret
0x00000000004353f1 : jg 0x435441 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435466 : jg 0x435479 ; ret
0x0000000000435461 : jg 0x4354b1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004354d6 : jg 0x4354e9 ; ret
0x00000000004354d1 : jg 0x435521 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435546 : jg 0x435559 ; ret
0x00000000004355b6 : jg 0x4355c9 ; ret
0x0000000000435626 : jg 0x435639 ; ret
0x0000000000435621 : jg 0x435671 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435696 : jg 0x4356a9 ; ret
0x0000000000435691 : jg 0x4356e1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435706 : jg 0x435719 ; ret
0x0000000000435701 : jg 0x435751 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435776 : jg 0x435789 ; ret
0x0000000000435771 : jg 0x4357c1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004357e6 : jg 0x4357f9 ; ret
0x00000000004357e1 : jg 0x435831 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435924 : jg 0x435935 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000435938 : jg 0x435949 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000435daa : jg 0x435da6 ; ret
0x000000000043b4b6 : jg 0x43b4c1 ; ret
0x000000000043b4c6 : jg 0x43b4d4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b4da : jg 0x43b4e9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b4f9 : jg 0x43b507 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b509 : jg 0x43b517 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b519 : jg 0x43b52a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b53a : jg 0x43b549 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b55a : jg 0x43b569 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b57a : jg 0x43b589 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b59a : jg 0x43b5ac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b5dd : jg 0x43b5ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b5fd : jg 0x43b60f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b61b : jg 0x43b62b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b63b : jg 0x43b64b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b65b : jg 0x43b66b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043b67b : jg 0x43b68b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043bb46 : jg 0x43bb55 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043bb56 : jg 0x43bb68 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043bb89 : jg 0x43bb9b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043bba9 : jg 0x43bbbb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bccf : jg 0x43bd2f ; or eax, 0x1c478d48 ; ret
0x000000000043dd42 : jg 0x43dd52 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dde3 : jg 0x43de34 ; loopne 0x43de38 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dec7 : jg 0x43ded7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043debd : jg 0x43dedd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e490 : jg 0x43e4cd ; ret 0x2b77
0x0000000000449f2f : jg 0x449ebc ; ret 0x5c77
0x000000000047365d : jg 0x47362b ; std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x0000000000476fc9 : jg 0x476ff7 ; call r11
0x00000000004775b9 : jg 0x4775e7 ; call r11
0x0000000000477955 : jg 0x477983 ; call r11
0x000000000047f351 : jg 0x47f357 ; add byte ptr [rcx], bh ; ret
0x0000000000491a64 : jg 0x491a71 ; ret 0x5488
0x00000000004a3501 : jg 0x4a3501 ; call qword ptr [rax - 0x1f000780]
0x00000000004a3500 : jg 0x4a3502 ; call qword ptr [rax - 0x1f000780]
0x00000000004c4af9 : jg 0x4c4af6 ; call rdx
0x000000000040e0de : jge 0x40e0e3 ; call r14
0x000000000044029b : jge 0x44029f ; call rbx
0x00000000004403c2 : jge 0x4403c6 ; call rbx
0x00000000004403d0 : jge 0x4403d4 ; call rbx
0x00000000004404ff : jge 0x4404e4 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x44050f ; call rbx
0x0000000000440505 : jge 0x440509 ; call rbx
0x0000000000440675 : jge 0x440679 ; call rbx
0x0000000000440683 : jge 0x440687 ; call rbx
0x0000000000440ad6 : jge 0x440aa1 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441e93 : jge 0x441e97 ; call rbx
0x0000000000441fbb : jge 0x441fbf ; call rbx
0x00000000004420fe : jge 0x442102 ; call rbx
0x00000000004421ff : jge 0x442203 ; call rbx
0x000000000044221b : jge 0x44221f ; call rbx
0x0000000000442576 : jge 0x442527 ; mov eax, 3 ; syscall
0x0000000000442663 : jge 0x442604 ; mov eax, 3 ; syscall
0x0000000000454034 : jge 0x45406b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000466a46 : jge 0x466a4b ; call r12
0x000000000049c71f : jge 0x49c71c ; leave ; ret
0x000000000049c7b7 : jge 0x49c7ba ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c84b : jge 0x49c848 ; leave ; ret
0x000000000049c897 : jge 0x49c89a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c960 : jge 0x49c963 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c9ef : jge 0x49c9ec ; leave ; ret
0x000000000049ca40 : jge 0x49ca43 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049ef10 : jge 0x49ef25 ; call r12
0x00000000004a3f5d : jge 0x4a3f5a ; call rax
0x00000000004a3f65 : jge 0x4a3f62 ; call qword ptr [rax]
0x00000000004a3f61 : jge 0x4a3f62 ; push rax ; jge 0x4a3f66 ; call qword ptr [rax]
0x00000000004b8a4a : jge 0x4b8a2b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004ba394 : jge 0x4ba405 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000400cc8 : jl 0x400cf2 ; or al, 0x41 ; call rsp
0x0000000000400d1c : jl 0x400d4a ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000411fa5 : jl 0x411fd3 ; cmp byte ptr [rcx + rcx*4 - 0x12], cl ; call 0x41e248
0x000000000041493b : jl 0x414986 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004170b6 : jl 0x4170e9 ; add al, ch ; ret 0x6a
0x000000000041b5b5 : jl 0x41b5e0 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041b6ec : jl 0x41b717 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004358a4 : jl 0x4358f3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004358e0 : jl 0x43592f ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000435ade : jl 0x435b2d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435c45 : jl 0x435c94 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435da7 : jl 0x435df6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043de7c : jl 0x43decb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de9d : jl 0x43deec ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043deb0 : jl 0x43deff ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043df85 : jl 0x43dfd4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfdd : jl 0x43e02c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e07a : jl 0x43e0c9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043f694 : jl 0x43f6c0 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f694 : jl 0x43f6c1 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043fc0a : jl 0x43fc38 ; or byte ptr [rax + 0x101], bh ; syscall
0x000000000043fcc1 : jl 0x43fcef ; or byte ptr [rax + 3], bh ; syscall
0x0000000000440730 : jl 0x44075e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004476e6 : jl 0x447714 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000448049 : jl 0x448077 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044842f : jl 0x44845d ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000448e19 : jl 0x448e43 ; call r15
0x00000000004491c0 : jl 0x4491ee ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449ed9 : jl 0x449f07 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044ade5 : jl 0x44ae13 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044d398 : jl 0x44d3c3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044fe82 : jl 0x44fead ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000452b8c : jl 0x452bb7 ; and byte ptr [rax + 1], cl ; ret
0x0000000000459268 : jl 0x459232 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045af2b : jl 0x45af56 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000045ce2c : jl 0x45ce57 ; and byte ptr [rax + 1], cl ; ret
0x0000000000464a35 : jl 0x4649d1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000466614 : jl 0x466616 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000473669 : jl 0x473698 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047b9dd : jl 0x47ba07 ; js 0x47ba26 ; call rsp
0x000000000047bcf2 : jl 0x47bd1c ; js 0x47bd3b ; call rsp
0x000000000047beb1 : jl 0x47bedb ; js 0x47befa ; call rsp
0x000000000047c0b9 : jl 0x47c0e3 ; js 0x47c102 ; call rsp
0x000000000047d6b7 : jl 0x47d683 ; adc byte ptr [rax - 0x77], cl ; retf -0x74b8
0x000000000048988e : jl 0x4898b9 ; or byte ptr [rax], al ; jne 0x489863 ; jmp 0x48986b
0x000000000048cabe : jl 0x48cae9 ; adc byte ptr [rax], al ; jne 0x48ca93 ; jmp 0x48ca9b
0x000000000048ddb6 : jl 0x48dde1 ; sbb byte ptr [rax + 0x63], cl ; retf
0x000000000049ad72 : jl 0x49ad9d ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004a39ec : jl 0x4a3a09 ; stc ; jmp qword ptr [rdx]
0x00000000004a3f3d : jl 0x4a3f3a ; call rax
0x00000000004a3f45 : jl 0x4a3f42 ; call qword ptr [rax]
0x00000000004a3f41 : jl 0x4a3f42 ; push rax ; jl 0x4a3f46 ; call qword ptr [rax]
0x00000000004ba592 : jl 0x4ba5f1 ; leave ; retf
0x00000000004be02c : jl 0x4bdff7 ; std ; inc dword ptr [rax] ; retf
0x00000000004c49f9 : jl 0x4c49f6 ; call rdi
0x00000000004239fe : jle 0x423a07 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004239fe : jle 0x423a08 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d802 : jle 0x44d815 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000045bac1 : jle 0x45bb00 ; add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000047ca4d : jle 0x47ca5b ; ret
0x00000000004b8a42 : jle 0x4b89db ; xlatb ; retf -0x5e15
0x00000000004ba605 : jle 0x4ba640 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004216dd : jmp 0x100c4029
0x0000000000421786 : jmp 0x100c40d2
0x00000000004218c6 : jmp 0x100c4212
0x0000000000421a06 : jmp 0x100c4352
0x0000000000421b46 : jmp 0x100c4492
0x0000000000421c86 : jmp 0x100c45d2
0x0000000000421dc6 : jmp 0x100c4712
0x0000000000421f06 : jmp 0x100c4852
0x0000000000422046 : jmp 0x100c4992
0x0000000000422186 : jmp 0x100c4ad2
0x00000000004222c6 : jmp 0x100c4c12
0x0000000000422406 : jmp 0x100c4d52
0x0000000000422546 : jmp 0x100c4e92
0x0000000000422686 : jmp 0x100c4fd2
0x00000000004227c6 : jmp 0x100c5112
0x0000000000422906 : jmp 0x100c5252
0x0000000000422b29 : jmp 0x100c5475
0x0000000000422bb6 : jmp 0x100c5502
0x0000000000422c86 : jmp 0x100c55d2
0x0000000000422d56 : jmp 0x100c56a2
0x0000000000422e16 : jmp 0x100c5762
0x0000000000422ee6 : jmp 0x100c5832
0x0000000000422fb6 : jmp 0x100c5902
0x0000000000423086 : jmp 0x100c59d2
0x0000000000423156 : jmp 0x100c5aa2
0x0000000000423226 : jmp 0x100c5b72
0x00000000004232f6 : jmp 0x100c5c42
0x00000000004233c6 : jmp 0x100c5d12
0x0000000000423496 : jmp 0x100c5de2
0x0000000000423566 : jmp 0x100c5eb2
0x0000000000423636 : jmp 0x100c5f82
0x0000000000423706 : jmp 0x100c6052
0x0000000000423bed : jmp 0x100c6539
0x0000000000423cc6 : jmp 0x100c6612
0x0000000000423e46 : jmp 0x100c6792
0x0000000000423fc6 : jmp 0x100c6912
0x0000000000424146 : jmp 0x100c6a92
0x00000000004242c6 : jmp 0x100c6c12
0x0000000000424446 : jmp 0x100c6d92
0x00000000004245c6 : jmp 0x100c6f12
0x0000000000424746 : jmp 0x100c7092
0x00000000004248c6 : jmp 0x100c7212
0x0000000000424a46 : jmp 0x100c7392
0x0000000000424bc6 : jmp 0x100c7512
0x0000000000424d46 : jmp 0x100c7692
0x0000000000424ec6 : jmp 0x100c7812
0x0000000000425046 : jmp 0x100c7992
0x00000000004251c6 : jmp 0x100c7b12
0x0000000000427077 : jmp 0x100c99c3
0x00000000004271fc : jmp 0x100c9b48
0x000000000042740c : jmp 0x100c9d58
0x000000000042761c : jmp 0x100c9f68
0x000000000042782c : jmp 0x100ca178
0x0000000000427a3c : jmp 0x100ca388
0x0000000000427c4c : jmp 0x100ca598
0x0000000000427e5c : jmp 0x100ca7a8
0x000000000042806c : jmp 0x100ca9b8
0x000000000042827c : jmp 0x100cabc8
0x000000000042848c : jmp 0x100cadd8
0x000000000042869c : jmp 0x100cafe8
0x00000000004288ac : jmp 0x100cb1f8
0x0000000000428abc : jmp 0x100cb408
0x0000000000428ccc : jmp 0x100cb618
0x0000000000428edc : jmp 0x100cb828
0x00000000004292af : jmp 0x100cbbfb
0x0000000000429418 : jmp 0x100cbd64
0x00000000004295b8 : jmp 0x100cbf04
0x0000000000429758 : jmp 0x100cc0a4
0x00000000004298f8 : jmp 0x100cc244
0x0000000000429a98 : jmp 0x100cc3e4
0x0000000000429c38 : jmp 0x100cc584
0x0000000000429dd8 : jmp 0x100cc724
0x0000000000429f78 : jmp 0x100cc8c4
0x000000000042a118 : jmp 0x100cca64
0x000000000042a2b8 : jmp 0x100ccc04
0x000000000042a458 : jmp 0x100ccda4
0x000000000042a5f8 : jmp 0x100ccf44
0x000000000042a798 : jmp 0x100cd0e4
0x000000000042a938 : jmp 0x100cd284
0x000000000042aad8 : jmp 0x100cd424
0x000000000042ae25 : jmp 0x100cd771
0x000000000042af2e : jmp 0x100cd87a
0x000000000042b07e : jmp 0x100cd9ca
0x000000000042b1ce : jmp 0x100cdb1a
0x000000000042b31e : jmp 0x100cdc6a
0x000000000042b46e : jmp 0x100cddba
0x000000000042b5be : jmp 0x100cdf0a
0x000000000042b70e : jmp 0x100ce05a
0x000000000042b85e : jmp 0x100ce1aa
0x000000000042b9ae : jmp 0x100ce2fa
0x000000000042bafe : jmp 0x100ce44a
0x000000000042bc4e : jmp 0x100ce59a
0x000000000042bd9e : jmp 0x100ce6ea
0x000000000042beee : jmp 0x100ce83a
0x000000000042c03e : jmp 0x100ce98a
0x000000000042c18e : jmp 0x100ceada
0x000000000042d1cd : jmp 0x100cfb19
0x000000000042d276 : jmp 0x100cfbc2
0x000000000042d396 : jmp 0x100cfce2
0x000000000042d4b6 : jmp 0x100cfe02
0x000000000042d5d6 : jmp 0x100cff22
0x000000000042d6f6 : jmp 0x100d0042
0x000000000042d816 : jmp 0x100d0162
0x000000000042d936 : jmp 0x100d0282
0x000000000042da56 : jmp 0x100d03a2
0x000000000042db76 : jmp 0x100d04c2
0x000000000042dc96 : jmp 0x100d05e2
0x000000000042ddb6 : jmp 0x100d0702
0x000000000042ded6 : jmp 0x100d0822
0x000000000042dff6 : jmp 0x100d0942
0x000000000042e116 : jmp 0x100d0a62
0x000000000042e236 : jmp 0x100d0b82
0x00000000004360d7 : jmp 0x100d8a23
0x000000000043625c : jmp 0x100d8ba8
0x000000000043645c : jmp 0x100d8da8
0x000000000043665c : jmp 0x100d8fa8
0x000000000043685c : jmp 0x100d91a8
0x0000000000436a5c : jmp 0x100d93a8
0x0000000000436c5c : jmp 0x100d95a8
0x0000000000436e5c : jmp 0x100d97a8
0x000000000043705c : jmp 0x100d99a8
0x000000000043725c : jmp 0x100d9ba8
0x000000000043745c : jmp 0x100d9da8
0x000000000043765c : jmp 0x100d9fa8
0x000000000043785c : jmp 0x100da1a8
0x0000000000437a5c : jmp 0x100da3a8
0x0000000000437c5c : jmp 0x100da5a8
0x0000000000437e5c : jmp 0x100da7a8
0x0000000000491cc7 : jmp 0x10134613
0x0000000000491e6c : jmp 0x101347b8
0x00000000004920bc : jmp 0x10134a08
0x000000000049230c : jmp 0x10134c58
0x000000000049255c : jmp 0x10134ea8
0x00000000004927ac : jmp 0x101350f8
0x00000000004929fc : jmp 0x10135348
0x0000000000492c4c : jmp 0x10135598
0x0000000000492e9c : jmp 0x101357e8
0x00000000004930ec : jmp 0x10135a38
0x000000000049333c : jmp 0x10135c88
0x000000000049358c : jmp 0x10135ed8
0x00000000004937dc : jmp 0x10136128
0x0000000000493a2c : jmp 0x10136378
0x0000000000493c7c : jmp 0x101365c8
0x0000000000493ecc : jmp 0x10136818
0x000000000049430f : jmp 0x10136c5b
0x00000000004944a8 : jmp 0x10136df4
0x0000000000494688 : jmp 0x10136fd4
0x0000000000494868 : jmp 0x101371b4
0x0000000000494a38 : jmp 0x10137384
0x0000000000494c18 : jmp 0x10137564
0x0000000000494df8 : jmp 0x10137744
0x0000000000494fd8 : jmp 0x10137924
0x00000000004951b8 : jmp 0x10137b04
0x0000000000495398 : jmp 0x10137ce4
0x0000000000495578 : jmp 0x10137ec4
0x0000000000495758 : jmp 0x101380a4
0x0000000000495938 : jmp 0x10138284
0x0000000000495b18 : jmp 0x10138464
0x0000000000495cf8 : jmp 0x10138644
0x0000000000495ed8 : jmp 0x10138824
0x00000000004962a5 : jmp 0x10138bf1
0x00000000004963ee : jmp 0x10138d3a
0x000000000049656e : jmp 0x10138eba
0x00000000004966ee : jmp 0x1013903a
0x000000000049686e : jmp 0x101391ba
0x00000000004969ee : jmp 0x1013933a
0x0000000000496b6e : jmp 0x101394ba
0x0000000000496cee : jmp 0x1013963a
0x0000000000496e6e : jmp 0x101397ba
0x0000000000496fee : jmp 0x1013993a
0x000000000049716e : jmp 0x10139aba
0x00000000004972ee : jmp 0x10139c3a
0x000000000049746e : jmp 0x10139dba
0x00000000004975ee : jmp 0x10139f3a
0x000000000049776e : jmp 0x1013a0ba
0x00000000004978ee : jmp 0x1013a23a
0x0000000000497c97 : jmp 0x1013a5e3
0x0000000000497e3c : jmp 0x1013a788
0x000000000049807c : jmp 0x1013a9c8
0x00000000004982bc : jmp 0x1013ac08
0x00000000004984fc : jmp 0x1013ae48
0x000000000049873c : jmp 0x1013b088
0x000000000049897c : jmp 0x1013b2c8
0x0000000000498bbc : jmp 0x1013b508
0x0000000000498dfc : jmp 0x1013b748
0x000000000049903c : jmp 0x1013b988
0x000000000049927c : jmp 0x1013bbc8
0x00000000004994bc : jmp 0x1013be08
0x00000000004996fc : jmp 0x1013c048
0x000000000049993c : jmp 0x1013c288
0x0000000000499b7c : jmp 0x1013c4c8
0x0000000000499dbc : jmp 0x1013c708
0x0000000000400549 : jmp 0x400516
0x00000000004007bd : jmp 0x400782
0x0000000000401111 : jmp 0x401071
0x00000000004021a2 : jmp 0x4021b8
0x0000000000402552 : jmp 0x402301
0x000000000040f5cb : jmp 0x40f521
0x00000000004121d3 : jmp 0x4120db
0x00000000004174e5 : jmp 0x4174b2
0x0000000000418a03 : jmp 0x418a50
0x000000000041b107 : jmp 0x41a94c
0x000000000041b118 : jmp 0x41af8b
0x0000000000420311 : jmp 0x4202e0
0x0000000000421484 : jmp 0x42144a
0x00000000004215d8 : jmp 0x42159d
0x000000000042cfac : jmp 0x42cf72
0x000000000042d0f8 : jmp 0x42d0bd
0x000000000042ead8 : jmp 0x42eaa6
0x000000000042eb56 : jmp 0x42eb24
0x000000000042efe8 : jmp 0x42efb6
0x000000000042f066 : jmp 0x42f034
0x000000000043da8e : jmp 0x43da54
0x000000000043db5f : jmp 0x43db25
0x000000000043dbce : jmp 0x43db94
0x000000000043eefb : jmp 0x43ee25
0x000000000043f7a3 : jmp 0x43f716
0x00000000004400a3 : jmp 0x440046
0x000000000044403c : jmp 0x443b1f
0x0000000000445bb3 : jmp 0x445b79
0x000000000044602e : jmp 0x445ff3
0x0000000000448523 : jmp 0x4484f1
0x000000000044acaf : jmp 0x44ac7d
0x000000000044f7ef : jmp 0x44f411
0x0000000000450681 : jmp 0x45068b
0x0000000000452a46 : jmp 0x452a13
0x0000000000456e73 : jmp 0x456e4f
0x000000000045a95a : jmp 0x45a982
0x0000000000462a24 : jmp 0x4629e9
0x0000000000462a23 : jmp 0x4629ea
0x0000000000464ffb : jmp 0x464fc1
0x0000000000464ffa : jmp 0x464fc2
0x000000000046610b : jmp 0x465f61
0x000000000046a1cb : jmp 0x46a190
0x000000000046aac0 : jmp 0x46aa86
0x000000000046bd5f : jmp 0x46bd2d
0x000000000046d90b : jmp 0x46d8d1
0x0000000000473d28 : jmp 0x473cf5
0x0000000000479771 : jmp 0x47973f
0x0000000000479e51 : jmp 0x479e1f
0x000000000047a592 : jmp 0x47a5e4
0x000000000047d6fc : jmp 0x47d70e
0x000000000047e1e2 : jmp 0x47e152
0x000000000047e40c : jmp 0x47e358
0x000000000047ca65 : jmp 0x47f22b
0x000000000047f560 : jmp 0x47f52d
0x000000000047fbfa : jmp 0x47f6a4
0x00000000004800a2 : jmp 0x4800f4
0x0000000000480768 : jmp 0x480733
0x0000000000480d34 : jmp 0x480cf9
0x000000000048445a : jmp 0x480eef
0x000000000048555c : jmp 0x48200c
0x0000000000483a95 : jmp 0x483a5a
0x00000000004855bb : jmp 0x485580
0x00000000004856f9 : jmp 0x4856c6
0x0000000000486fd9 : jmp 0x486fa6
0x0000000000487018 : jmp 0x486fe5
0x000000000048729a : jmp 0x48725f
0x000000000048aa73 : jmp 0x48aa41
0x000000000048aa70 : jmp 0x48aa75
0x000000000048dcab : jmp 0x48dc79
0x000000000048dca8 : jmp 0x48dcad
0x000000000045a223 : jmp 0x49102b73
0x00000000004913f3 : jmp 0x4913c1
0x0000000000491d6e : jmp 0x491d84
0x00000000004964ee : jmp 0x496504
0x0000000000496aee : jmp 0x496b04
0x0000000000496dee : jmp 0x496e04
0x00000000004970ee : jmp 0x497104
0x00000000004973ee : jmp 0x497404
0x00000000004976ee : jmp 0x497704
0x000000000049adce : jmp 0x49ad9c
0x00000000004a0a55 : jmp 0x4a0a7d
0x00000000004b8c4a : jmp 0x4b8c89
0x00000000004b9989 : jmp 0x4b995c
0x00000000004ba609 : jmp 0x4ba5d7
0x00000000004ba980 : jmp 0x4ba914
0x00000000004ba97f : jmp 0x4ba915
0x00000000004bab56 : jmp 0x4bab24
0x0000000000434dea : jmp 0x4fc25de8
0x0000000000434de9 : jmp 0x4fc25de9
0x0000000000449072 : jmp 0xffffffff810f1398
0x0000000000449325 : jmp 0xffffffff810f164b
0x00000000004b8bf7 : jmp 0xffffffff9115a5ce
0x00000000004694db : jmp 0xffffffffbf091e2b
0x0000000000479101 : jmp 0xffffffffc3571a56
0x000000000047b599 : jmp 0xffffffffca70fde1
0x000000000041ca9c : jmp 0xffffffffcb7b12a6
0x000000000041ce1d : jmp 0xffffffffcb7b1627
0x000000000041d803 : jmp 0xffffffffcb7b200d
0x000000000041de28 : jmp 0xffffffffcb7b2632
0x000000000047b523 : jmp 0xffffffffcbd0fd2d
0x00000000004a3d9f : jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3d97 : jmp qword ptr [rax + 0x20fff910]
0x00000000004a3d8f : jmp qword ptr [rax + 0x20fff911]
0x00000000004a3d87 : jmp qword ptr [rax + 0x20fff912]
0x00000000004a3d7f : jmp qword ptr [rax + 0x20fff913]
0x00000000004a3b73 : jmp qword ptr [rax + 0x20fff915]
0x00000000004a3763 : jmp qword ptr [rax + 0x40fff8c3]
0x00000000004bdefb : jmp qword ptr [rax - 0x2f0002c3]
0x00000000004bdef7 : jmp qword ptr [rax - 0x5f0002a1]
0x000000000041ce89 : jmp qword ptr [rax]
0x00000000004836be : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004c209b : jmp qword ptr [rbx]
0x00000000004a369f : jmp qword ptr [rcx - 0x3d]
0x00000000004c01cb : jmp qword ptr [rcx]
0x00000000004201dd : jmp qword ptr [rdi]
0x00000000004a39ef : jmp qword ptr [rdx]
0x000000000047e429 : jmp qword ptr [rsi + 0xf]
0x0000000000458a6d : jmp qword ptr [rsi - 0x70]
0x00000000004a36d7 : jmp qword ptr [rsi]
0x00000000004216b9 : jmp r10
0x0000000000476c31 : jmp r11
0x000000000049a0f0 : jmp r8
0x000000000042fcb0 : jmp r9
0x00000000004a35ff : jmp rax
0x000000000040dd2d : jmp rbx
0x000000000042063e : jmp rcx
0x00000000004be423 : jmp rdi
0x00000000004216ba : jmp rdx
0x00000000004a3983 : jmp rsi
0x00000000004be06b : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x0000000000400a77 : jne 0x400a6b ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040dc64 : jne 0x40dc42 ; ret
0x000000000040dc95 : jne 0x40dccf ; mov eax, 0xba ; syscall
0x00000000004102db : jne 0x4102f1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041164c : jne 0x411653 ; pop rbx ; ret
0x0000000000413e15 : jne 0x413e22 ; ret
0x0000000000415591 : jne 0x415583 ; ret
0x00000000004162a1 : jne 0x4162b8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004165f2 : jne 0x4165dd ; pop rbx ; ret
0x000000000041662c : jne 0x416625 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000416ee6 : jne 0x416edb ; ret
0x0000000000421624 : jne 0x421636 ; lea rax, qword ptr [rip + 3] ; ret
0x0000000000426129 : jne 0x426185 ; xor rax, rax ; ret
0x00000000004260e9 : jne 0x4261a9 ; xor rax, rax ; ret
0x00000000004261ca : jne 0x4261dd ; lea rax, qword ptr [rip + 0x1d] ; ret
0x00000000004268aa : jne 0x426893 ; ret
0x0000000000426a13 : jne 0x4268ff ; mov rax, rdi ; ret
0x0000000000426969 : jne 0x426955 ; mov rax, rdi ; ret
0x0000000000426e90 : jne 0x426ea2 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000426ee3 : jne 0x426ef5 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000042c488 : jne 0x42c360 ; ret
0x000000000042c3c9 : jne 0x42c3b3 ; ret
0x000000000042e61c : jne 0x42e606 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042fc0d : jne 0x42fc37 ; xor eax, eax ; ret
0x000000000042f201 : jne 0x42fc3b ; xor eax, eax ; ret
0x000000000042f229 : jne 0x42fc47 ; xor eax, eax ; ret
0x000000000043be35 : jne 0x43bdc6 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043be07 : jne 0x43bdc6 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043be06 : jne 0x43bdc7 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043d594 : jne 0x43d7a8 ; xor eax, eax ; ret
0x000000000043d799 : jne 0x43d7b9 ; xor eax, eax ; ret
0x000000000043d641 : jne 0x43d7bd ; xor eax, eax ; ret
0x000000000043d7b1 : jne 0x43d7be ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043d8c1 : jne 0x43d8b2 ; ret
0x000000000043d971 : jne 0x43d962 ; ret
0x000000000043dae1 : jne 0x43dad6 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000043dc31 : jne 0x43dc26 ; sub rax, 1 ; ret
0x000000000043f517 : jne 0x43f534 ; mov eax, 2 ; syscall
0x000000000043f577 : jne 0x43f594 ; mov eax, 0 ; syscall
0x000000000043f5d7 : jne 0x43f5f4 ; mov eax, 1 ; syscall
0x000000000043f7c7 : jne 0x43f7e4 ; mov eax, 3 ; syscall
0x0000000000440a48 : jne 0x440a30 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000442207 : jne 0x4421cf ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000044284a : jne 0x442848 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004428ba : jne 0x4428b8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000442a02 : jne 0x4429f9 ; pop rdx ; pop r10 ; ret
0x00000000004429f2 : jne 0x442a04 ; nop ; mov eax, 0xca ; syscall
0x0000000000442c84 : jne 0x442c63 ; ret
0x0000000000442d73 : jne 0x442d6d ; xor eax, eax ; leave ; ret
0x000000000044602c : jne 0x446003 ; jmp 0x445ff5
0x00000000004524a1 : jne 0x45248d ; mov rax, rsi ; ret
0x0000000000452525 : jne 0x452505 ; mov rax, rsi ; ret
0x000000000045a958 : jne 0x45a96a ; jmp 0x45a984
0x0000000000463c11 : jne 0x463c03 ; ret
0x00000000004657e3 : jne 0x4657ee ; xor rax, rax ; ret
0x00000000004669b5 : jne 0x4669c2 ; mov dword ptr [r9 + 8], esi ; ret
0x000000000046705b : jne 0x467016 ; mov rax, rdx ; ret
0x000000000046709c : jne 0x467093 ; ret
0x000000000046af57 : jne 0x46af74 ; mov eax, 0x14 ; syscall
0x000000000046b2d3 : jne 0x46b285 ; xor eax, eax ; ret
0x000000000046b287 : jne 0x46b2db ; ret
0x000000000046b2cf : jne 0x46b2dd ; test ecx, ecx ; jne 0x46b289 ; xor eax, eax ; ret
0x000000000047400a : jne 0x473fb0 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000473ff8 : jne 0x473fd3 ; ret
0x0000000000474117 : jne 0x47412a ; mov rax, qword ptr [rip + 0x259730] ; ret
0x0000000000474160 : jne 0x474133 ; ret
0x0000000000476976 : jne 0x4769b3 ; ret
0x0000000000476975 : jne 0x4769b4 ; ret
0x00000000004787c3 : jne 0x4787d6 ; add rsp, 0x38 ; ret
0x0000000000478865 : jne 0x478878 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047893d : jne 0x478980 ; xor eax, eax ; add rsp, 0x68 ; ret
0x00000000004789f5 : jne 0x478a08 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047abc0 : jne 0x47abd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ca64 : jne 0x47ca58 ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047e378 : jne 0x47e335 ; nop word ptr [rax + rax] ; call rbx
0x0000000000489892 : jne 0x48985f ; jmp 0x489867
0x000000000048cac2 : jne 0x48ca8f ; jmp 0x48ca97
0x0000000000491ac0 : jne 0x491ad2 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000491b13 : jne 0x491b25 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000049c413 : jne 0x49c40c ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c477 : jne 0x49c46c ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049c71b : jne 0x49c714 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c847 : jne 0x49c840 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c9eb : jne 0x49c9e4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cd64 : jne 0x49cd5b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cdc4 : jne 0x49cdbb ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049e249 : jne 0x49e253 ; ret
0x000000000049e264 : jne 0x49e273 ; ret
0x000000000049e484 : jne 0x49e493 ; ret
0x000000000049e883 : jne 0x49e892 ; mov eax, 8 ; ret
0x000000000049ec75 : jne 0x49ec63 ; pop rbx ; ret
0x000000000049ecc0 : jne 0x49eca0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049ede5 : jne 0x49edcb ; pop rbx ; ret
0x000000000049eea1 : jne 0x49ee94 ; pop rbx ; ret
0x00000000004a0a53 : jne 0x4a0a65 ; jmp 0x4a0a7f
0x00000000004a3e8d : jne 0x4a3e8a ; call rax
0x00000000004a3e89 : jne 0x4a3e8a ; inc eax ; jne 0x4a3e8e ; call rax
0x00000000004a3e91 : jne 0x4a3e8e ; jmp rax
0x00000000004a3e99 : jne 0x4a3e9a ; inc dword ptr [rax] ; jbe 0x4a3e9e ; call qword ptr [rax]
0x00000000004b8ab7 : jne 0x4b8a81 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004baa4b : jne 0x4baa72 ; retf 0x32dd
0x00000000004bde61 : jne 0x4bde62 ; jmp rax
0x00000000004261eb : jno 0x42624f ; add dword ptr [rax], eax ; ret
0x000000000042f4be : jno 0x42f4cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004358a0 : jno 0x4358a9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435ada : jno 0x435ae3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000435c41 : jno 0x435c52 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435da6 : jno 0x435e2a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000445a53 : jno 0x4459dc ; sub byte ptr [rax], al ; ret
0x0000000000445a63 : jno 0x4459ec ; sub byte ptr [rax], al ; ret
0x00000000004669b3 : jno 0x4669c2 ; jne 0x4669c4 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000004669b9 : jno 0x4669c6 ; ret
0x0000000000478ff4 : jno 0x479046 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004bde59 : jno 0x4bde5a ; jmp qword ptr [rax]
0x00000000004bde58 : jno 0x4bde5b ; jmp qword ptr [rax]
0x00000000004c568d : jno 0x4c5695 ; add byte ptr [rax + 3], dh ; cli ; jmp rdx
0x0000000000412dab : jnp 0x412e1f ; syscall
0x0000000000474a61 : jnp 0x474abf ; and eax, 0x89485300 ; ret
0x00000000004a3714 : jnp 0x4a36dc ; clc ; dec dword ptr [rbx] ; ret 0xfff8
0x00000000004a3ef5 : jnp 0x4a3ef2 ; call qword ptr [rax]
0x00000000004a3ef9 : jnp 0x4a3ef6 ; jmp qword ptr [rax]
0x00000000004a3f19 : jnp 0x4a3f16 ; call rax
0x00000000004a3f21 : jnp 0x4a3f1e ; call qword ptr [rax]
0x00000000004a3f1d : jnp 0x4a3f1e ; push rax ; jnp 0x4a3f22 ; call qword ptr [rax]
0x00000000004b8ce2 : jnp 0x4b8d30 ; mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8d59 ; salc ; retf
0x00000000004b9465 : jnp 0x4b9422 ; ret
0x00000000004ba462 : jnp 0x4ba4c0 ; retf
0x00000000004ba869 : jnp 0x4ba8b6 ; retf -0x6620
0x00000000004bb4c9 : jnp 0x4bb50a ; retf
0x00000000004bdfc8 : jnp 0x4bdf9e ; std ; lcall ptr [rax - 0x15000236] ; retf
0x00000000004c64e9 : jnp 0x4c64e7 ; call rax
0x00000000004007b7 : jns 0x4006ab ; jmp 0x400788
0x000000000042af27 : jns 0x42af02 ; retf -0x152d
0x000000000042b077 : jns 0x42b052 ; retf -0x152d
0x000000000042b1c7 : jns 0x42b1a2 ; retf -0x152d
0x000000000042b317 : jns 0x42b2f2 ; retf -0x152d
0x000000000042b467 : jns 0x42b442 ; retf -0x152d
0x000000000042b5b7 : jns 0x42b592 ; retf -0x152d
0x000000000042b707 : jns 0x42b6e2 ; retf -0x152d
0x000000000042b857 : jns 0x42b832 ; retf -0x152d
0x000000000042b9a7 : jns 0x42b982 ; retf -0x152d
0x000000000042baf7 : jns 0x42bad2 ; retf -0x152d
0x000000000042bc47 : jns 0x42bc22 ; retf -0x152d
0x000000000042bd97 : jns 0x42bd72 ; retf -0x152d
0x000000000042bee7 : jns 0x42bec2 ; retf -0x152d
0x000000000042c037 : jns 0x42c012 ; retf -0x152d
0x000000000042c187 : jns 0x42c162 ; retf -0x152d
0x00000000004358a7 : jns 0x4358aa ; ret
0x0000000000435ae1 : jns 0x435ae4 ; ret
0x0000000000435c48 : jns 0x435c53 ; ret
0x000000000046a23c : jns 0x46a24b ; add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x000000000046f56c : jns 0x46f57a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x00000000004963e7 : jns 0x4963c2 ; retf -0x152d
0x0000000000496567 : jns 0x496542 ; retf -0x152d
0x00000000004966e7 : jns 0x4966c2 ; retf -0x152d
0x0000000000496867 : jns 0x496842 ; retf -0x152d
0x00000000004969e7 : jns 0x4969c2 ; retf -0x152d
0x0000000000496b67 : jns 0x496b42 ; retf -0x152d
0x0000000000496ce7 : jns 0x496cc2 ; retf -0x152d
0x0000000000496e67 : jns 0x496e42 ; retf -0x152d
0x0000000000496fe7 : jns 0x496fc2 ; retf -0x152d
0x0000000000497167 : jns 0x497142 ; retf -0x152d
0x00000000004972e7 : jns 0x4972c2 ; retf -0x152d
0x0000000000497467 : jns 0x497442 ; retf -0x152d
0x00000000004975e7 : jns 0x4975c2 ; retf -0x152d
0x0000000000497767 : jns 0x497742 ; retf -0x152d
0x00000000004978e7 : jns 0x4978c2 ; retf -0x152d
0x000000000049c304 : jns 0x49c347 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004b856e : jns 0x4b8504 ; ret 0xf869
0x00000000004b856d : jns 0x4b8505 ; ret 0xf869
0x00000000004ba97e : jns 0x4ba9d5 ; jmp 0x4ba916
0x000000000043e3ab : jns 0xffffffffe9336d95 ; retf
0x000000000040161c : jo 0x4015ae ; sub al, 0 ; xor eax, eax ; ret
0x00000000004125c3 : jo 0x412583 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000413c94 : jo 0x413ce5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463c8a : jo 0x463ca2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004671ac : jo 0x4671c0 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047674b : jo 0x47677b ; add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x000000000047a89a : jo 0x47a827 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047a899 : jo 0x47a828 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000049adca : jo 0x49add2 ; add byte ptr [rax], al ; jmp 0x49ada0
0x00000000004a351c : jo 0x4a34ad ; clc ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004a34cc : jo 0x4a353b ; clc ; call qword ptr [rax]
0x00000000004a37b0 : jo 0x4a3798 ; clc ; push qword ptr [rax] ; loope 0x4a37b6 ; call qword ptr [rax]
0x00000000004a3850 : jo 0x4a3837 ; clc ; push qword ptr [rax] ; loopne 0x4a3856 ; call qword ptr [rax]
0x00000000004a38e0 : jo 0x4a38c0 ; clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a38f4 : jo 0x4a38c4 ; clc ; inc eax ; retf -8
0x00000000004a38f4 : jo 0x4a38c6 ; clc ; inc eax ; retf -8
0x00000000004b8ce8 : jo 0x4b8d53 ; salc ; retf
0x00000000004b95e4 : jo 0x4b965e ; mov ebp, 0xfb67d10d ; ret
0x00000000004bdedc : jo 0x4bdf34 ; std ; inc eax ; push rcx ; std ; call qword ptr [rax]
0x00000000004bdfb4 : jo 0x4bdf81 ; std ; jmp rax
0x00000000004c1641 : jo 0x4c1647 ; retf 0xe0a
0x00000000004c5690 : jo 0x4c5698 ; cli ; jmp rdx
0x00000000004c6fa0 : jo 0x4c6f91 ; cli ; jmp qword ptr [rdx]
0x00000000004c73d0 : jo 0x4c736c ; std ; call rcx
0x00000000004268f5 : jp 0x4268ef ; ret 0x7401
0x00000000004328c6 : jp 0x4328ba ; ret
0x0000000000432929 : jp 0x43291d ; ret
0x00000000004328bf : jp 0x432949 ; jb 0x4328ac ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004328c4 : jp 0x432949 ; jp 0x4328bc ; ret
0x0000000000464ff9 : jp 0x46503e ; jmp 0x464fc3
0x000000000046a09a : jp 0x46a0d5 ; add byte ptr es:[rax + 0x39], cl ; retf
0x000000000047b71e : jp 0x47b733 ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000488795 : jp 0x48879e ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004a3ef1 : jp 0x4a3ef2 ; inc dword ptr [rax] ; jnp 0x4a3ef6 ; call qword ptr [rax]
0x00000000004b9773 : jp 0x4b972d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x00000000004055f9 : jrcxz 0x405601 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040fce0 : jrcxz 0x40fceb ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000041e7e2 : jrcxz 0x41e7e8 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000434ada : jrcxz 0x434ad5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ad9 : jrcxz 0x434ad6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000442a53 : jrcxz 0x442a18 ; cmp r11d, 0xa ; je 0x442a64 ; ret
0x000000000044814c : jrcxz 0x448139 ; retf
0x000000000045b696 : jrcxz 0x45b70f ; ret
0x000000000045d6a8 : jrcxz 0x45d6a2 ; ret 0xf40
0x00000000004a3779 : jrcxz 0x4a3775 ; jmp qword ptr [rax]
0x00000000004a3778 : jrcxz 0x4a3776 ; jmp qword ptr [rax]
0x00000000004a3799 : jrcxz 0x4a3795 ; call qword ptr [rax]
0x00000000004a37b9 : jrcxz 0x4a37b9 ; push rax ; in al, -8 ; call rax
0x00000000004a385d : jrcxz 0x4a3859 ; call rax
0x00000000004a389d : jrcxz 0x4a389d ; inc dword ptr [rax - 0x1b] ; clc ; call qword ptr [rax]
0x00000000004b83c5 : jrcxz 0x4b841f ; ret
0x00000000004ba58d : jrcxz 0x4ba550 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004bb0e9 : jrcxz 0x4bb0cd ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004c4d31 : jrcxz 0x4c4d2e ; jmp rax
0x00000000004092ac : js 0x4092cf ; mov qword ptr [rsp + 8], rax ; call 0x405d19
0x00000000004092bf : js 0x4092da ; mov qword ptr [rsp + 8], rax ; call 0x405d19
0x00000000004092d2 : js 0x4092e5 ; mov qword ptr [rsp + 8], rax ; call 0x405d19
0x00000000004092ea : js 0x40930d ; mov qword ptr [rsp + 8], rax ; call 0x405d19
0x00000000004092fd : js 0x409318 ; mov qword ptr [rsp + 8], rax ; call 0x405d19
0x0000000000409a16 : js 0x409a30 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409a27 : js 0x409a39 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409a3d : js 0x409a5f ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409a4e : js 0x409a68 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409a5f : js 0x409a71 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409a75 : js 0x409a97 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409a86 : js 0x409aa0 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409a97 : js 0x409aa9 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409aad : js 0x409acf ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409abe : js 0x409ad8 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409acf : js 0x409ae1 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409ae5 : js 0x409b07 ; mov qword ptr [rsp], rax ; call 0x405d18
0x0000000000409af6 : js 0x409b10 ; mov qword ptr [rsp], rax ; call 0x405d18
0x000000000040f51d : js 0x40f526 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411612 : js 0x41165d ; test rdi, rdi ; je 0x41162d ; call 0x41e089
0x000000000041b04d : js 0x41b07e ; add al, bpl ; cli ; retf
0x000000000044284f : js 0x4428af ; pop rbp ; ret
0x00000000004428bf : js 0x44291f ; pop rbp ; ret
0x000000000044888e : js 0x4488df ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044b478 : js 0x44b4c9 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044c2d8 : js 0x44c329 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044f0d1 : js 0x44f13c ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000045a733 : js 0x45a751 ; call 0x466954
0x000000000045a733 : js 0x45a755 ; call 0x466958
0x0000000000471452 : js 0x47145b ; pop rbx ; ret
0x000000000047a89d : js 0x47a8ab ; ret
0x000000000047b9df : js 0x47ba24 ; call rsp
0x000000000047bcf4 : js 0x47bd39 ; call rsp
0x000000000047be73 : js 0x47beb8 ; call rsp
0x000000000047beb3 : js 0x47bef8 ; call rsp
0x000000000047beae : js 0x47beff ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047c076 : js 0x47c0bb ; call rsp
0x000000000047c0bb : js 0x47c100 ; call rsp
0x0000000000483d85 : js 0x483d5a ; add r8b, bpl ; ret 0xf7da
0x000000000049c645 : js 0x49c652 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c652 : js 0x49c65e ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004ba461 : js 0x4ba4e1 ; pop rdx ; retf
0x00000000004bef78 : js 0x4bef78 ; hlt ; call qword ptr [rbx]
0x00000000004c09b8 : js 0x4c0a2b ; cmc ; call qword ptr [rsi]
0x00000000004c8db8 : js 0x4c8df0 ; std ; call rsp
0x000000000041fe9d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004a35fd : lahf ; clc ; jmp rax
0x00000000004437a2 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x00000000004436e8 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000443715 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004baaa3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047400b : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042ba2d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ba392 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bab94 : lahf ; push -0x57d3205 ; call 0xffffffffab597696
0x00000000004b8ba0 : lahf ; push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004407a8 : lahf ; ret
0x0000000000485ffc : lahf ; ret 0x2941
0x00000000004106ee : lahf ; ret 0x3841
0x00000000004407ae : lahf ; ret 0x3845
0x00000000004b82fd : lahf ; ret 0x871e
0x00000000004841d1 : lahf ; ret 0xb60f
0x0000000000486c68 : lahf ; ret 0xd129
0x0000000000486cdf : lahf ; ret 0xd629
0x0000000000486bf1 : lahf ; ret 0xd729
0x000000000043e489 : lahf ; ret 0xea81
0x000000000049b9a6 : lahf ; ret 0xf45
0x00000000004114dd : lahf ; retf
0x000000000042c0bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bdfcb : lcall ptr [rax - 0x15000236] ; retf
0x0000000000411af3 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000004a371b : lcall ptr [rbx + 0x2bfff8c2] ; ret
0x000000000048845a : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044cf33 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000451d52 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041193d : lcall ptr [rbx + 0x5d] ; ret
0x0000000000474a96 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000420113 : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004bdfc3 : lcall ptr [rdi] ; retf -3
0x00000000004be40b : lcall ptr [rsi] ; salc ; std ; call qword ptr [rbx]
0x0000000000435166 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000414024 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000041663b : lea eax, dword ptr [r8 - 1] ; ret
0x000000000046b2fb : lea eax, dword ptr [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x0000000000426154 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000426164 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000426134 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x000000000041663c : lea eax, dword ptr [rax - 1] ; ret
0x0000000000465bed : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000043dae4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000043bb5c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000043bb71 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000043bb8f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000043bbaf : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000043bbd2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043bbf1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000043bc11 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000043bc31 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000043bc54 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000043bc79 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000043bc97 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000043bcb7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000043bcd3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000043bcf3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000043bd13 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000043bd33 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000043baad : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000043bacd : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000043baef : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000043bb0f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000043bb2f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000043bb49 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000043b9f7 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000043ba0a : lea eax, dword ptr [rdi + 2] ; ret
0x000000000043ba15 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000043ba28 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000043ba3d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000043ba5b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000043ba67 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000043ba7a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000043ba8f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000426189 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000426199 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000426083 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000042cf57 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000465ae9 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000478308 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x478321 ; ret
0x000000000043b9e3 : lea eax, dword ptr [rdi] ; ret
0x000000000043afcd : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000043afed : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000043b00f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043b02f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043b04f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000043aedf : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000043af07 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043af1d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000043af35 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043af4b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043af5d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043af7b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000043ae87 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043af8d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043afad : lea eax, dword ptr [rdx + 9] ; ret
0x000000000041662e : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043e55c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000043aef5 : lea eax, dword ptr [rdx] ; ret
0x0000000000426d77 : lea eax, dword ptr [rip + 0x12ad3] ; ret
0x0000000000423847 : lea eax, dword ptr [rip + 0x14853] ; ret
0x00000000004261e9 : lea eax, dword ptr [rip + 0x15e71] ; ret
0x00000000004267c3 : lea eax, dword ptr [rip + 0x17647] ; ret
0x00000000004213d4 : lea eax, dword ptr [rip + 0x1a966] ; ret
0x00000000004261cd : lea eax, dword ptr [rip + 0x1d] ; ret
0x0000000000426e93 : lea eax, dword ptr [rip + 0x67] ; ret
0x00000000004261e1 : lea eax, dword ptr [rip + 0x8449] ; ret
0x0000000000421627 : lea eax, dword ptr [rip + 3] ; ret
0x0000000000426ee6 : lea eax, dword ptr [rip + 4] ; ret
0x00000000004c5755 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044cb70 : lea eax, dword ptr [rsp + 0x88] ; call r15
0x000000000047c06f : lea ebx, dword ptr [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8bb1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049cb75 : lea ebx, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000466af0 : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000469b52 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0x469b63
0x000000000042fd07 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043b27e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000452d2f : lea ecx, dword ptr [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000464171 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a590 : lea ecx, dword ptr [rdx] ; jmp 0x47a5e6
0x00000000004800a0 : lea ecx, dword ptr [rdx] ; jmp 0x4800f6
0x000000000046b077 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004650a7 : lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x0000000000465180 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000466c05 : lea ecx, dword ptr [rsp + 0x20] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000466f20 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466e1e : lea ecx, dword ptr [rsp + 0x60] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000045a732 : lea edi, dword ptr [rax + 0x18] ; call 0x466955
0x000000000045a732 : lea edi, dword ptr [rax + 0x18] ; call 0x466959
0x000000000046fad6 : lea edi, dword ptr [rax + 0x6cb1e0] ; call rdx
0x000000000040227c : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000040e15c : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000426966 : lea edi, dword ptr [rdi + 0x10] ; jne 0x426958 ; mov rax, rdi ; ret
0x000000000042c3c6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x42c3b6 ; ret
0x0000000000403cf8 : lea edi, dword ptr [rsi + 0x80] ; call 8
0x000000000047b9dc : lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047bd82 : lea edi, dword ptr [rsp + 0x80] ; call r12
0x000000000047bb8f : lea edi, dword ptr [rsp + 0x88] ; call r14
0x0000000000416eeb : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000465350 : lea edx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042fdd4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000464efd : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004216b6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000004301c8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000004640b1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004650a2 : lea edx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000466cad : lea edx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000467310 : lea edx, dword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044ca96 : lea edx, dword ptr [rsp + 0x80] ; call r12
0x00000000004860bc : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048cef5 : lea esi, dword ptr [rax*8 + 0x4b8048] ; call 0x4791c9
0x0000000000466e23 : lea esi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000466aeb : lea esi, dword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000466c0a : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000046b41d : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040fb91 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004216b5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000040e15b : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000044cb6f : lea r8, qword ptr [rsp + 0x88] ; call r15
0x000000000042fd06 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000047a58f : lea r9, qword ptr [rdx] ; jmp 0x47a5e7
0x000000000048009f : lea r9, qword ptr [rdx] ; jmp 0x4800f7
0x00000000004650a6 : lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000046517f : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000426153 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000426163 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000426133 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000465bec : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000043dae3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000043bb5b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043bb70 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043bb8e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043bbae : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bbd1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043bbf0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043bc10 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043bc30 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043bc53 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043bc78 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043bc96 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043bcb6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043bcd2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043bcf2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043bd12 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043bd32 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043baac : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043bacc : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043baee : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043bb0e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bb2e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043bb48 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b9f6 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000043ba09 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000043ba14 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000043ba27 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000043ba3c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000043ba5a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000043ba66 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000043ba79 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000043ba8e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000426188 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426198 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000426082 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042cf56 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000465ae8 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000043b9e2 : lea rax, qword ptr [rdi] ; ret
0x000000000043afcc : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043afec : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043b00e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043b02e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043b04e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043aede : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043af06 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043af1c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000043af34 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043af4a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043af5c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043af7a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000043ae86 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043af8c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043afac : lea rax, qword ptr [rdx + 9] ; ret
0x000000000043aef4 : lea rax, qword ptr [rdx] ; ret
0x0000000000426d76 : lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000423846 : lea rax, qword ptr [rip + 0x14853] ; ret
0x00000000004261e8 : lea rax, qword ptr [rip + 0x15e71] ; ret
0x00000000004267c2 : lea rax, qword ptr [rip + 0x17647] ; ret
0x00000000004213d3 : lea rax, qword ptr [rip + 0x1a966] ; ret
0x00000000004261cc : lea rax, qword ptr [rip + 0x1d] ; ret
0x0000000000426e92 : lea rax, qword ptr [rip + 0x67] ; ret
0x00000000004261e0 : lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000421626 : lea rax, qword ptr [rip + 3] ; ret
0x0000000000426ee5 : lea rax, qword ptr [rip + 4] ; ret
0x000000000049cb74 : lea rbx, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043b27d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000466aef : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000469b51 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0x469b64
0x000000000046b076 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000403cf7 : lea rdi, qword ptr [r14 + 0x80] ; call 9
0x000000000045a731 : lea rdi, qword ptr [rax + 0x18] ; call 0x466956
0x000000000046fad5 : lea rdi, qword ptr [rax + 0x6cb1e0] ; call rdx
0x000000000040227b : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000426965 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x426959 ; mov rax, rdi ; ret
0x000000000042c3c5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c3b7 ; ret
0x000000000047b9db : lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000047bd81 : lea rdi, qword ptr [rsp + 0x80] ; call r12
0x000000000047bb8e : lea rdi, qword ptr [rsp + 0x88] ; call r14
0x000000000042fdd3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004301c7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000046730f : lea rdx, qword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044ca95 : lea rdx, qword ptr [rsp + 0x80] ; call r12
0x0000000000466e22 : lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466aea : lea rsi, qword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000466c09 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000046b41c : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a38f5 : leave ; clc ; inc eax ; retf -8
0x00000000004882e6 : leave ; cmove rax, rdx ; ret
0x000000000043d8c0 : leave ; jne 0x43d8b3 ; ret
0x000000000043d970 : leave ; jne 0x43d963 ; ret
0x000000000043dc30 : leave ; jne 0x43dc27 ; sub rax, 1 ; ret
0x000000000046705a : leave ; jne 0x467017 ; mov rax, rdx ; ret
0x000000000046b2d2 : leave ; jne 0x46b286 ; xor eax, eax ; ret
0x000000000049a0e8 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x0000000000444da0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000400a7c : leave ; ret
0x00000000004ba594 : leave ; retf
0x00000000004b7e89 : leave ; retf -0x3335
0x00000000004b8d61 : leave ; retf 0x6ee8
0x00000000004bdfc1 : leave ; std ; lcall ptr [rdi] ; retf -3
0x0000000000414a01 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00000000004bdf5f : ljmp ptr [rax + 0x50fffdc2] ; ret 0xfffd
0x00000000004bdf87 : ljmp ptr [rax - 0x3b] ; std ; jmp rax
0x00000000004bdf53 : ljmp ptr [rax - 0x5700023e] ; ret 0xfffd
0x00000000004a371f : ljmp ptr [rbx] ; ret
0x00000000004be3ff : ljmp ptr [rcx] ; salc ; std ; jmp rax
0x00000000004101a0 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047a885 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042ea0e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043f80c : lock add byte ptr [rax], r8b ; ret
0x00000000004b3eb0 : lock add byte ptr ds:[rax], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x45
0x000000000047ff1f : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041af37 : lock sub dword ptr [rdx], ecx ; mov eax, 2 ; syscall
0x0000000000423510 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047ac6f : lodsb al, byte ptr [rsi] ; add byte ptr [r15 + 0x6cd4a0], r15b ; call rax
0x000000000043d240 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048b7fe : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ba486 : lodsb al, byte ptr [rsi] ; loop 0x4ba453 ; retf
0x00000000004784df : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4784f9 ; ret
0x00000000004bb23d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004114d0 : lodsb al, byte ptr [rsi] ; retf
0x00000000004bdf19 : lodsb al, byte ptr [rsi] ; std ; call qword ptr [rax - 0x2f000252]
0x00000000004c7714 : lodsb al, byte ptr [rsi] ; xchg eax, ecx ; add byte ptr [rax], al ; cmp byte ptr [rax], ch ; sti ; call rsp
0x00000000004b8ce6 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8d55 ; salc ; retf
0x00000000004b8abb : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046b2d4 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x000000000040741d : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x00000000004ba865 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x0000000000495460 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a76b : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000479162 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000405689 : loop 0x405691 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004056f1 : loop 0x4056f9 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000042e61d : loop 0x42e655 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434a4a : loop 0x434a45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a49 : loop 0x434a46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004589d5 : loop 0x4589c6 ; adc eax, 0xe90000af ; ret
0x000000000045cc1b : loop 0x45cba8 ; ret
0x0000000000476462 : loop 0x47646d ; add rdx, rax ; jmp 0x47647d
0x00000000004a37d9 : loop 0x4a37d5 ; call rax
0x00000000004a3839 : loop 0x4a3839 ; push qword ptr [rax] ; in al, -8 ; call qword ptr [rax]
0x00000000004a3859 : loop 0x4a3859 ; push rax ; jrcxz 0x4a385d ; call rax
0x00000000004ba487 : loop 0x4ba452 ; retf
0x00000000004bb5da : loop 0x4bb62f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042c962 : loope 0x42c9b9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004349ba : loope 0x4349b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349b9 : loope 0x4349b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043bf6b : loope 0x43bf75 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043e65e : loope 0x43e655 ; ret
0x00000000004445ef : loope 0x4445fa ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000046686e : loope 0x466883 ; je 0x466894 ; ret
0x000000000046ac9c : loope 0x46ac29 ; ret 0xf631
0x0000000000478ff7 : loope 0x479049 ; mov dword ptr [rdi], ecx ; ret
0x0000000000479028 : loope 0x47907b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000047909d : loope 0x4790f0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049ede6 : loope 0x49ee45 ; ret
0x00000000004a3775 : loope 0x4a3775 ; inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a3795 : loope 0x4a3795 ; push qword ptr [rax] ; jrcxz 0x4a3799 ; call qword ptr [rax]
0x00000000004a37b5 : loope 0x4a37b1 ; call qword ptr [rax]
0x00000000004a37d5 : loope 0x4a37d5 ; push rax ; loop 0x4a37d9 ; call rax
0x00000000004ba591 : loope 0x4ba613 ; pop rdx ; leave ; retf
0x00000000004c6ef9 : loope 0x4c6ef7 ; jmp qword ptr [rdx]
0x0000000000400de0 : loopne 0x400df7 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000410216 : loopne 0x41023f ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004102f6 : loopne 0x41031f ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000413419 : loopne 0x413480 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004134c7 : loopne 0x41352e ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415016 : loopne 0x41507a ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004176e5 : loopne 0x417749 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a4b : loopne 0x420aad ; pop rbp ; pop r12 ; ret
0x000000000042669d : loopne 0x426701 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000426732 : loopne 0x426796 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042cc1d : loopne 0x42cc75 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430221 : loopne 0x430238 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430220 : loopne 0x430239 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430371 : loopne 0x430388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430370 : loopne 0x430389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304c1 : loopne 0x4304d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304c0 : loopne 0x4304d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430611 : loopne 0x430628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430610 : loopne 0x430629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430761 : loopne 0x430778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430760 : loopne 0x430779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308b1 : loopne 0x4308c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308b0 : loopne 0x4308c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a01 : loopne 0x430a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a00 : loopne 0x430a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b4f : loopne 0x430b66 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b4e : loopne 0x430b67 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ca1 : loopne 0x430cb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ca0 : loopne 0x430cb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430df1 : loopne 0x430e08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430df0 : loopne 0x430e09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f41 : loopne 0x430f58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f40 : loopne 0x430f59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431091 : loopne 0x4310a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431090 : loopne 0x4310a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311e1 : loopne 0x4311f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311e0 : loopne 0x4311f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431331 : loopne 0x431348 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431330 : loopne 0x431349 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431481 : loopne 0x431498 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431480 : loopne 0x431499 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004328c2 : loopne 0x43288f ; jp 0x43294b ; jp 0x4328be ; ret
0x000000000043dde5 : loopne 0x43de36 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dde4 : loopne 0x43de37 ; sub eax, edx ; vzeroupper ; ret
0x000000000043f61c : loopne 0x43f672 ; add byte ptr [rax], al ; ret
0x00000000004427da : loopne 0x44282d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000442ab8 : loopne 0x442acd ; cmp eax, 4 ; je 0x442ac7 ; ret
0x0000000000442c09 : loopne 0x442c1c ; pop rbp ; pop r12 ; ret
0x00000000004445f2 : loopne 0x444652 ; pop rbp ; ret
0x0000000000445aed : loopne 0x445b5f ; add byte ptr [rdi + 0x6cd1b0], r15b ; call rax
0x0000000000445bec : loopne 0x445c5e ; add byte ptr [rdi + 0x6cd1b0], r15b ; call rax
0x0000000000452150 : loopne 0x4521cf ; mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf -0x76b4
0x000000000045ab8d : loopne 0x45ab1a ; ret 0xe680
0x000000000046215b : loopne 0x4621bf ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462513 : loopne 0x462575 ; pop rbp ; pop r12 ; ret
0x000000000046253d : loopne 0x46259f ; pop rbp ; pop r12 ; ret
0x0000000000462bfb : loopne 0x462c5d ; pop rbp ; pop r12 ; ret
0x0000000000462c6d : loopne 0x462ccf ; pop rbp ; pop r12 ; ret
0x000000000046407e : loopne 0x464017 ; mov eax, 0xffffffff ; ret
0x0000000000478b3d : loopne 0x478b46 ; sub eax, 1 ; ret
0x000000000047ed7c : loopne 0x47ed4e ; add r8b, bpl ; retf
0x00000000004a3620 : loopne 0x4a35d2 ; clc ; inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x00000000004a3738 : loopne 0x4a36f9 ; clc ; jmp rax
0x00000000004a3738 : loopne 0x4a36fd ; clc ; jmp rax
0x00000000004a373c : loopne 0x4a36fe ; clc ; jmp rax
0x00000000004a37a4 : loopne 0x4a3791 ; clc ; jmp rax
0x00000000004a37a4 : loopne 0x4a3795 ; clc ; jmp rax
0x00000000004a37a8 : loopne 0x4a3797 ; clc ; jmp rax
0x00000000004a3844 : loopne 0x4a3830 ; clc ; jmp rax
0x00000000004a3844 : loopne 0x4a3834 ; clc ; jmp rax
0x00000000004a3848 : loopne 0x4a3836 ; clc ; jmp rax
0x00000000004a3855 : loopne 0x4a3851 ; call qword ptr [rax]
0x00000000004a3b70 : loopne 0x4a3b86 ; stc ; jmp qword ptr [rax + 0x20fff915]
0x00000000004a3ec8 : loopne 0x4a3f47 ; stc ; inc dword ptr [rax] ; ja 0x4a3ecf ; jmp qword ptr [rax]
0x00000000004b8bb4 : loopne 0x4b8b94 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bdf8c : loopne 0x4bdf56 ; std ; jmp qword ptr [rdx]
0x00000000004be404 : loopne 0x4be3d8 ; std ; jmp rax
0x00000000004be408 : loopne 0x4be3e0 ; std ; lcall ptr [rsi] ; salc ; std ; call qword ptr [rbx]
0x00000000004be428 : loopne 0x4be3fc ; std ; call rsp
0x00000000004c74c0 : loopne 0x4c74da ; sti ; call qword ptr [rax]
0x00000000004b85ca : mov ah, 0x13 ; ret
0x00000000004a3ac4 : mov ah, 0x1c ; stc ; inc dword ptr [rsp + rbx - 7] ; call rsp
0x00000000004c231c : mov ah, 0x3d ; add byte ptr [rax], al ; push rax ; ret
0x00000000004c8a1c : mov ah, 0xa4 ; add byte ptr [rax], al ; push rax ; mov bh, 0xfc ; call qword ptr [rax]
0x00000000004b8a70 : mov ah, 0xa5 ; ret
0x000000000046c048 : mov ah, 0xe8 ; ret 0xfd34
0x00000000004b83c4 : mov ah, bl ; push rsi ; ret
0x000000000049a23a : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c533 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004c2cd0 : mov al, 0 ; clc ; call rsp
0x00000000004a3d78 : mov al, 0x14 ; stc ; jmp qword ptr [rax]
0x00000000004a3b68 : mov al, 0x18 ; stc ; inc dword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004a3950 : mov al, 0x1b ; stc ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x0000000000442bbf : mov al, 0x28 ; add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000442c7e : mov al, 0x28 ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000004a3544 : mov al, 0x46 ; clc ; inc eax ; clc ; call rax
0x000000000049c351 : mov al, 0x48 ; add esp, 0x18 ; ret
0x00000000004a3e88 : mov al, 0x75 ; stc ; inc eax ; jne 0x4a3e8f ; call rax
0x00000000004a3f18 : mov al, 0x7b ; stc ; call rax
0x00000000004a3f3c : mov al, 0x7c ; stc ; call rax
0x00000000004a3f5c : mov al, 0x7d ; stc ; call rax
0x00000000004a35b0 : mov al, 0xca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 0x42
0x00000000004ba876 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000447695 : mov al, 0xf ; retf -0x2d7b
0x00000000004a3d60 : mov al, 0xf ; stc ; jmp qword ptr [rax]
0x00000000004bdf21 : mov al, 0xfd ; call qword ptr [rax]
0x00000000004bfd5d : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c5edd : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x000000000043fada : mov al, 2 ; add bl, ch ; retf 0x4890
0x00000000004a351d : mov al, bh ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004c6f9d : mov al, byte ptr [rax] ; add byte ptr [rax - 0x14], dh ; cli ; jmp qword ptr [rdx]
0x00000000004437a0 : mov al, byte ptr [rax] ; lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000439766 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439784 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043aef0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000439740 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000041019f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439750 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435781 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004ba900 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000044d33b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044cebe : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043be08 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000046aa86 : mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf -0x7cb8
0x00000000004babd8 : mov bh, 0x4e ; retf -0x6283
0x00000000004b98a4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004b7e86 : mov bh, 0xc8 ; leave ; retf -0x3335
0x00000000004c41e1 : mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c41c9 : mov bh, 0xf8 ; call qword ptr [rdi]
0x00000000004c4271 : mov bh, 0xf8 ; jmp qword ptr [rsi]
0x00000000004c8a21 : mov bh, 0xfc ; call qword ptr [rax]
0x00000000004bdf2d : mov bh, 0xfd ; call rax
0x000000000042132c : mov bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00000000004c2dc0 : mov bh, 1 ; ret
0x00000000004687fb : mov bh, 5 ; mov edi, 0x8900264b ; ret 0xe883
0x00000000004bafb3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043d6fe : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fcdf : mov bl, 0x29 ; add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x00000000004bac3b : mov bl, 0x29 ; retf -0x40b5
0x000000000046705c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047e379 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004ba983 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004bac20 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004404f2 : mov bl, bl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004b85a1 : mov bx, 0xf32d ; retf
0x000000000049adc7 : mov byte ptr [r14 + 0x170], dl ; jmp 0x49ada3
0x000000000041cad0 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000041231c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004b1e2c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000041cad1 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x000000000041de58 : mov byte ptr [rax + rbx], cl ; pop rbx ; ret
0x000000000041de57 : mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x0000000000447588 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000041231d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047bb92 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044cb73 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x0000000000452152 : mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf -0x76b4
0x00000000004c1d28 : mov byte ptr [rcx], al ; ret
0x000000000043bb58 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b4c8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043bbce : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b51e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bc50 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043b5a0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043ba06 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b3e6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043ba22 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b402 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b443 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004bac35 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf -0x40b5
0x000000000043184b : mov byte ptr [rdi - 1], dl ; ret
0x00000000004329cc : mov byte ptr [rdi], cl ; ret
0x000000000043b9e0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b3c0 : mov byte ptr [rdi], dh ; ret
0x00000000004357f3 : mov byte ptr [rdi], dl ; ret
0x000000000043af19 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000439769 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043af47 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000439787 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000484457 : mov byte ptr [rdx], 0x30 ; jmp 0x480ef2
0x000000000043aef2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000439742 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000440f04 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049abf0 : mov byte ptr [rip + 0x232a49], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000454e08 : mov byte ptr [rip + 0x3fe8004b], ch ; retf -6
0x000000000049adc8 : mov byte ptr [rsi + 0x170], dl ; jmp 0x49ada2
0x0000000000452523 : mov byte ptr [rsi], al ; jne 0x452507 ; mov rax, rsi ; ret
0x000000000045249f : mov byte ptr [rsi], dl ; jne 0x45248f ; mov rax, rsi ; ret
0x000000000047aa87 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b83c2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b9703 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ba396 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004baa9f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bb44a : mov ch, 0xab ; ret
0x00000000004bdf29 : mov ch, 0xfd ; call qword ptr [rax - 0x2f000249]
0x000000000042f586 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000040161d : mov ch, byte ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004c3358 : mov ch, cl ; std ; jmp qword ptr [rdx]
0x00000000004260eb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400967 : mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000442bbc : mov cl, 0x35 ; fidiv word ptr [rax + 0x39480028] ; ret 0xd975
0x000000000040dd2b : mov cl, 0x35 ; jmp rbx
0x0000000000468c10 : mov cl, 0x35 ; retf 0x2647
0x00000000004baea1 : mov cl, 0x3f ; retf
0x0000000000470ef4 : mov cl, 0x6c ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004a3694 : mov cl, 0xc1 ; clc ; inc dword ptr [rcx - 0x3e] ; clc ; call rcx
0x00000000004183cf : mov cl, 1 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x4183f6
0x000000000044f7bb : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000413d69 : mov cl, byte ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x0000000000429105 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004216b4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ba872 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004329ca : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046686b : mov cl, dl ; and cl, 0xf ; je 0x466897 ; ret
0x00000000004bab2c : mov cs, edi ; ret 0x8b36
0x000000000042b53e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043b3e0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004127fe : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415b00 : mov dh, 0 ; pop rbx ; ret
0x0000000000413a7b : mov dh, 0 ; ret
0x00000000004357f1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004262c4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dc60 : mov dh, 0x17 ; test dl, dl ; jne 0x40dc46 ; ret
0x00000000004a3998 : mov dh, 0x1a ; stc ; inc dword ptr [rsi + 0x1a] ; stc ; call rsi
0x00000000004622ae : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040db95 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004628e3 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043d2d1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d2c1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d291 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043d2b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d2a1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000448f10 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004443d7 : mov dh, 0x4b ; add al, 0x89 ; retf -0x1540
0x000000000049a314 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b9862 : mov dh, 0x4e ; ret 0x474c
0x000000000046da85 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462e89 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043d2d5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043d2c5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043d295 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043d2a5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d6e7 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d66a : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000044837c : mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf -0x7bc0
0x000000000046e5a7 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044f0cf : mov dh, 0xb2 ; js 0x44f13e ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000044fa5d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b15d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047af07 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f718 : mov dh, 0xc0 ; ret
0x000000000043e4d8 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000004a36dc : mov dh, 0xc2 ; clc ; inc dword ptr [rsi - 0x3d] ; clc ; call rsi
0x000000000043e500 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000041493e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004baaa4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004262ea : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049b60f : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000422a61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e664 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000466a42 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049d09a : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041579e : mov dh, 2 ; pop rbx ; ret
0x0000000000412811 : mov dh, 2 ; ret
0x000000000042e661 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262c1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422a64 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000410164 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043e65c : mov dh, byte ptr [rcx - 0xd] ; ret
0x000000000049e1a2 : mov dh, dh ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a39fc : mov dl, 0x1d ; stc ; inc dword ptr [rdx + 0x1d] ; stc ; call rdx
0x00000000004403ca : mov dl, 0xdc ; std ; dec dword ptr [rax - 0x75] ; jge 0x4403da ; call rbx
0x00000000004c4131 : mov dl, 0xf8 ; call qword ptr [rdi]
0x00000000004c6689 : mov dl, bh ; call rsi
0x00000000004bde3f : mov dl, byte ptr [rax] ; std ; push rax ; std ; call rax
0x00000000004318d0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000048deb5 : mov ds, word ptr [rdx + rcx + 0x708d0000] ; retf
0x00000000004baebe : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000047ca74 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b71c : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000419563 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000046a1c3 : mov dword ptr [r12], 1 ; jmp 0x46a198
0x000000000044aca8 : mov dword ptr [r12], eax ; mov r12, rsi ; jmp 0x44ac84
0x0000000000400de2 : mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004669b7 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000435976 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000435961 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463c49 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463c89 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000476623 : mov dword ptr [rax + 0x18], 0 ; call 0x4430d9
0x0000000000464be9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463c4d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464c87 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446e78 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446e7b : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004160ea : mov dword ptr [rax + 8], 0 ; ret
0x0000000000443126 : mov dword ptr [rax + 8], edx ; ret
0x00000000004268ce : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049d063 : mov dword ptr [rax - 0x7d], ecx ; ret
0x00000000004806c2 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044def8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041c3be : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041cae8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a6d8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c6ef5 : mov dword ptr [rax], eax ; add byte ptr [rax], bh ; loope 0x4c6efb ; jmp qword ptr [rdx]
0x0000000000400de3 : mov dword ptr [rax], eax ; pop rbx ; ret
0x0000000000464175 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000487298 : mov dword ptr [rax], edi ; jmp 0x487261
0x000000000047b0b5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000483a93 : mov dword ptr [rax], edx ; jmp 0x483a5c
0x00000000004640b5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047b0a9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000464f01 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000004424ca : mov dword ptr [rbp - 0x40], esp ; syscall
0x000000000045df22 : mov dword ptr [rbp - 0x470], eax ; call 0x45a9e8
0x00000000004424c6 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x00000000004552f8 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x00000000004856f3 : mov dword ptr [rbp - 0x5a0], edx ; jmp 0x4856cc
0x00000000004726b1 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x000000000047289a : mov dword ptr [rbp - 0xa8], esi ; call rax
0x0000000000459dcf : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471e60 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000491851 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000412542 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412541 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d7f1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478735 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000412617 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046aab8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46aa8e
0x000000000047876e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047476f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412e19 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004786d3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488075 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000416e85 : mov dword ptr [rbx + 0x18], edx ; mov rdx, rcx ; jmp 0x416e71
0x0000000000415633 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047cab3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044fa5f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004156ae : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000416e31 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413c92 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463cd4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000464ae8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004125a7 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000415965 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044d807 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000415afc : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e156 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000415a0c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488799 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000464bec : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000415636 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000004669b8 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000435977 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000435962 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000435951 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000004475bd : mov dword ptr [rcx], 0x39480000 ; retf
0x000000000046b35c : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004855b9 : mov dword ptr [rcx], eax ; jmp 0x485582
0x00000000004c7fd2 : mov dword ptr [rcx], eax ; ret
0x000000000049c47a : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x000000000041821d : mov dword ptr [rcx], edx ; mov rax, rdx ; ret
0x000000000043bb6d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043bbab : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bc2d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b51b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b59d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b4dd : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b5e0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b600 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b5c1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043bc93 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043b5e3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004155c3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043bc75 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043bcb3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043b5c5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000046763d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470e45 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470e17 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042cb91 : mov dword ptr [rdi + 0x38], ecx ; ret
0x00000000004155f3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000419140 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c4d1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043bbed : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b53d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043bb8b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043bc0d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b4fb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435635 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435478 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435718 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004355c5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435408 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043ba57 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000435555 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435398 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b427 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000419143 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043ba39 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000435328 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b419 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043baeb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004352b8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b48b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043bb0b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435248 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b49b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043baa9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043bb2b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004351d8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b469 : mov dword ptr [rdi + 7], edx ; ret
0x00000000004155c7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000479134 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043bac9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043ba8b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000047a4f4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043b45b : mov dword ptr [rdi + 8], edx ; ret
0x00000000004329c3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00000000004268d5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004268de : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c489 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000431595 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047909f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000043191c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c88 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c08 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431cec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b88 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ebd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004320bd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a69 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431c9d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000431ab5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431c99 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432079 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043174f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000432076 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432276 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432476 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431599 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000004315d7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043174c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431848 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431794 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d08 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000479024 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000047912e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c856 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043ba25 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043ba77 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043ba04 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b3e4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043ba55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b425 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043baa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b467 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043bac7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b477 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004268d3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043dd69 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043b488 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b498 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b4a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004268db : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b416 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b458 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043dd76 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042c967 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043b9f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043ba12 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043ba64 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004354e4 : mov dword ptr [rdi], edx ; ret
0x000000000043595f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004329ab : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a69d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043594e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043298e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000435973 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000004329c0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a6c3 : mov dword ptr [rdi], esi ; ret
0x00000000004301b2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000410163 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042cc1f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b71d : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043af77 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000004397a7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043af59 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439799 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043b00b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043af89 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00000000004397b9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043b02b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043afa9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00000000004397c9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043afc9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043b04b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004397d9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043afe9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043aedb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043972b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416f86 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047aac4 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046aedf : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000049a11c : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000041b116 : mov dword ptr [rdx], eax ; jmp 0x41af8d
0x000000000043af04 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000043af32 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000043ae84 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000412dc1 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dcea : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a69f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000413620 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004396d4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047b095 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000416ef2 : mov dword ptr [rdx], eax ; ret
0x0000000000463f96 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049eddf : mov dword ptr [rip + 0x22d8fb], ebx ; jne 0x49edd1 ; pop rbx ; ret
0x000000000044f8a5 : mov dword ptr [rip + 0x27c18d], edx ; je 0x44f8b9 ; ret
0x0000000000444526 : mov dword ptr [rip + 0x285a6c], edx ; pop rbx ; ret
0x000000000040161a : mov dword ptr [rip + 0x2c8a70], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2ca9a5], eax ; pop rbp ; pop r12 ; ret
0x00000000004014c7 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000049e1a7 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043dd79 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043dd6b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046e191 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c4bb : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000474182 : mov dword ptr [rsi], eax ; ret
0x00000000004014c4 : mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049cbc3 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041b95b : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000419564 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041b956 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000044bc11 : mov dword ptr [rsp + 0x40], eax ; call 0x478676
0x000000000047be70 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047c073 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047bfc2 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x00000000004092af : mov dword ptr [rsp + 8], eax ; call 0x405d16
0x0000000000440646 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041ba12 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x000000000047837e : mov dword ptr [rsp + 8], esi ; mov edi, 0x6cb140 ; call rax
0x0000000000491a86 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044f9d5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000046a1c4 : mov dword ptr [rsp], 1 ; jmp 0x46a197
0x0000000000409a19 : mov dword ptr [rsp], eax ; call 0x405d15
0x000000000043f597 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x000000000046af77 : mov dword ptr [rsp], eax ; mov eax, 0x14 ; syscall
0x000000000043f5f7 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x000000000043f537 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x000000000043f7e7 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x000000000044aca9 : mov dword ptr [rsp], eax ; mov r12, rsi ; jmp 0x44ac83
0x000000000044238b : mov dword ptr [rsp], eax ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000041ba17 : mov dword ptr [rsp], ecx ; call rdx
0x0000000000409223 : mov dword ptr [rsp], edx ; call 0x405d15
0x000000000047ca73 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044def7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041cae7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a6d7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000487297 : mov dword ptr fs:[rax], edi ; jmp 0x487262
0x0000000000483a92 : mov dword ptr fs:[rax], edx ; jmp 0x483a5d
0x000000000046af2c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x00000000004855b8 : mov dword ptr fs:[rcx], eax ; jmp 0x485583
0x000000000047aac3 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000412dc0 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dce9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004329aa : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431ab0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043b3d0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400ad4 : mov eax, 0 ; leave ; ret
0x000000000043f579 : mov eax, 0 ; syscall
0x000000000043e5a9 : mov eax, 0x10 ; pop rbx ; ret
0x000000000043fa00 : mov eax, 0x101 ; syscall
0x000000000046adb3 : mov eax, 0x106 ; syscall
0x000000000046af59 : mov eax, 0x14 ; syscall
0x000000000046ae00 : mov eax, 0x15 ; syscall
0x00000000004210f4 : mov eax, 0x16 ; je 0x421107 ; ret
0x0000000000421290 : mov eax, 0x16 ; ret
0x000000000043f420 : mov eax, 0x18 ; syscall
0x0000000000442963 : mov eax, 0x19 ; syscall
0x0000000000440100 : mov eax, 0x1c ; syscall
0x000000000043e5a2 : mov eax, 0x20 ; pop rbx ; ret
0x000000000049a0a0 : mov eax, 0x26 ; syscall
0x000000000043e59b : mov eax, 0x30 ; pop rbx ; ret
0x000000000040f3f2 : mov eax, 0x38 ; syscall
0x000000000043ec00 : mov eax, 0x3b ; syscall
0x000000000043eb13 : mov eax, 0x3d ; syscall
0x000000000040f1c9 : mov eax, 0x3e ; mov rbx, rdi ; syscall
0x000000000046acf0 : mov eax, 0x3f ; syscall
0x000000000043e594 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426789 : mov eax, 0x435810 ; ret
0x0000000000425e5c : mov eax, 0x43d7d0 ; cmove rax, rdx ; ret
0x00000000004b89bb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000043f65c : mov eax, 0x48 ; syscall
0x000000000049a263 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x0000000000426d3a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043f883 : mov eax, 0x4f ; syscall
0x000000000043e58d : mov eax, 0x60 ; pop rbx ; ret
0x000000000043fee0 : mov eax, 0x61 ; syscall
0x0000000000442980 : mov eax, 0x63 ; syscall
0x000000000046ad10 : mov eax, 0x66 ; syscall
0x000000000046ad30 : mov eax, 0x68 ; syscall
0x000000000046ad20 : mov eax, 0x6b ; syscall
0x000000000046ad40 : mov eax, 0x6c ; syscall
0x00000000004188b3 : mov eax, 0x6ca800 ; ret
0x000000000046fad7 : mov eax, 0x6cb1e0 ; call rdx
0x000000000043e586 : mov eax, 0x80 ; pop rbx ; ret
0x000000000047eab7 : mov eax, 0x89459673 ; retf
0x0000000000441fb5 : mov eax, 0x8b49fffd ; jge 0x441fc5 ; call rbx
0x0000000000411951 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046d08f : mov eax, 0x9e ; syscall
0x00000000004400e0 : mov eax, 0xa ; syscall
0x00000000004bdf50 : mov eax, 0xa8fffdc1 ; ret 0xfffd
0x00000000004400c0 : mov eax, 0xb ; syscall
0x000000000040dc97 : mov eax, 0xba ; syscall
0x00000000004424c8 : mov eax, 0xc065894c ; syscall
0x00000000004673d0 : mov eax, 0xc9 ; syscall
0x00000000004429f5 : mov eax, 0xca ; syscall
0x000000000044fcf9 : mov eax, 0xe ; syscall
0x000000000043ee07 : mov eax, 0xe5 ; syscall
0x0000000000454def : mov eax, 0xe8004b2d ; pop rax ; retf -6
0x0000000000454e21 : mov eax, 0xe8004b2d ; retf -6
0x000000000040dcae : mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000044fa81 : mov eax, 0xf ; syscall
0x0000000000420116 : mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000400541 : mov eax, 0xffffffff ; cmovle eax, ecx ; jmp 0x40051e
0x00000000004174e0 : mov eax, 0xffffffff ; jmp 0x4174b7
0x0000000000411aef : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000451d4e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411939 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000004125b1 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dcec : mov eax, 0xffffffff ; ret
0x000000000047a6bd : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415f62 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043eadb : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000004444e6 : mov eax, 1 ; ret
0x00000000004003d5 : mov eax, 1 ; syscall
0x000000000049cd00 : mov eax, 2 ; add rsp, 8 ; ret
0x00000000004668d1 : mov eax, 2 ; ret
0x000000000040042f : mov eax, 2 ; syscall
0x000000000049e873 : mov eax, 3 ; je 0x49e888 ; ret
0x000000000046a722 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000412da4 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000004668e1 : mov eax, 3 ; ret
0x0000000000400489 : mov eax, 3 ; syscall
0x000000000049ccf0 : mov eax, 4 ; add rsp, 8 ; ret
0x00000000004668f1 : mov eax, 4 ; ret
0x000000000043f47e : mov eax, 4 ; syscall
0x0000000000466901 : mov eax, 5 ; ret
0x000000000043f4cd : mov eax, 5 ; syscall
0x0000000000466911 : mov eax, 6 ; ret
0x000000000046ad5e : mov eax, 6 ; syscall
0x0000000000466921 : mov eax, 7 ; ret
0x000000000049ccd1 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043e57f : mov eax, 8 ; pop rbx ; ret
0x000000000049e885 : mov eax, 8 ; ret
0x0000000000442940 : mov eax, 8 ; syscall
0x0000000000440073 : mov eax, 9 ; movsxd r10, r10d ; syscall
0x0000000000440033 : mov eax, 9 ; syscall
0x0000000000463fcc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004156ec : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000411663 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000004158c8 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000415be8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487cf3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000415f0c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000465034 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047ebed : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478551 : mov eax, dword ptr [rax + 8] ; ret
0x000000000047415a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x474139 ; ret
0x000000000044f8ef : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004556d2 : mov eax, dword ptr [rax*8 + 0x4b2f20] ; jmp rax
0x0000000000455723 : mov eax, dword ptr [rax*8 + 0x4b3020] ; jmp rax
0x0000000000457813 : mov eax, dword ptr [rax*8 + 0x4b3120] ; jmp rax
0x0000000000456346 : mov eax, dword ptr [rax*8 + 0x4b3420] ; jmp rax
0x0000000000460541 : mov eax, dword ptr [rax*8 + 0x4b38a0] ; jmp rax
0x0000000000461865 : mov eax, dword ptr [rax*8 + 0x4b39a0] ; jmp rax
0x0000000000461d49 : mov eax, dword ptr [rax*8 + 0x4b3aa0] ; jmp rax
0x00000000004605d7 : mov eax, dword ptr [rax*8 + 0x4b3da0] ; jmp rax
0x000000000049c416 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000049a119 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000474a99 : mov eax, dword ptr [rax] ; ret
0x0000000000440adc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000004456e7 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475fa5 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471c51 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047b0b1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004397a4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004397b6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004397c6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004397d6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004397e6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004293aa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042ac82 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043af30 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000439770 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043ae81 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004396d1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043af01 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439751 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000464e7f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000416f00 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000416f28 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0908 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a091f ; call rax
0x0000000000465031 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417231 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047a898 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47a8b0 ; ret
0x000000000049c421 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c4a1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c4e1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c541 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c531 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c4f1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044df0c : mov eax, dword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004784e1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4784f7 ; ret
0x0000000000416eef : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049e245 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e257 ; ret
0x000000000049e260 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e277 ; ret
0x000000000049e480 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e497 ; ret
0x000000000043e657 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e649 ; ret
0x0000000000429106 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004115e0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000464177 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000410b20 : mov eax, dword ptr [rdx] ; ret
0x0000000000416ee1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x416ee0 ; ret
0x0000000000488760 : mov eax, dword ptr [rip + 0x2455fa] ; ret
0x000000000047417b : mov eax, dword ptr [rip + 0x2596c7] ; mov qword ptr [rsi], rax ; ret
0x000000000047411a : mov eax, dword ptr [rip + 0x259730] ; ret
0x000000000044cdc1 : mov eax, dword ptr [rip + 0x280411] ; ret
0x0000000000445a51 : mov eax, dword ptr [rip + 0x288371] ; ret
0x0000000000417211 : mov eax, dword ptr [rip + 0x2b2ea9] ; ret
0x000000000049cd3c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000047400c : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049cd71 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x00000000004640b7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c516 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400d20 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004476ea : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044804d : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e157 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000047896c : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x00000000004787ed : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043e714 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474a98 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041ce55 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a870 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041cad5 : mov eax, eax ; pop rbx ; ret
0x0000000000432aa5 : mov eax, eax ; ret
0x0000000000477a82 : mov eax, eax ; sub eax, ecx ; ret
0x000000000041af63 : mov eax, eax ; syscall
0x000000000041358a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000452a44 : mov eax, ebp ; jmp 0x452a15
0x000000000046344b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004638d9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004638ac : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fce3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411956 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000400469 : mov eax, ebp ; syscall
0x000000000047a633 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000413cfd : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474d68 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000466109 : mov eax, ebx ; jmp 0x465f63
0x00000000004101f9 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004102de : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ff4e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041261b : mov eax, ebx ; pop rbx ; ret
0x00000000004425c8 : mov eax, ebx ; syscall
0x000000000047a4f7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046b285 : mov eax, ecx ; jne 0x46b2dd ; ret
0x000000000046d903 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46d8d9
0x000000000041c3c5 : mov eax, ecx ; ret
0x000000000046a5e8 : mov eax, ecx ; sub rsp, 0x98 ; syscall
0x00000000004038fb : mov eax, ecx ; syscall
0x00000000004a3521 : mov eax, edi ; call qword ptr [rax]
0x0000000000417241 : mov eax, edi ; ret
0x000000000044f134 : mov eax, edi ; syscall
0x000000000048801e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047b223 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041dc38 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047279f : mov eax, edx ; call rax
0x000000000047ca4b : mov eax, edx ; jle 0x47ca5d ; ret
0x000000000046320b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c65a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e722 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004184f8 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040fed0 : mov eax, edx ; pop rbx ; ret
0x0000000000418220 : mov eax, edx ; ret
0x00000000004004a6 : mov eax, edx ; syscall
0x0000000000478af7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046ab03 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487e48 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ec44 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000004524a4 : mov eax, esi ; ret
0x000000000043ddfb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000043ebc3 : mov eax, esi ; syscall
0x0000000000415015 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a4a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000442304 : mov eax, esp ; syscall
0x00000000004004a5 : mov eax, r10d ; syscall
0x0000000000415014 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000442303 : mov eax, r12d ; syscall
0x0000000000413009 : mov eax, r13d ; syscall
0x000000000044f133 : mov eax, r15d ; syscall
0x000000000045a86f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a7a9 : mov eax, r8d ; ret
0x0000000000477a81 : mov eax, r8d ; sub eax, ecx ; ret
0x000000000041af62 : mov eax, r8d ; syscall
0x0000000000412123 : mov eax, r9d ; syscall
0x00000000004bc701 : mov ebp, 0x4b ; add byte ptr [rax], al ; pop rax ; ret 0x4b
0x00000000004ba8b4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x0000000000467ce7 : mov ebp, 0x83000001 ; call 0xffffffffc40dc52a
0x0000000000483ace : mov ebp, 0x89000019 ; retf 0x348
0x00000000004a36b9 : mov ebp, 0xbe16fff8 ; clc ; call qword ptr [rsi]
0x00000000004a3659 : mov ebp, 0xbe42fff8 ; clc ; jmp rax
0x00000000004ae624 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b7e7d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000465a58 : mov ebp, 0xf80148c0 ; ret
0x0000000000465cdc : mov ebp, 0xf80148c6 ; ret
0x00000000004b95e6 : mov ebp, 0xfb67d10d ; ret
0x000000000045588c : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455e11 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045d37f : mov ebp, 0xfffffb60 ; call rax
0x000000000047643f : mov ebp, 0xffffff78 ; call rax
0x000000000049c7ba : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000440137 : mov ebp, eax ; call rax
0x0000000000473d26 : mov ebp, eax ; jmp 0x473cf7
0x000000000041f8f2 : mov ebp, ebp ; call 0x42c354
0x0000000000440ad9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000478afd : mov ebp, ecx ; nop ; jmp rdx
0x000000000047d6f7 : mov ebp, edi ; mov r15, rax ; jmp 0x47d713
0x0000000000440edf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000487016 : mov ebp, esi ; jmp 0x486fe7
0x00000000004ba604 : mov ebx, 0x1b5c347e ; jmp 0x4ba5dc
0x0000000000434ec7 : mov ebx, 0x46f00ff2 ; retf
0x000000000047f55b : mov ebx, 0x4bcd40 ; jmp 0x47f532
0x0000000000431ed4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000431ef2 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000040227d : mov ebx, 0x80 ; call rax
0x0000000000442a54 : mov ebx, 0xafb8341 ; je 0x442a63 ; ret
0x000000000047ed59 : mov ebx, 0xbe000000 ; popfq ; retf
0x00000000004b7e7b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400930 : mov ebx, 0xe0ff006c ; nop dword ptr [rax] ; pop rbp ; ret
0x0000000000446026 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x446009 ; jmp 0x445ffb
0x00000000004bac24 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000476c29 : mov ebx, dword ptr [rsp] ; add rsp, 0x18 ; jmp r11
0x0000000000476f98 : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x00000000004770aa : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440ee6 : mov ebx, eax ; call rax
0x0000000000448521 : mov ebx, eax ; jmp 0x4484f3
0x000000000044fdef : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000040f1cf : mov ebx, edi ; syscall
0x000000000044f2e6 : mov ebx, edi ; test rax, rax ; je 0x44f2f6 ; call rax
0x000000000046abd3 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047ca66 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004bf594 : mov ecx, 0x41380e0a ; ret
0x0000000000441fc3 : mov ecx, 0x49fffdc0 ; mov edi, dword ptr [rsp] ; call rbx
0x00000000004b8ab9 : mov ecx, 0x5b92ac50 ; retf
0x00000000004ba58e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004b7e79 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000046aef0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x00000000004038f4 : mov ecx, 2 ; xor esi, esi ; mov eax, ecx ; syscall
0x000000000043595c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042fd05 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000046500b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000429103 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004baa44 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4baa79 ; retf 0x32dd
0x0000000000432073 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432273 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432473 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b400 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b441 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435633 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004355c3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435553 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435475 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435405 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435395 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435325 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435245 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004351d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435715 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b3e1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047366d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478647 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004785d5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000467198 : mov ecx, edi ; call rbx
0x000000000046d906 : mov ecx, edi ; mov r15, rax ; jmp 0x46d8d6
0x0000000000432ac1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432ac4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000415f07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000444d1b : mov ecx, esi ; call rbx
0x0000000000473ff3 : mov ecx, esi ; cmp rcx, rdx ; jne 0x473fd8 ; ret
0x00000000004427b0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000441ded : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000046554c : mov edi, 0x4a208c ; call 0x401857
0x000000000041b160 : mov edi, 0x4a24e8 ; call 0x417c57
0x000000000041b17f : mov edi, 0x4a2517 ; call 0x417c57
0x00000000004425c3 : mov edi, 0x4a4ddd ; mov eax, ebx ; syscall
0x00000000004425f2 : mov edi, 0x4a4de8 ; mov eax, ebx ; syscall
0x0000000000444e26 : mov edi, 0x4a547f ; call 0x401857
0x0000000000444e0d : mov edi, 0x4a5498 ; call 0x401857
0x000000000044ce00 : mov edi, 0x4a6228 ; mov eax, ecx ; syscall
0x000000000044f735 : mov edi, 0x4a6d20 ; mov eax, ecx ; syscall
0x0000000000454dd5 : mov edi, 0x4b2d21 ; call 0x401857
0x0000000000454e07 : mov edi, 0x4b2d88 ; call 0x401857
0x0000000000454dee : mov edi, 0x4b2db8 ; call 0x401857
0x0000000000474d83 : mov edi, 0x4b61d4 ; call 0x401857
0x000000000040095c : mov edi, 0x4be568 ; call rax
0x0000000000470e86 : mov edi, 0x6cb100 ; call rax
0x0000000000470ef2 : mov edi, 0x6cb100 ; pop rbx ; pop rbp ; jmp rax
0x000000000047850f : mov edi, 0x6cb140 ; add rsp, 8 ; jmp rax
0x00000000004441f5 : mov edi, 0x6cb140 ; call rax
0x0000000000476a2f : mov edi, 0x6cb140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cbb50 ; jmp rax
0x0000000000402ff5 : mov edi, 0x6cbfe0 ; call rax
0x0000000000402cff : mov edi, 0x6cbfe0 ; call rbx
0x0000000000402da6 : mov edi, 0x6cc060 ; call rax
0x000000000040364c : mov edi, 0x6cc0a0 ; call r15
0x0000000000403604 : mov edi, 0x6cc0a0 ; call rax
0x0000000000445af1 : mov edi, 0x6cd1b0 ; call rax
0x000000000043e74a : mov edi, 0x6cd200 ; call rax
0x0000000000402cf8 : mov edi, 0x6cd200 ; call rbx
0x000000000047ac72 : mov edi, 0x6cd4a0 ; call rax
0x000000000047ad9d : mov edi, 0x6cd4a4 ; call rdx
0x00000000004687fd : mov edi, 0x8900264b ; ret 0xe883
0x00000000004420ec : mov edi, 0x8b49fffd ; call rbx
0x00000000004420f9 : mov edi, 0x8b49fffd ; jge 0x442107 ; call rbx
0x00000000004a36c1 : mov edi, 0xbf96fff8 ; clc ; call qword ptr [rsi]
0x00000000004a3749 : mov edi, 0xc060fff8 ; clc ; jmp rax
0x000000000049c16a : mov edi, 1 ; call r14
0x0000000000401737 : mov edi, 1 ; call rax
0x000000000049ca5c : mov edi, 1 ; jmp rax
0x0000000000409a15 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405d19
0x0000000000409a3c : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405d19
0x0000000000409a26 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405d19
0x0000000000440643 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d37e : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047643e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c71e : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466a45 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e0dd : mov edi, dword ptr [rbp] ; call r14
0x000000000044029a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000476fc8 : mov edi, dword ptr [rdi + 0x28] ; call r11
0x0000000000440248 : mov edi, dword ptr [rdi] ; call rbx
0x000000000044ef88 : mov edi, dword ptr [rdi] ; syscall
0x0000000000464ff8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464fc4
0x00000000004b98a6 : mov edi, dword ptr [rdx] ; ret
0x000000000047afb8 : mov edi, dword ptr [rip + 0x2524e6] ; call rax
0x000000000047ae7b : mov edi, dword ptr [rip + 0x252623] ; jmp rax
0x0000000000440207 : mov edi, dword ptr [rsi] ; call rbx
0x00000000004473f1 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000044072f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004476e5 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448048 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044bc3a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x000000000044842e : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000447b65 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x0000000000448890 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x00000000004471f2 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000447c19 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044b47a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000449a98 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449ed8 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000411fa4 : mov edi, dword ptr [rsp + 0x38] ; mov rsi, r13 ; call 0x41e249
0x0000000000448e18 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x00000000004491bf : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400cc7 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400d1b : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004423d0 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000440690 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049e04a : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000473948 : mov edi, eax ; call 0x400354
0x0000000000473948 : mov edi, eax ; call 0x400359
0x00000000004086f2 : mov edi, eax ; call 0x41e088
0x000000000042129a : mov edi, eax ; call rcx
0x000000000046d909 : mov edi, eax ; jmp 0x46d8d3
0x000000000047d6fa : mov edi, eax ; jmp 0x47d710
0x000000000045249d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x452491 ; mov rax, rsi ; ret
0x0000000000400487 : mov edi, eax ; mov eax, 3 ; syscall
0x0000000000400467 : mov edi, eax ; mov eax, ebp ; syscall
0x000000000043ed71 : mov edi, eax ; mov eax, r9d ; syscall
0x000000000041f8ef : mov edi, eax ; mov rbp, r13 ; call 0x42c357
0x0000000000420638 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004422fe : mov edi, eax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ef0c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000041c1b0 : mov edi, ebp ; call 0x418c74
0x000000000047e4d6 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e31c : mov edi, ebp ; call r14
0x000000000044fe37 : mov edi, ebp ; call r15
0x000000000041eb56 : mov edi, ebp ; call rax
0x0000000000440f30 : mov edi, ebp ; call rbx
0x000000000043f881 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000044f131 : mov edi, ebp ; mov eax, r15d ; syscall
0x000000000044f242 : mov edi, ebp ; mov eax, r8d ; syscall
0x00000000004503b4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041f517 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000044f210 : mov edi, ebp ; xor eax, eax ; syscall
0x000000000044cd77 : mov edi, ebx ; call r12
0x0000000000444fed : mov edi, ebx ; call r14
0x0000000000462bb9 : mov edi, ebx ; call r8
0x0000000000412bd7 : mov edi, ebx ; call rax
0x0000000000445bb1 : mov edi, ebx ; jmp 0x445b7b
0x000000000049ec73 : mov edi, ebx ; jne 0x49ec65 ; pop rbx ; ret
0x00000000004003d3 : mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004004a3 : mov edi, ebx ; mov eax, r10d ; syscall
0x0000000000415754 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004158c4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000041af8c : mov edi, ecx ; mov eax, 3 ; syscall
0x000000000041af60 : mov edi, ecx ; mov eax, r8d ; syscall
0x0000000000441dbf : mov edi, edi ; call 0x41e084
0x0000000000410fc5 : mov edi, edi ; call rax
0x0000000000440f74 : mov edi, edi ; call rbx
0x0000000000465354 : mov edi, edi ; xor r8d, r8d ; call rbx
0x0000000000452521 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x452509 ; mov rax, rsi ; ret
0x000000000043ebc1 : mov edi, edx ; mov eax, esi ; syscall
0x000000000043ebd1 : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000441e04 : mov edi, esi ; call 0x41e084
0x000000000045cc66 : mov edi, esi ; call 0x4268f9
0x000000000045a642 : mov edi, esi ; call 0x466934
0x000000000040fe33 : mov edi, esi ; call 0x49c8b4
0x000000000044563e : mov edi, esi ; call r15
0x0000000000440f54 : mov edi, esi ; call rbx
0x00000000004123a7 : mov edi, esi ; mov eax, r9d ; syscall
0x000000000044fdf2 : mov edi, esp ; call r15
0x0000000000440f0b : mov edi, esp ; call rbx
0x00000000004039a8 : mov edi, esp ; mov eax, 3 ; syscall
0x0000000000440031 : mov edi, esp ; mov eax, 9 ; syscall
0x0000000000403bcc : mov edi, esp ; mov eax, r10d ; syscall
0x0000000000412121 : mov edi, esp ; mov eax, r9d ; syscall
0x0000000000467195 : mov edi, esp ; mov r9, r15 ; call rbx
0x00000000004456e4 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004735b9 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004735b8 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042677f : mov edx, 0x42fc80 ; cmove rax, rdx ; ret
0x0000000000434e47 : mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004320d4 : mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x00000000004320f2 : mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x00000000004428d6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004b8d5e : mov edx, 0xcac982a4 ; call 0xffffffffaf0e2bde
0x000000000049b053 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000446f37 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000046bd5a : mov edx, 1 ; jmp 0x46bd32
0x0000000000444d60 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463f98 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047b091 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000412bd0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000416e81 : mov edx, dword ptr [rbx + 0x50] ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416e75
0x000000000042ac7f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004293ad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047b0a5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000410fbe : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049de49 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x0000000000472798 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043b422 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b413 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b463 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b473 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000431ab1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431e70 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431701 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043ba10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004356a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043ba61 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004354e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043b9f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b3d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041e469 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049c0a9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x00000000004183d4 : mov edx, eax ; jmp 0x4183f1
0x0000000000421330 : mov edx, eax ; jmp 0x4212fb
0x0000000000469b56 : mov edx, eax ; jmp 0x469b5f
0x000000000046b4c5 : mov edx, eax ; jmp 0x46b4ba
0x000000000044238f : mov edx, eax ; mov eax, r12d ; syscall
0x00000000004503b7 : mov edx, ebp ; call r15
0x000000000047e4d1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e491 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fe31 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000046eaf6 : mov edx, ebp ; mov rsi, r15 ; call 0x46b557
0x000000000044fe4c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000473d1c : mov edx, ebp ; xor edi, edi ; call 0x440006
0x000000000049ee9f : mov edx, ebx ; jne 0x49ee96 ; pop rbx ; ret
0x0000000000413004 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416e89 : mov edx, ecx ; jmp 0x416e6d
0x000000000049d653 : mov edx, ecx ; jmp 0x49d62b
0x000000000046adb1 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000442961 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x000000000044f20d : mov edx, ecx ; mov rdi, r13 ; xor eax, eax ; syscall
0x00000000004589d4 : mov edx, esp ; call 0x4638f8
0x000000000046ae56 : mov edx, esp ; syscall
0x000000000046eaf5 : mov edx, r13d ; mov rsi, r15 ; call 0x46b558
0x000000000046eaf4 : mov edx, r13d ; mov rsi, r15 ; call 0x46b559
0x0000000000473d1b : mov edx, r13d ; xor edi, edi ; call 0x440007
0x00000000004c73cd : mov es, word ptr [rax] ; add byte ptr [rax - 0x69], dh ; std ; call rcx
0x000000000046b079 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000441456 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000004c73cc : mov es, word ptr fs:[rax] ; add byte ptr [rax - 0x69], dh ; std ; call rcx
0x0000000000442232 : mov esi, 0x1f0ffffd ; add bl, dh ; ret
0x0000000000446e75 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004ba866 : mov esi, 0x497b96cc ; retf -0x6620
0x0000000000446e67 : mov esi, 0x4a5b9a8a ; add byte ptr [rax - 0x7f], cl ; ret 0x5b80
0x00000000004bc749 : mov esi, 0x4b ; add byte ptr [rax], al ; clc ; ret 0x4b
0x00000000004ba903 : mov esi, 0x6400fd4c ; retf 0xf64
0x0000000000488556 : mov esi, 0x66002450 ; add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004b89ea : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000403cf9 : mov esi, 0x80 ; call 7
0x0000000000442ad8 : mov esi, 0x80 ; syscall
0x000000000047674f : mov esi, 0x89fffffe ; ret 0x758b
0x0000000000442216 : mov esi, 0x8b48fffd ; jge 0x442224 ; call rbx
0x0000000000442215 : mov esi, 0x8b48fffd ; jge 0x442225 ; call rbx
0x000000000044218e : mov esi, 0x8b49fffd ; call rbx
0x0000000000442208 : mov esi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x00000000004421fa : mov esi, 0x8b49fffd ; jge 0x442208 ; call rbx
0x000000000048a46f : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a3741 : mov esi, 0xbf60fff8 ; clc ; jmp rax
0x00000000004b7e7e : mov esi, 0xc2c1c0bf ; ret
0x000000000041526b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e484 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440f96 : mov esi, 1 ; call rbx
0x0000000000486fd4 : mov esi, 1 ; jmp 0x486fab
0x0000000000441183 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x000000000044104f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440fc7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000044140d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000462bb3 : mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000004624c8 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000440181 : mov esi, 2 ; jmp rax
0x0000000000441401 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000441174 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000441040 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440fb8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000044019b : mov esi, 3 ; jmp rax
0x000000000044197c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000004419d3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000441a53 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000441b53 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000004bb0e7 : mov esi, dr1 ; jrcxz 0x4bb0cf ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000049c71a : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cb79 : mov esi, dword ptr [rbx] ; call r14
0x0000000000476fc4 : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000049e04e : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000049cbc8 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e0da : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000046a728 : mov esi, dword ptr [rdx] ; syscall
0x000000000049de45 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004329a9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400cc3 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000444d16 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450e81 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041eb51 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000447c14 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x0000000000449a93 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e161 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x000000000046a727 : mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x0000000000411fa9 : mov esi, ebp ; call 0x41e244
0x0000000000413007 : mov esi, ebp ; mov eax, r13d ; syscall
0x00000000004123a4 : mov esi, ebp ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043ed6e : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f7ae : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046aabc : mov esi, ebp ; xor edx, edx ; jmp 0x46aa8a
0x00000000004c79c9 : mov esi, ebx ; jmp qword ptr [rsi]
0x000000000047afb6 : mov esi, ebx ; mov edi, dword ptr [rip + 0x2524e6] ; call rax
0x000000000044fe4f : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000041211e : mov esi, ebx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000421297 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000415799 : mov esi, ecx ; jbe 0x41573d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000047fbf8 : mov esi, ecx ; jmp 0x47f6a6
0x0000000000403bc9 : mov esi, ecx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x000000000046eaf9 : mov esi, edi ; call 0x46b554
0x000000000049ca5a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045d37b : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e319 : mov esi, edi ; mov rdi, r13 ; call r14
0x00000000004530db : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000043f47c : mov esi, edx ; mov eax, 4 ; syscall
0x000000000043f4cb : mov esi, edx ; mov eax, 5 ; syscall
0x000000000046ad5c : mov esi, edx ; mov eax, 6 ; syscall
0x000000000044f23f : mov esi, edx ; mov rdi, r13 ; mov eax, r8d ; syscall
0x00000000004423cd : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049cab1 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000467192 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000004503b1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e4d4 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e494 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044fe03 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000420635 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fe34 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000042035a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041fb95 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047481b : mov esi, esp ; syscall
0x0000000000426131 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000426161 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000426151 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004a3735 : mov esp, 0xbce0fff8 ; clc ; jmp rax
0x00000000004a36b5 : mov esp, 0xbd16fff8 ; clc ; call qword ptr [rsi]
0x00000000004a3739 : mov esp, 0xbde0fff8 ; clc ; jmp rax
0x000000000047ed72 : mov esp, 0xbe000000 ; popfq ; retf
0x0000000000474d7a : mov esp, 0xbe000000 ; retf 0x4b61
0x0000000000423b13 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042cd5b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000426141 : mov esp, 0xf80148c0 ; ret
0x000000000040071f : mov esp, eax ; call 0x43e478
0x0000000000478afa : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c7be : mov esp, ecx ; ret
0x0000000000440134 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000044acad : mov esp, esi ; jmp 0x44ac7f
0x00000000004b8ce4 : mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8d57 ; salc ; retf
0x00000000004b8ce3 : mov gs, r13d ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b8d58 ; salc ; retf
0x000000000042cc1e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049a11b : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000435950 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000041821c : mov qword ptr [r9], rdx ; mov rax, rdx ; ret
0x0000000000463c48 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463c88 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464be8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463c4c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464c86 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004160e9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000443125 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000464174 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047b0b4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004640b4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047b0a8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000464f00 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004424c9 : mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045df21 : mov qword ptr [rbp - 0x470], rax ; call 0x45a9e9
0x00000000004424c5 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x00000000004552f7 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000004856f2 : mov qword ptr [rbp - 0x5a0], rdx ; jmp 0x4856cd
0x00000000004726b0 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x0000000000472899 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x0000000000471e5f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044d7f0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478734 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000412616 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000047876d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047476e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412e18 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004786d2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488074 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000416e84 : mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416e72
0x0000000000415632 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047cab2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004156ad : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004125a6 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000415964 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000415afb : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e155 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000488798 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049c479 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x00000000004791ae : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043bc2c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b59c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b57c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b5df : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b5ff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b5c0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000004155c2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470e44 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470e16 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042cb90 : mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000004155f2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041913f : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c4d0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043bbec : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b53c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bc0c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b55c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435477 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435407 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435397 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435327 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043baea : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004352b7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b48a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043bb0a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435247 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b49a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043bb2a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004351d7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b4aa : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a4f3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000479133 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000004155c6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004268dd : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c488 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000431594 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047909e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000043191b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c87 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c07 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ceb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b87 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ebc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004320bc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a68 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000479029 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431598 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043174b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431847 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431793 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d07 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c855 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c966 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478ff8 : mov qword ptr [rdi], r9 ; ret
0x000000000043ba76 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b466 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b476 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043b487 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b497 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b4a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004268da : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b457 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043ba63 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004354e3 : mov qword ptr [rdi], rdx ; ret
0x000000000043594d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043298d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a6c2 : mov qword ptr [rdi], rsi ; ret
0x0000000000410162 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043b00a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004397fa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043b02a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043981a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043b04a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043983a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043aeda : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043972a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416f85 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043ae83 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004396d3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047b094 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000416ef1 : mov qword ptr [rdx], rax ; ret
0x0000000000463f95 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000401619 : mov qword ptr [rip + 0x2c8a70], rax ; xor eax, eax ; ret
0x00000000004014c6 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049e1a6 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046e190 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000474181 : mov qword ptr [rsi], rax ; ret
0x00000000004014c3 : mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041b95a : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049cbc2 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000044bc10 : mov qword ptr [rsp + 0x40], rax ; call 0x478677
0x000000000047be6f : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047c072 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047bfc1 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041ba11 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x00000000004092ae : mov qword ptr [rsp + 8], rax ; call 0x405d17
0x0000000000440645 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000409a18 : mov qword ptr [rsp], rax ; call 0x405d16
0x000000000043f596 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x000000000046af76 : mov qword ptr [rsp], rax ; mov eax, 0x14 ; syscall
0x000000000043f5f6 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x000000000043f536 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x000000000043f7e6 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x000000000041ba16 : mov qword ptr [rsp], rcx ; call rdx
0x0000000000409222 : mov qword ptr [rsp], rdx ; call 0x405d16
0x000000000041821b : mov qword ptr fs:[r9], rdx ; mov rax, rdx ; ret
0x000000000044f8cd : mov qword ptr fs:[rdx], rax ; ret
0x000000000043298c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000004014c5 : mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000442960 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434e46 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x00000000004320f1 : mov r10d, 0x4f7f0ff3 ; retf -0x76b4
0x00000000004b8d5d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e2bdf
0x0000000000434ec6 : mov r11d, 0x46f00ff2 ; retf
0x0000000000431ef1 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040071e : mov r12, rax ; call 0x43e479
0x000000000044acac : mov r12, rsi ; jmp 0x44ac80
0x000000000046c047 : mov r12b, 0xe8 ; ret 0xfd34
0x0000000000440133 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047d6f6 : mov r13, r15 ; mov r15, rax ; jmp 0x47d714
0x0000000000440ad8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000487015 : mov r13d, esi ; jmp 0x486fe8
0x000000000049c719 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c71d : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046d908 : mov r15, rax ; jmp 0x46d8d4
0x000000000047d6f9 : mov r15, rax ; jmp 0x47d711
0x000000000043fad9 : mov r8b, 2 ; add bl, ch ; retf 0x4890
0x000000000047366c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000444d1a : mov r9, r14 ; call rbx
0x0000000000467197 : mov r9, r15 ; call rbx
0x00000000004125b0 : mov rax, -1 ; pop rbx ; ret
0x0000000000413622 : mov rax, -1 ; ret
0x000000000044fa80 : mov rax, 0xf ; syscall
0x00000000004668c0 : mov rax, 1 ; ret
0x00000000004668d0 : mov rax, 2 ; ret
0x00000000004668e0 : mov rax, 3 ; ret
0x00000000004668f0 : mov rax, 4 ; ret
0x0000000000466900 : mov rax, 5 ; ret
0x0000000000466910 : mov rax, 6 ; ret
0x0000000000466920 : mov rax, 7 ; ret
0x0000000000475fa4 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004156eb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000411662 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004158c7 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000415be7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487cf2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000415f0b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000465033 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047ebec : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478550 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044f8ee : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004556d1 : mov rax, qword ptr [rax*8 + 0x4b2f20] ; jmp rax
0x0000000000455722 : mov rax, qword ptr [rax*8 + 0x4b3020] ; jmp rax
0x0000000000457812 : mov rax, qword ptr [rax*8 + 0x4b3120] ; jmp rax
0x0000000000456345 : mov rax, qword ptr [rax*8 + 0x4b3420] ; jmp rax
0x0000000000460540 : mov rax, qword ptr [rax*8 + 0x4b38a0] ; jmp rax
0x0000000000461864 : mov rax, qword ptr [rax*8 + 0x4b39a0] ; jmp rax
0x0000000000461d48 : mov rax, qword ptr [rax*8 + 0x4b3aa0] ; jmp rax
0x00000000004605d6 : mov rax, qword ptr [rax*8 + 0x4b3da0] ; jmp rax
0x000000000049c415 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000440adb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004456e6 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471c50 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047b0b0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004396d0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0907 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0920 ; call rax
0x0000000000465030 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417230 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c420 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c4a0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c4e0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c540 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c530 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c4f0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044df0b : mov rax, qword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004784e0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4784f8 ; ret
0x0000000000416eee : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000416ee0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x416ee1 ; ret
0x0000000000474119 : mov rax, qword ptr [rip + 0x259730] ; ret
0x000000000044cdc0 : mov rax, qword ptr [rip + 0x280411] ; ret
0x0000000000445a50 : mov rax, qword ptr [rip + 0x288371] ; ret
0x0000000000417210 : mov rax, qword ptr [rip + 0x2b2ea9] ; ret
0x000000000049cd3b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049cd70 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049c515 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400d1f : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004476e9 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044804c : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e156 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000047896b : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x00000000004176e3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a49 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000452a43 : mov rax, r13 ; jmp 0x452a16
0x000000000041ce54 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041cad4 : mov rax, r8 ; pop rbx ; ret
0x0000000000432aa4 : mov rax, r8 ; ret
0x000000000046b284 : mov rax, r9 ; jne 0x46b2de ; ret
0x000000000046b305 : mov rax, r9 ; ret
0x0000000000413589 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004638d8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004638ab : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410045 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c649 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000413cfc : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474d67 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004101f8 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004102dd : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ff4d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041261a : mov rax, rbx ; pop rbx ; ret
0x000000000041c3c4 : mov rax, rcx ; ret
0x0000000000417240 : mov rax, rdi ; ret
0x000000000048801d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047b222 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041dc37 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047279e : mov rax, rdx ; call rax
0x000000000041e721 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004184f7 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043e5c7 : mov rax, rdx ; pop rbx ; ret
0x000000000041821f : mov rax, rdx ; ret
0x000000000046ab02 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487e47 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ec43 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000004524a3 : mov rax, rsi ; ret
0x000000000043ddfa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049c7b9 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041f8f1 : mov rbp, r13 ; call 0x42c355
0x0000000000478afc : mov rbp, r9 ; nop ; jmp rdx
0x0000000000440136 : mov rbp, rax ; call rax
0x0000000000473d25 : mov rbp, rax ; jmp 0x473cf8
0x00000000004770a9 : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440ee5 : mov rbx, rax ; call rax
0x0000000000448520 : mov rbx, rax ; jmp 0x4484f4
0x000000000044fdee : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000040f1ce : mov rbx, rdi ; syscall
0x000000000044f2e5 : mov rbx, rdi ; test rax, rax ; je 0x44f2f7 ; call rax
0x000000000046abd2 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000043b440 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478646 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004785d4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046d905 : mov rcx, r15 ; mov r15, rax ; jmp 0x46d8d7
0x0000000000432ac0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432ac3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473ff2 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x473fd9 ; ret
0x000000000044068f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e0dc : mov rdi, qword ptr [r13] ; call r14
0x0000000000440299 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000440206 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000440247 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000440642 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d37d : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047643d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000466a44 : mov rdi, qword ptr [rbp] ; call r12
0x00000000004403ce : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000476fc7 : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000044ef87 : mov rdi, qword ptr [rdi] ; syscall
0x0000000000464ff7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464fc5
0x00000000004473f0 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044bc39 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000447b64 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x000000000044888f : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x00000000004471f1 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447c18 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044b479 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000449a97 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000448e17 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004423cf : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049e049 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000044fdf1 : mov rdi, r12 ; call r15
0x0000000000440f0a : mov rdi, r12 ; call rbx
0x00000000004039a7 : mov rdi, r12 ; mov eax, 3 ; syscall
0x0000000000440030 : mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000403bcb : mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000412120 : mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000467194 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000004456e3 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000040e31b : mov rdi, r13 ; call r14
0x0000000000440f2f : mov rdi, r13 ; call rbx
0x000000000044f130 : mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000044f241 : mov rdi, r13 ; mov eax, r8d ; syscall
0x00000000004503b3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000044f20f : mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000441e03 : mov rdi, r14 ; call 0x41e085
0x000000000045a641 : mov rdi, r14 ; call 0x466935
0x000000000044563d : mov rdi, r14 ; call r15
0x0000000000440f53 : mov rdi, r14 ; call rbx
0x00000000004123a6 : mov rdi, r14 ; mov eax, r9d ; syscall
0x0000000000441dbe : mov rdi, r15 ; call 0x41e085
0x0000000000410fc4 : mov rdi, r15 ; call rax
0x0000000000440f73 : mov rdi, r15 ; call rbx
0x0000000000465353 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000400486 : mov rdi, r8 ; mov eax, 3 ; syscall
0x0000000000400466 : mov rdi, r8 ; mov eax, ebp ; syscall
0x000000000043ed70 : mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041af8b : mov rdi, r9 ; mov eax, 3 ; syscall
0x000000000041af5f : mov rdi, r9 ; mov eax, r8d ; syscall
0x0000000000473947 : mov rdi, rax ; call 0x400355
0x00000000004086f1 : mov rdi, rax ; call 0x41e089
0x0000000000421299 : mov rdi, rax ; call rcx
0x000000000041f8ee : mov rdi, rax ; mov rbp, r13 ; call 0x42c358
0x0000000000420637 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004422fd : mov rdi, rax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ef0b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000041c1af : mov rdi, rbp ; call 0x418c75
0x000000000044fe36 : mov rdi, rbp ; call r15
0x000000000041eb55 : mov rdi, rbp ; call rax
0x0000000000441412 : mov rdi, rbp ; call rbx
0x000000000043f880 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000041f516 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044cd76 : mov rdi, rbx ; call r12
0x0000000000444fec : mov rdi, rbx ; call r14
0x0000000000462bb8 : mov rdi, rbx ; call r8
0x0000000000412bd6 : mov rdi, rbx ; call rax
0x0000000000445bb0 : mov rdi, rbx ; jmp 0x445b7c
0x000000000049ec72 : mov rdi, rbx ; jne 0x49ec66 ; pop rbx ; ret
0x00000000004003d2 : mov rdi, rbx ; mov eax, 1 ; syscall
0x00000000004004a2 : mov rdi, rbx ; mov eax, r10d ; syscall
0x0000000000415753 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004158c3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000043ebc0 : mov rdi, rdx ; mov eax, esi ; syscall
0x000000000043ebd0 : mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000040fe32 : mov rdi, rsi ; call 0x49c8b5
0x000000000049c0a8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049de48 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047b090 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047b0a4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000431700 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004354e0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041e468 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000004589d3 : mov rdx, r12 ; call 0x4638f9
0x000000000047e4d0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e490 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044f20c : mov rdx, r9 ; mov rdi, r13 ; xor eax, eax ; syscall
0x00000000004183d3 : mov rdx, rax ; jmp 0x4183f2
0x000000000042132f : mov rdx, rax ; jmp 0x4212fc
0x0000000000469b55 : mov rdx, rax ; jmp 0x469b60
0x000000000046b4c4 : mov rdx, rax ; jmp 0x46b4bb
0x000000000044238e : mov rdx, rax ; mov eax, r12d ; syscall
0x00000000004503b6 : mov rdx, rbp ; call r15
0x000000000049ee9e : mov rdx, rbx ; jne 0x49ee97 ; pop rbx ; ret
0x0000000000413003 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416e88 : mov rdx, rcx ; jmp 0x416e6e
0x000000000049d652 : mov rdx, rcx ; jmp 0x49d62c
0x000000000046adb0 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x000000000046ae55 : mov rdx, rsp ; syscall
0x000000000049e04d : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049cbc7 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e0d9 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049cb78 : mov rsi, qword ptr [rbx] ; call r14
0x0000000000444d15 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450e80 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041eb50 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041e160 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000044f23e : mov rsi, r10 ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000047e4d3 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e493 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fe02 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044fe33 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420359 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041fb94 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000411fa8 : mov rsi, r13 ; call 0x41e245
0x00000000004123a3 : mov rsi, r13 ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000041f7ad : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049cab0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000467191 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000046eaf8 : mov rsi, r15 ; call 0x46b555
0x000000000040e318 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004530da : mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000403bc8 : mov rsi, r9 ; mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x0000000000413006 : mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000043ed6d : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000046aabb : mov rsi, rbp ; xor edx, edx ; jmp 0x46aa8b
0x000000000047afb5 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x2524e6] ; call rax
0x000000000044fe4e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000041211d : mov rsi, rbx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000421296 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000415798 : mov rsi, rcx ; jbe 0x41573e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049ca59 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000043f47b : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000043f4ca : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000046ad5b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000047481a : mov rsi, rsp ; syscall
0x0000000000478af9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c7bd : mov rsp, rcx ; ret
0x0000000000435975 : mov word ptr [r9 - 2], cx ; ret
0x0000000000442f49 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004268cd : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004674f0 : mov word ptr [rax], es ; dec al ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x000000000046554d : mov word ptr [rax], fs ; add al, bpl ; cli ; ret 0xfff9
0x00000000004c4af4 : mov word ptr [rbp], fs ; add byte ptr [rax], cl ; jg 0x4c4afb ; call rdx
0x00000000004c58f4 : mov word ptr [rbx], dr0 ; add byte ptr [rax + 0x12], bl ; cli ; jmp rdx
0x00000000004c6ef4 : mov word ptr [rcx - 0x1ec80000], cs ; cli ; jmp qword ptr [rdx]
0x000000000043bb6c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b4dc : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bc74 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b5c4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435717 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043ba38 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b418 : mov word ptr [rdi + 4], dx ; ret
0x000000000043ba8a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b45a : mov word ptr [rdi + 8], dx ; ret
0x00000000004329c2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000431c9c : mov word ptr [rdi - 2], cx ; ret
0x0000000000431ab4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431c98 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043b3e3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043dd75 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043571b : mov word ptr [rdi], cx ; ret
0x00000000004c1cf4 : mov word ptr [rdi], dr0 ; add byte ptr [rax], al ; or byte ptr [rbx - 0xa], cl ; jmp rbx
0x000000000043b9f3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000435783 : mov word ptr [rdi], dx ; ret
0x0000000000435972 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004329bf : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043af58 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439798 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000043af03 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439753 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004c1e52 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043dd78 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c7e48 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c7ef8 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044f9d4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000004329be : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000048ac6d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x000000000046997c : movabs al, byte ptr [0x3948f0894500263a] ; ret
0x0000000000418a4c : movabs al, byte ptr [0x3948fa0148002b1d] ; retf -0x7af1
0x00000000004c96b9 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c0e21 : movabs al, byte ptr [0x41380e0a01af0301] ; ret
0x0000000000446821 : movabs al, byte ptr [0x7b3d8b4c00000010] ; ret 6
0x000000000045d8c9 : movabs al, byte ptr [0x8348001f0f004b37] ; ret 0x481e
0x000000000045f069 : movabs al, byte ptr [0x840fc08548000000] ; retf 3
0x00000000004a38f0 : movabs al, byte ptr [0xc0fff8c970fff8c6] ; retf -8
0x000000000048f065 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x00000000004bc820 : movabs al, byte ptr [0xc800000000004bc3] ; ret
0x0000000000464ff3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x000000000045fb3b : movabs al, byte ptr [0xffef5485c7004b3d] ; jmp qword ptr [rax]
0x00000000004ba9a3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf -0x156f
0x0000000000400682 : movabs byte ptr [0xe015b60fe1751fa8], al ; retf 0x2c
0x00000000004ba601 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x000000000041a564 : movabs dword ptr [0x894c01e28300000a], eax ; retf
0x00000000004b8a47 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004b92fa : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x0000000000430222 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043021e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004302cc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b4b0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bd2d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b67d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004353ef : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043537f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043530f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043529f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bccd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b61d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043522f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bced : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b63d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004351bf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bd0d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b65d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004357df : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043576f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356ff : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043568f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043561f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355af : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043553f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354cf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043545f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042682c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x426849 ; ret
0x0000000000426845 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043494b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000004349bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bb44 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b4c4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b507 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4f7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b578 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b538 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b558 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b4d8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b679 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b619 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b639 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b659 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043516a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004351c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b4b1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bd2e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b67e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004353f0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435380 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435310 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352a0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bcce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b61e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435230 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bcee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b63e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004351c0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bd0e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b65e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004357e0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435770 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435700 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435690 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435620 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355b0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435540 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354d0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435460 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042682d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x426848 ; ret
0x0000000000426846 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043494c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000004349bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004350f7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435077 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fe7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f67 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ee7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e67 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434de7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d67 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ce7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c67 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434be7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b67 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ad7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a47 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004349b7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bb45 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b4c5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b518 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b508 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b579 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b539 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b559 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b4d9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b67a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b61a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b63a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b65a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043516b : movq qword ptr [rdi], mm0 ; ret
0x00000000004351c5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004bea0c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add al, al ; add bh, dh ; call rdi
0x00000000004c8a1d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; mov bh, 0xfc ; call qword ptr [rax]
0x00000000004b9722 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ba97d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4ba9d6 ; jmp 0x4ba917
0x0000000000432ac7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b8605 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004c7a0c : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, esp ; add byte ptr [rax], al ; and byte ptr [rsi], dh ; sti ; jmp qword ptr [rdx]
0x000000000047471c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000418257 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004c9758 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000004bac1d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004bafb5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ba871 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000479052 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004bdf0d : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rax
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; test eax, 0x415d002c ; pop rsp ; ret
0x00000000004b9301 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000491a43 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004919fd : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000477ab1 : movsx eax, dl ; neg eax ; ret
0x0000000000440078 : movsxd r10, r10d ; syscall
0x00000000004216b1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432d86 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042fd02 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000049bb99 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049b611 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x000000000049a0e9 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049b2b8 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000042e64d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b279 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000049a311 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000442574 : movsxd rdi, dword ptr [rbp - 0x58] ; mov eax, 3 ; syscall
0x0000000000442661 : movsxd rdi, dword ptr [rbp - 0x68] ; mov eax, 3 ; syscall
0x0000000000412da9 : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000004125c0 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x0000000000413606 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x0000000000413d6b : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000043eb62 : movsxd rdi, ebx ; mov eax, 0x3d ; syscall
0x000000000043f782 : movsxd rdi, ebx ; mov eax, 0x48 ; syscall
0x000000000044ce7a : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x000000000040dcb4 : movsxd rdi, ecx ; syscall
0x000000000043eb11 : movsxd rdi, edi ; mov eax, 0x3d ; syscall
0x000000000043f65a : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x000000000044fcf7 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x000000000044f7d8 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000044fb77 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000044f081 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x00000000004039f5 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x00000000004039f4 : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x000000000044f080 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000044f7d7 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000042fdcf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000413cb6 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x0000000000440079 : movsxd rdx, edx ; syscall
0x000000000043d25c : movsxd rsi, esi ; ret 0x7520
0x00000000004bea51 : movsxd rsi, esp ; call qword ptr [rax]
0x00000000004919fe : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491a44 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044fa5c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b15c : movzx eax, al ; neg eax ; ret
0x000000000047af06 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f717 : movzx eax, al ; ret
0x000000000041493c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004165d6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004127fd : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415aff : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000413a7a : movzx eax, byte ptr [rax] ; ret
0x000000000049d099 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000422a48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042e660 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262c0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422a63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041579d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000412810 : movzx eax, byte ptr [rdx] ; ret
0x000000000041493d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e4d7 : movzx eax, cl ; pop rbx ; ret
0x000000000043e4ff : movzx eax, dl ; pop rbx ; ret
0x000000000043d8ba : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d8b9 ; ret
0x000000000043d96a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d969 ; ret
0x000000000042f504 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000422a60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e663 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dc5f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dc47 ; ret
0x000000000042e531 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000422b8f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042e3c3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043d284 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043d2e4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043d2d4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d2c4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d2b4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d2a4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043d294 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435110 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f2b7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043d26b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004357f0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004262c3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004262e9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435090 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435780 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000466a41 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000402eb5 : movzx esp, byte ptr [rax + 0x4a6378] ; call 0x44f8e9
0x000000000046ae34 : movzx rax, al ; ret
0x000000000049e22b : mul byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000465b27 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000463407 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041738f : neg eax ; ret
0x000000000043f691 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004a3b7c : nop ; adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a3b8c : nop ; adc bh, cl ; call qword ptr [rax]
0x00000000004a3b9c : nop ; adc cl, bh ; call qword ptr [rax]
0x00000000004a3b94 : nop ; adc ecx, edi ; call qword ptr [rax]
0x00000000004a3b84 : nop ; adc edi, ecx ; call qword ptr [rax]
0x0000000000410e88 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000413e5c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043483b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047bd1e : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x00000000004630fb : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e96c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041b51a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000468306 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x00000000004bf30d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf325 ; ret
0x00000000004bf31b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043e71f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000444edf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042612f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004888bf : nop ; call rax
0x00000000004a34c0 : nop ; clc ; push qword ptr [rax] ; clc ; call rax
0x00000000004c8a81 : nop ; cld ; call qword ptr [rax]
0x00000000004a37ec : nop ; in al, dx ; clc ; jmp qword ptr [rax]
0x00000000004a38c8 : nop ; iretd ; clc ; jmp rax
0x00000000004a34e0 : nop ; jb 0x4a34e2 ; push qword ptr [rax] ; je 0x4a34e6 ; call rax
0x00000000004121d2 : nop ; jmp 0x4120dc
0x0000000000478aff : nop ; jmp rdx
0x0000000000400a7b : nop ; leave ; ret
0x00000000004bdf2c : nop ; mov bh, 0xfd ; call rax
0x00000000004318cf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431aaf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046adff : nop ; mov eax, 0x15 ; syscall
0x00000000004400ff : nop ; mov eax, 0x1c ; syscall
0x000000000046ad0f : nop ; mov eax, 0x66 ; syscall
0x00000000004400df : nop ; mov eax, 0xa ; syscall
0x00000000004429f4 : nop ; mov eax, 0xca ; syscall
0x000000000041783f : nop ; mov eax, 0xffffffff ; ret
0x0000000000410b1f : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046b07f : nop ; mov eax, edi ; ret
0x0000000000431e6f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043ba0f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000044295f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000004125af : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000041655f : nop ; mov rax, -1 ; ret
0x0000000000417d44 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044851f : nop ; mov rbx, rax ; jmp 0x4484f5
0x000000000044851e : nop ; mov rbx, rax ; jmp 0x4484f6
0x0000000000445baf : nop ; mov rdi, rbx ; jmp 0x445b7d
0x000000000041eb4f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043b4af : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004bdf0c : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rax
0x000000000044f07f : nop ; movsxd rdi, r14d ; mov eax, 3 ; syscall
0x0000000000462a1f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x4629ee
0x0000000000462a1e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x4629ef
0x00000000004935ad : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043dc4f : nop ; ret
0x0000000000411fac : nop ; ret 0
0x0000000000409a7c : nop ; ret 0xffff
0x00000000004c69f0 : nop ; retf
0x000000000047df5b : nop ; retf 0x4b
0x00000000004a391c : nop ; salc ; clc ; jmp rax
0x00000000004c2f90 : nop ; sbb al, 0xf8 ; call qword ptr [rax]
0x00000000004a3948 : nop ; sbb al, 0xf9 ; jmp qword ptr [rax]
0x00000000004a3b60 : nop ; sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004bdf1c : nop ; scasb al, byte ptr [rdi] ; std ; call rax
0x00000000004bdec4 : nop ; std ; jmp rax
0x0000000000416f2f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004262ef : nop ; xor eax, eax ; ret
0x00000000004261af : nop ; xor rax, rax ; ret
0x000000000047851b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047e37b : nop dword ptr [rax + rax] ; call rbx
0x000000000043b3eb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047ae83 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000041362b : nop dword ptr [rax + rax] ; ret
0x0000000000413deb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046688c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042037d : nop dword ptr [rax] ; call 0x41efc9
0x0000000000400be5 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047e1d9 : nop dword ptr [rax] ; call rax
0x000000000049a09d : nop dword ptr [rax] ; mov eax, 0x26 ; syscall
0x00000000004673cd : nop dword ptr [rax] ; mov eax, 0xc9 ; syscall
0x000000000041736c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000004115ad : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042c8e4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041e464 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041e824 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043e6bc : nop dword ptr [rax] ; pop rbx ; ret
0x00000000004063c5 : nop dword ptr [rax] ; ret
0x000000000049e6dd : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000041de5d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000411df4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047e37a : nop word ptr [rax + rax] ; call rbx
0x000000000041362a : nop word ptr [rax + rax] ; ret
0x0000000000413dea : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000444da1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000042a017 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046af42 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046aef1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041c3c0 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041caea : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000496e90 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496de9 : or al, 0 ; add byte ptr [rcx - 0x7d], cl ; jmp 0x496e09
0x000000000046aebf : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452d30 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000422a46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041cad2 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000041de59 : or al, 0x18 ; pop rbx ; ret
0x0000000000469b53 : or al, 0x20 ; mov rdx, rax ; jmp 0x469b62
0x000000000041ba18 : or al, 0x24 ; call rdx
0x00000000004441f1 : or al, 0x24 ; je 0x444205 ; mov edi, 0x6cb140 ; call rax
0x0000000000462a22 : or al, 0x40 ; jmp 0x4629eb
0x0000000000462a21 : or al, 0x40 ; jmp 0x4629ec
0x0000000000400cca : or al, 0x41 ; call rsp
0x000000000043eb82 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000445b0f : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004787f0 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400d1e : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000047466b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047b243 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047b71f : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x0000000000442c0a : or al, 0x5d ; pop r12 ; ret
0x000000000046276a : or al, 0x7e ; ret
0x0000000000462f5a : or al, 0x7e ; retf
0x0000000000462b53 : or al, 0x7e ; retf -0x48
0x000000000045d6e9 : or al, 0x83 ; ret
0x000000000045900c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004216b3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000429104 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432d88 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042fd04 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048a22b : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046b078 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042e64f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b27b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004bef74 : or al, 0xa ; add byte ptr [rax], al ; js 0x4bef7c ; hlt ; call qword ptr [rbx]
0x00000000004c9757 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000042fd08 : or al, 0xb ; jmp r9
0x000000000043b27f : or al, 0xb ; jmp rcx
0x000000000049a313 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x0000000000435313 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000426833 : or al, 0xf3 ; ret
0x0000000000462e8b : or al, 0xf6 ; ret 0xf04
0x000000000045d66c : or al, 0xf6 ; ret 0xf08
0x00000000004c7f0c : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000044fe61 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000422cdd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a221 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422d01 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004bef75 : or al, byte ptr [rax] ; add byte ptr [rax - 5], bh ; hlt ; call qword ptr [rbx]
0x000000000049c18e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004400e1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004bf045 : or al, byte ptr [rax] ; add byte ptr [rax], cl ; std ; hlt ; call qword ptr [rdx]
0x00000000004bf02d : or al, byte ptr [rax] ; add byte ptr [rax], dl ; std ; hlt ; call qword ptr [rax]
0x00000000004248e8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041a565 : or al, byte ptr [rax] ; add byte ptr [rbx - 0x76b3fe1e], al ; retf
0x0000000000408486 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x0000000000408d6c : or al, byte ptr [rbx - 0x7bf0fd07] ; retf
0x000000000047d7e0 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489d57 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c7073 : or al, byte ptr [rcx] ; ret
0x0000000000497097 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477739 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004092b2 : or al, ch ; pop rax ; retf -1
0x0000000000408f47 : or al, ch ; ret
0x000000000040c348 : or al, ch ; ret 0xff99
0x0000000000465618 : or al, ch ; ret 1
0x00000000004091c8 : or al, ch ; retf
0x000000000040ac40 : or al, ch ; retf -0x50
0x00000000004092c5 : or al, ch ; retf -1
0x0000000000443128 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000004c7149 : or bl, bh ; jmp rsi
0x00000000004354d3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044fd07 : or bl, dh ; ret
0x000000000040a4f5 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000415966 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472631 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000411037 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000047420f : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000439728 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e626 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e9f2 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000040b5e2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf -0x13
0x0000000000440b07 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000497272 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a2b3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049bb97 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004397e7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000046451f : or byte ptr [r9 - 0x77], r9b ; ret
0x000000000043fc0c : or byte ptr [rax + 0x101], bh ; syscall
0x000000000047b5f3 : or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x0000000000411038 : or byte ptr [rax + 0x29], cl ; ret
0x00000000004177bb : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472632 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000041cac7 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x0000000000417347 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x00000000004427b5 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041c289 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479435 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x0000000000470cf6 : or byte ptr [rax + 0x39], cl ; retf -0x7bf1
0x000000000047babf : or byte ptr [rax + 0x39], cl ; retf 0xf40
0x000000000041d7fa : or byte ptr [rax + 0x440f4802], ch ; retf -0x7cb8
0x00000000004c5fa2 : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c2894 : or byte ptr [rax + 0xb], cl ; ret
0x0000000000469776 : or byte ptr [rax + 0xf], cl ; retf -0x76b8
0x0000000000475bab : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403fdc : or byte ptr [rax + 1], cl ; ret
0x000000000041b5b7 : or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043fcc3 : or byte ptr [rax + 3], bh ; syscall
0x0000000000467edc : or byte ptr [rax - 0x39], cl ; ret
0x00000000004261cb : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x00000000004261df : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x00000000004194a3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000474118 : or byte ptr [rax - 0x75], cl ; add eax, 0x259730 ; ret
0x000000000049ebe3 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x7f] ; jmp rax
0x0000000000440641 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000409221 : or byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x405d17
0x0000000000409a28 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405d17
0x000000000040e0ba : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004092d3 : or byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405d18
0x000000000043972d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000474210 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043ff4c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041c634 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x000000000041ba15 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000439729 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041f515 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x00000000004184f6 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047e087 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472f60 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e9f3 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472f09 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000040e1e1 : or byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax + 0x29] ; retf -0x3eb8
0x0000000000472f5f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000040b5e3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf -0x13
0x000000000040b3b1 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf -9
0x0000000000471a96 : or byte ptr [rax - 0x7bf0ffc2], al ; retf 0xa
0x000000000041c285 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b0a9c
0x000000000041c284 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b0a9d
0x000000000041cd18 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044fe84 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000440a37 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042c976 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c9fe : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004632ee : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000004731c8 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c812 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000411938 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004bded0 : or byte ptr [rax - 3], 0xff ; ror byte ptr [rdx - 3], 1 ; jmp qword ptr [rax]
0x00000000004110ed : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000422f3c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a76c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004183e4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004183a5 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000422f3d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422f61 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041a76d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004160ec : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000417c06 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049ccd2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000444d61 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044fb72 : or byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000043e580 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049e886 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000442941 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000424a68 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040a4f6 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000489890 : or byte ptr [rax], al ; jne 0x489861 ; jmp 0x489869
0x00000000004425c1 : or byte ptr [rax], al ; mov edi, 0x4a4ddd ; mov eax, ebx ; syscall
0x00000000004425f0 : or byte ptr [rax], al ; mov edi, 0x4a4de8 ; mov eax, ebx ; syscall
0x000000000044f733 : or byte ptr [rax], al ; mov edi, 0x4a6d20 ; mov eax, ecx ; syscall
0x000000000044f12e : or byte ptr [rax], al ; mov rdi, r13 ; mov eax, r15d ; syscall
0x00000000004bcf81 : or byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000042ba7e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049da70 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000478ddc : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e2b9 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000448148 : or byte ptr [rbp - 0x161c8637], al ; retf
0x000000000048a0b3 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000047415c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x00000000004c01c8 : or byte ptr [rbp - 0xb], dl ; jmp qword ptr [rcx]
0x0000000000475e2d : or byte ptr [rbx + 0x394401c2], al ; retf -0x7cf1
0x000000000041dce0 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000405a63 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004018f5 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004135ba : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049cc56 : or byte ptr [rbx + 0x634801eb], al ; ret
0x0000000000462a20 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x4629ed
0x00000000004c1327 : or byte ptr [rbx + 0xe], ch ; adc byte ptr [rbx + 0xa9b0202], al ; ret
0x000000000041de1e : or byte ptr [rbx + 0xf4802e6], al ; retf -0x7cb8
0x00000000004c1332 : or byte ptr [rbx + rcx + 0x43], al ; ret
0x00000000004c7593 : or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x0000000000457cd7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040fd51 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000004c1cf8 : or byte ptr [rbx - 0xa], cl ; jmp rbx
0x000000000047d7cf : or byte ptr [rbx - 0xaf4b], cl ; dec dword ptr [rax - 0x77] ; retf 0x1b8
0x0000000000442ad4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000470e19 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000047a62b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000046a2b4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c659 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f5ca : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049bb98 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c7f0e : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c0d47 : or byte ptr [rcx + 0xb], al ; ret
0x00000000004622ab : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048013b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004796d0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000400485 : or byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x000000000040e317 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a632 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049cb73 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x000000000041231a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004397e8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000457628 : or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf -2
0x0000000000464520 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489c12 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041d759 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e20a : or byte ptr [rcx - 0x7d], cl ; ret
0x0000000000450103 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000448d69 : or byte ptr [rcx - 0xa], al ; ret
0x000000000045b531 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049d776 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cf9f : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x0000000000442cee : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000451e50 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000418533 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bb23e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004712d7 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470ef1 : or byte ptr [rdi + 0x6cb100], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000478381 : or byte ptr [rdi + 0x6cb140], bh ; call rax
0x000000000040364b : or byte ptr [rdi + 0x6cc0a0], bh ; call r15
0x00000000004bfd6b : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c515c : or byte ptr [rdi + 0xb], al ; jae 0x4c5170 ; ret
0x00000000004822d8 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004c4af8 : or byte ptr [rdi - 7], bh ; call rdx
0x000000000047192f : or byte ptr [rdi], 0x84 ; retf 3
0x000000000044a0f3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044d339 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000415afe : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000004628e1 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000488059 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000040f716 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000415967 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049cb26 : or byte ptr [rdi], cl ; ret 0xfc3
0x00000000004302cb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044dfc4 : or byte ptr [rdi], cl ; test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455e16 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049cb25 : or byte ptr [rdi], r9b ; ret 0xfc3
0x0000000000486fd3 : or byte ptr [rsi + 1], bh ; jmp 0x486fac
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000476a46 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004bf048 : or ch, bh ; hlt ; call qword ptr [rdx]
0x0000000000419d8f : or ch, byte ptr [rbx] ; add byte ptr [rcx - 0x44], al ; retf
0x000000000047b3a7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044cec0 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x00000000004127ee : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000413037 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000464fbf : or cl, byte ptr [rax - 0x77] ; ret
0x00000000004105cc : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042548a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452997 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000004bce91 : or cl, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000049d38c : or cl, byte ptr [rbp + 0x39] ; retf -0x2489
0x000000000048a1f3 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463f97 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000048a0b9 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004bcf70 : or cl, byte ptr ss:[rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000408188 : or cl, ch ; ret
0x0000000000462cf2 : or cl, ch ; ret 0xfffc
0x0000000000407f88 : or cl, ch ; retf
0x000000000045762c : or cl, ch ; retf -2
0x00000000004882e5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004c1848 : or cl, dh ; cmc ; call qword ptr [rdx]
0x00000000004bac22 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004353f3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049e265 : or dh, bl ; ret
0x00000000004baa4a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000047e377 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041be63 : or dh, dh ; ret 0x7404
0x000000000041bdde : or dh, dh ; ret 0xf04
0x00000000004028ce : or dh, dh ; ret 0xfdf
0x000000000040db97 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x000000000040227a : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047643c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x000000000042391e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000422e6d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b92f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000410c4f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000440074 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x0000000000440034 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004937fe : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004970e9 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; jmp 0x497109
0x00000000004b2c57 : or dword ptr [rax], ecx ; retf
0x00000000004ba393 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000048a1d3 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042fa86 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412e30 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000478f2c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041fe66 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000042004c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000401734 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000478866 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000048f7dd : or dword ptr [rdi], ecx ; xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000048dca4 : or dword ptr [rdi], ecx ; xchg esp, ebx ; jmp 0x48dcb1
0x000000000048aa6c : or dword ptr [rdi], ecx ; xchg esp, esi ; jmp 0x48aa79
0x00000000004babee : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x0000000000474a79 : or dword ptr [rip + 0x2566f0], 1 ; pop rbx ; ret
0x000000000049718f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c7070 : or eax, 0x10a0303 ; ret
0x00000000004c7120 : or eax, 0x1370303 ; ret
0x00000000004a3cb1 : or eax, 0x1554fff9 ; stc ; call rsp
0x00000000004a3b71 : or eax, 0x15a0fff9 ; stc ; jmp qword ptr [rax]
0x000000000043bcd1 : or eax, 0x1c478d48 ; ret
0x00000000004162a2 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c7060 : or eax, 0x34b0303 ; ret
0x00000000004c70c0 : or eax, 0x35b0303 ; ret
0x00000000004622da : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004629e2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000004bce99 : or eax, 0x48 ; add byte ptr [rax], al ; retf
0x000000000042cf52 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000044066f : or eax, 0x49fffdda ; mov edi, dword ptr [rbp] ; call rbx
0x000000000048a247 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429e77 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429ee1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a111d : or eax, 0x834825eb ; ret 0x4810
0x00000000004245e8 : or eax, 0x894d0000 ; retf
0x00000000004743c8 : or eax, 0xbe000002 ; retf 0x4b60
0x00000000004b8a41 : or eax, 0xcad7947e ; jmp 0x4b89ed
0x00000000004ae379 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ae385 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004babd3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x00000000004ba873 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000440f6e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000004352a3 : or eax, 0xf7f0ff3 ; ret
0x000000000044470c : or eax, 0xffffffff ; ret
0x00000000004c7f0f : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004bf0f5 : or eax, dword ptr [rax] ; add al, cl ; add ch, dh ; call rdi
0x000000000045e30f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422c0d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a081 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c31 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004400c1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000424768 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041a4fe : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000044d7b4 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c7f10 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c46a3 : or eax, dword ptr [rdx] ; retf
0x00000000004c7595 : or eax, dword ptr [rdx] ; retf 0xe0a
0x00000000004c93d9 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045e30e : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a3718 : or eax, edx ; clc ; lcall ptr [rbx + 0x2bfff8c2] ; ret
0x000000000043f42e : or ebp, 0x52 ; add byte ptr [rax], al ; ret
0x0000000000416f24 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004c979f : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000435463 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047a89e : or ebx, esi ; ret
0x000000000041d55a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004195f4 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000004102dc : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000447f05 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a20f : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c5126 : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042c964 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c515e : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004bf318 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435383 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000412e31 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004354d2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435462 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353f2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c515d : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435382 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c93d8 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x00000000004c7594 : or r8d, dword ptr [rdx] ; retf 0xe0a
0x000000000042c963 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044cebf : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462cf1 : or r9b, r13b ; ret 0xfffc
0x00000000004c5125 : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c711f : or rax, 0x1370303 ; ret
0x00000000004c705f : or rax, 0x34b0303 ; ret
0x00000000004c70bf : or rax, 0x35b0303 ; ret
0x00000000004622d9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004629e1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000044470b : or rax, 0xffffffffffffffff ; ret
0x0000000000496f72 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c46a2 : or rax, qword ptr [rdx] ; retf
0x000000000049e558 : out -0x18, eax ; ret 0xffe7
0x000000000049d5af : out -0x18, eax ; retf
0x00000000004179e0 : out -0x18, eax ; sbb dl, byte ptr [rbx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000440295 : out -0x23, eax ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4402a5 ; call rbx
0x00000000004be424 : out -0x2b, eax ; std ; jmp rax
0x00000000004b9720 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004039a9 : out -0x48, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000440032 : out -0x48, eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000040335b : out -0x77, eax ; ret 0x8948
0x00000000004bb448 : out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000434cea : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a38a5 : out -8, eax ; call qword ptr [rax]
0x00000000004a3845 : out -8, eax ; jmp rax
0x0000000000469705 : out 0x3c, eax ; add byte ptr es:[rax + 0xf], cl ; retf -0x76b8
0x000000000044fdf3 : out 0x41, eax ; call rdi
0x0000000000412122 : out 0x44, eax ; mov eax, ecx ; syscall
0x0000000000403bcd : out 0x44, eax ; mov eax, edx ; syscall
0x0000000000475b59 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044fe04 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000420636 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fe35 : out 0x48, al ; mov edi, ebp ; call r15
0x00000000004456e5 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000467196 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041fb96 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x00000000004165f3 : out 0x5b, al ; ret
0x00000000004735ba : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042035b : out 0x5d, al ; pop r12 ; jmp rax
0x00000000004ba460 : out 0x78, al ; jnp 0x4ba4c2 ; retf
0x000000000047e4d5 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e495 : out 0x89, al ; out dx, eax ; call rax
0x00000000004b89f1 : out 0xb3, al ; retf 0xe80
0x000000000041cf50 : out 0xf, al ; xchg byte ptr [rcx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000434c6a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a3821 : out 0xf8, al ; jmp qword ptr [rax]
0x00000000004a37a1 : out 0xf8, al ; jmp rax
0x00000000004105a4 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000049e881 : out 2, al ; jne 0x49e894 ; mov eax, 8 ; ret
0x000000000042c7d9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000400ad1 : out dx, al ; add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x000000000041d55d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000411faa : out dx, al ; call 0x41e243
0x00000000004009a9 : out dx, al ; call rax
0x00000000004ba877 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000413008 : out dx, al ; mov eax, r13d ; syscall
0x000000000043191a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049c414 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000044002f : out dx, al ; mov rdi, r12 ; mov eax, 9 ; syscall
0x00000000004123a5 : out dx, al ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043ed6f : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f7af : out dx, al ; mov rdi, rbx ; call rax
0x000000000043507a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043eb60 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x3d ; syscall
0x000000000042b7de : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004babd2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x00000000004ba45f : out dx, al ; out 0x78, al ; jnp 0x4ba4c3 ; retf
0x0000000000400e82 : out dx, al ; ret 0x2c
0x000000000046aabd : out dx, al ; xor edx, edx ; jmp 0x46aa89
0x000000000041e635 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004195f7 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049ef0d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000041c1b1 : out dx, eax ; call 0x418c73
0x000000000047e4d7 : out dx, eax ; call qword ptr [rbx]
0x000000000040e31d : out dx, eax ; call r14
0x000000000044fe38 : out dx, eax ; call r15
0x000000000041eb57 : out dx, eax ; call rax
0x0000000000440f31 : out dx, eax ; call rbx
0x00000000004bb4c5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000043f882 : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000044f132 : out dx, eax ; mov eax, r15d ; syscall
0x000000000044f243 : out dx, eax ; mov eax, r8d ; syscall
0x000000000044218d : out dx, eax ; mov esi, 0x8b49fffd ; call rbx
0x000000000043174a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431846 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431792 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004503b5 : out dx, eax ; mov rdx, rbp ; call r15
0x00000000004350fa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b8dd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f518 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041659e : out dx, eax ; pop rbx ; ret
0x000000000042ead3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaab
0x000000000042eb51 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb29
0x000000000042efe3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efbb
0x000000000042f061 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f039
0x000000000042e6d3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e6e8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e6fd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043da03 : out dx, eax ; ret 0xf66
0x0000000000409a1d : out dx, eax ; ret 0xffff
0x00000000004bab9b : out dx, eax ; retf -0x54f3
0x000000000043d9e6 : out dx, eax ; retf 0x4466
0x0000000000441e8d : out dx, eax ; sar ebp, -1 ; mov rdi, qword ptr [r13] ; call rbx
0x000000000042165a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042fbec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbbe : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044f211 : out dx, eax ; xor eax, eax ; syscall
0x00000000004297ee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043be2e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004c09b9 : outsb dx, byte ptr [rsi] ; cmc ; call qword ptr [rsi]
0x00000000004bb023 : outsb dx, byte ptr [rsi] ; ja 0x4bafac ; ret 0x48f
0x0000000000409a9e : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b9a52 : outsb dx, byte ptr [rsi] ; retf
0x00000000004b8d64 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004ba398 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000426c9a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004c5555 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; sub dh, bh ; stc ; call rsi
0x00000000004c0aa1 : outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rdx]
0x00000000004c0ab9 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rax]
0x0000000000421808 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272be : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000431ed2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000004320d2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x000000000042f9ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042fa8d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042f5b2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042f632 : outsd dx, dword ptr [rsi] ; push rdi ; retf -0x354e
0x0000000000465b2a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f9f2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b9726 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000432087 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042fa92 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000465b7a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000491975 : outsd dx, dword ptr [rsi] ; ret 2
0x0000000000431f52 : outsd dx, dword ptr [rsi] ; retf
0x0000000000432152 : outsd dx, dword ptr [rsi] ; retf -0x74b4
0x0000000000429199 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000042efda : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042eaca : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004bde55 : outsd dx, dword ptr [rsi] ; std ; inc dword ptr [rax + 0x71] ; std ; jmp qword ptr [rax]
0x00000000004b9725 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000422b02 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000466884 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000046686f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000422b01 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004bab25 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004bab26 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000042aece : pi2fd mm6, qword ptr [rsi - 0x72b7f1ec] ; retf 7
0x00000000004239af : pmovmskb edx, mm4 ; test edx, edx ; je 0x4239c3 ; bsf eax, edx ; ret
0x0000000000442a05 : pop r10 ; ret
0x00000000004bafaf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041e82a : pop r12 ; jmp rax
0x000000000042063c : pop r12 ; jmp rcx
0x000000000044017f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440199 : pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735bd : pop r12 ; pop r13 ; jmp rax
0x000000000048f00c : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ef8a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044194b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004021c3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040159f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004016c2 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fb95 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000405a66 : pop r12 ; pop r13 ; ret
0x000000000047b64c : pop r12 ; pop r14 ; ret
0x000000000046b421 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x00000000004735bf : pop r13 ; jmp rax
0x000000000048f00e : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ef8c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044194d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004021c5 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015a1 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004016c4 : pop r13 ; pop r14 ; ret
0x000000000040fb97 : pop r13 ; pop rbp ; ret
0x0000000000405a68 : pop r13 ; ret
0x000000000048f010 : pop r14 ; fmul st(0) ; ret
0x000000000048ef8e : pop r14 ; fmulp st(1) ; ret
0x000000000044194f : pop r14 ; pop r15 ; jmp rax
0x00000000004021c7 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015a3 : pop r14 ; pop r15 ; ret
0x00000000004016c6 : pop r14 ; ret
0x0000000000441951 : pop r15 ; jmp rax
0x00000000004021c9 : pop r15 ; pop rbp ; ret
0x00000000004015a5 : pop r15 ; ret
0x0000000000419141 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004c58f8 : pop rax ; adc bh, dl ; jmp rdx
0x000000000042678b : pop rax ; add r11b, sil ; ret
0x00000000004750ee : pop rax ; enter 0x4b, -0x7d ; ret
0x0000000000419142 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004bcf38 : pop rax ; or cl, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004786d6 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004bc708 : pop rax ; ret 0x4b
0x0000000000409ab4 : pop rax ; ret 0xffff
0x00000000004baf03 : pop rax ; retf
0x00000000004092b4 : pop rax ; retf -1
0x0000000000454df4 : pop rax ; retf -6
0x00000000004793ca : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00000000004ba9a5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000041dce2 : pop rbp ; jmp rax
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000419562 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x00000000004b9300 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000041e829 : pop rbp ; pop r12 ; jmp rax
0x000000000042063b : pop rbp ; pop r12 ; jmp rcx
0x000000000044017e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440198 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735bc : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048f00b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ef89 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044194a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040159e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004016c1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405a65 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b64b : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048f00f : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048ef8d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000044194e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004021c6 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015a2 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004016c5 : pop rbp ; pop r14 ; ret
0x000000000040fb98 : pop rbp ; pop rbp ; ret
0x000000000047a638 : pop rbp ; pop rbx ; ret
0x00000000004004d1 : pop rbp ; ret
0x0000000000400eff : pop rbp ; ret 0x2c
0x00000000004793d2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004135bc : pop rbp ; sub rax, rdx ; ret
0x0000000000446e6a : pop rbx ; add byte ptr [rax - 0x7f], cl ; ret 0x5b80
0x00000000004c7efe : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b82f8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047457c : pop rbx ; and eax, 0x3d8b4800 ; ret 0x2592
0x000000000043e52c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043e55f : pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000442c07 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000004c0399 : pop rbx ; cmc ; call qword ptr [rcx]
0x00000000004b82f6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000487cfa : pop rbx ; jmp rax
0x0000000000411aee : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000474a97 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043e5c3 : pop rbx ; mov eax, eax ; ret
0x000000000046320a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a86e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000476a2e : pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000415756 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004158c6 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004638d7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420358 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040fb94 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b420 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041dce1 : pop rbx ; pop rbp ; jmp rax
0x000000000041e828 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000042063a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044017d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440197 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735bb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004016c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405a64 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b64a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x00000000004135bb : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400de5 : pop rbx ; ret
0x00000000004bb5e0 : pop rbx ; ret 0x6f9
0x00000000004b8abd : pop rbx ; retf
0x0000000000466ce9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000440a4a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047ae78 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x252623] ; jmp rax
0x0000000000473516 : pop rcx ; add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c4475
0x0000000000491ce4 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bd2b0 : pop rcx ; and cl, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a3569 : pop rcx ; clc ; jmp rax
0x0000000000474859 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x0000000000488f4f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004302c8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042bf6d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431ce9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431af9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba89e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000441952 : pop rdi ; jmp rax
0x00000000004b9861 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049e3fe : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000431919 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431749 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431845 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431791 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004021ca : pop rdi ; pop rbp ; ret
0x00000000004015a6 : pop rdi ; ret
0x0000000000469d8d : pop rdi ; retf
0x00000000004bdef9 : pop rdi ; std ; jmp qword ptr [rax - 0x2f0002c3]
0x000000000043ec10 : pop rdx ; add byte ptr [rax], al ; ret
0x00000000004ba481 : pop rdx ; je 0x4ba44b ; ret 0xacfc
0x00000000004ba593 : pop rdx ; leave ; retf
0x00000000004bb447 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000442a04 : pop rdx ; pop r10 ; ret
0x00000000004786d7 : pop rdx ; pop rbx ; ret
0x0000000000442a29 : pop rdx ; pop rsi ; ret
0x0000000000442a06 : pop rdx ; ret
0x0000000000414b12 : pop rdx ; retf
0x0000000000441f22 : pop rdx ; sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x000000000041e122 : pop rdx ; shr byte ptr [rdx], 1 ; add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x00000000004bafb0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000444529 : pop rdx ; sub byte ptr [rax], al ; pop rbx ; ret
0x000000000042ead4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaaa
0x000000000042eb52 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb28
0x000000000042efe4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efba
0x000000000042f062 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f038
0x0000000000469a4e : pop rsi ; adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042be6e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000473a93 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004261ec : pop rsi ; add dword ptr [rax], eax ; ret
0x000000000048f011 : pop rsi ; fmul st(0) ; ret
0x000000000048ef8f : pop rsi ; fmulp st(1) ; ret
0x000000000042c975 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441950 : pop rsi ; pop r15 ; jmp rax
0x00000000004021c8 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004015a4 : pop rsi ; pop r15 ; ret
0x00000000004016c7 : pop rsi ; ret
0x0000000000429a00 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a700 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047c074 : pop rsp ; and al, 0x78 ; call r12
0x000000000041e82b : pop rsp ; jmp rax
0x000000000042063d : pop rsp ; jmp rcx
0x0000000000440180 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000044019a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000422f60 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004735be : pop rsp ; pop r13 ; jmp rax
0x000000000048f00d : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ef8b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044194c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004021c4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004015a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004016c3 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040fb96 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000405a67 : pop rsp ; pop r13 ; ret
0x000000000047b64d : pop rsp ; pop r14 ; ret
0x000000000046b422 : pop rsp ; pop rbp ; ret
0x000000000040060b : pop rsp ; ret
0x000000000047a519 : pop rsp ; retf 0x4df0
0x00000000004c01c4 : pop rsp ; sbb al, 0 ; add byte ptr [rax], cl ; push rbp ; cmc ; jmp qword ptr [rcx]
0x00000000004ba607 : pop rsp ; sbb ebp, ebx ; retf
0x00000000004c79c4 : pop rsp ; xchg eax, esp ; add byte ptr [rax], al ; clc ; mov esi, ebx ; jmp qword ptr [rsi]
0x00000000004ba58c : popfq ; jrcxz 0x4ba551 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000491847 : popfq ; ret
0x000000000049b9b9 : popfq ; ret 0xf45
0x000000000047ed45 : popfq ; retf
0x00000000004bb342 : popfq ; retf -0x21b1
0x0000000000494570 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045fc19 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000046a08f : popfq ; xor esp, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004351c2 : psllq mm1, qword ptr [r15] ; jg 0x4351dd ; ret
0x00000000004351c3 : psllq mm1, qword ptr [rdi] ; jg 0x4351dc ; ret
0x000000000043b4f6 : psllq mm1, qword ptr [rdi] ; jg 0x43b50a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b4f5 : psllq mm1, qword ptr [rdi] ; jg 0x43b50b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b557 : psllq mm1, qword ptr [rdi] ; jg 0x43b56c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004a3c21 : psubw mm7, mm7 ; push rdx ; psubw mm7, mm7 ; ret 0xf90e
0x00000000004a3c25 : psubw mm7, mm7 ; ret 0xf90e
0x00000000004bab95 : push -0x57d3205 ; call 0xffffffffab597695
0x0000000000452e9f : push -0x76000005 ; ret 0x8941
0x000000000047bf2e : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000048115f : push -0x7c000006 ; ret 0x8908
0x000000000044e744 : push -0x7c00048d ; clc ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000485c7a : push -0x9000007 ; ret 0xf02
0x000000000043be14 : push -0x9ffffff ; ret 0x7501
0x00000000004c4f75 : push 0 ; add byte ptr [rax - 0x16], cl ; stc ; call qword ptr [rsi]
0x00000000004ba395 : push 0x1b6e41b5 ; std ; retf
0x000000000049c308 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041f7ac : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004434e0 : push 0x4b ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004a34c9 : push 0x6a70fff8 ; clc ; call qword ptr [rax]
0x00000000004bb022 : push 0x6e ; ja 0x4bafad ; ret 0x48f
0x0000000000416366 : push 0x74c98548 ; sub dword ptr [rax + 0x39], ecx ; retf
0x00000000004b8ba1 : push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004b89ee : push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004b9364 : push 0xd0 ; retf -0x18d2
0x00000000004c0869 : push 0xf5 ; jmp qword ptr [rax]
0x00000000004a34cd : push 0xf8 ; call qword ptr [rax]
0x00000000004ba902 : push 0xfd4cbe ; retf 0xf64
0x0000000000485b0c : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a7b1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004a3b67 : push qword ptr [rax + 0x40fff918] ; sbb cl, bh ; jmp rax
0x00000000004a394f : push qword ptr [rax + 0x40fff91b] ; sbb edi, ecx ; call rax
0x00000000004bdedb : push qword ptr [rax + 0x4f] ; std ; inc eax ; push rcx ; std ; call qword ptr [rax]
0x00000000004a34cb : push qword ptr [rax + 0x6a] ; clc ; call qword ptr [rax]
0x00000000004a37af : push qword ptr [rax - 0x21] ; clc ; push qword ptr [rax] ; loope 0x4a37b7 ; call qword ptr [rax]
0x00000000004a384f : push qword ptr [rax - 0x22] ; clc ; push qword ptr [rax] ; loopne 0x4a3857 ; call qword ptr [rax]
0x00000000004a38df : push qword ptr [rax - 0x29] ; clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x00000000004a38f3 : push qword ptr [rax - 0x37] ; clc ; inc eax ; retf -8
0x00000000004bdfb3 : push qword ptr [rax - 0x38] ; std ; jmp rax
0x00000000004a3e87 : push qword ptr [rax - 0x3f00068b] ; jne 0x4a3e90 ; call rax
0x00000000004a3543 : push qword ptr [rax - 0x3f0007ba] ; clc ; call rax
0x00000000004a351b : push qword ptr [rax - 0x78] ; clc ; inc eax ; mov eax, edi ; call qword ptr [rax]
0x00000000004a3d73 : push qword ptr [rax] ; adc eax, 0x14b0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a34c3 : push qword ptr [rax] ; clc ; call rax
0x00000000004a383b : push qword ptr [rax] ; in al, -8 ; call qword ptr [rax]
0x00000000004a34e3 : push qword ptr [rax] ; je 0x4a34e3 ; call rax
0x00000000004a3797 : push qword ptr [rax] ; jrcxz 0x4a3797 ; call qword ptr [rax]
0x00000000004a37b3 : push qword ptr [rax] ; loope 0x4a37b3 ; call qword ptr [rax]
0x00000000004a3853 : push qword ptr [rax] ; loopne 0x4a3853 ; call qword ptr [rax]
0x00000000004a3563 : push qword ptr [rax] ; push rdi ; clc ; inc dword ptr [rax + 0x59] ; clc ; jmp rax
0x00000000004a33d3 : push qword ptr [rax] ; push rdi ; inc dword ptr [rax] ; add al, bh ; call rax
0x00000000004bdf4b : push qword ptr [rax] ; ret 0xfffd
0x000000000043d798 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000041164b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000004765ae : push qword ptr [rbp + rax - 0x18] ; retf -0x586
0x0000000000415f4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464b75 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000464b1d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000004165f1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442d72 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000416599 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000466e3a : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004a3693 : push qword ptr [rcx + 0x41fff8c1] ; ret 0xfff8
0x0000000000411b21 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000474989 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a7b2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dcbd : push qword ptr [rdi + 0x20] ; ret
0x000000000043f668 : push qword ptr [rdi + 0x35] ; ret
0x000000000043f70c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043f48a : push qword ptr [rdi + 3] ; ret
0x000000000043f4d9 : push qword ptr [rdi + 4] ; ret
0x000000000043eb1f : push qword ptr [rdi + 6] ; ret
0x000000000044fd05 : push qword ptr [rdi + 8] ; ret
0x000000000046a9dc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415a76 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004be067 : push qword ptr [rdi + rdx*8] ; std ; jmp rsp
0x00000000004a36db : push qword ptr [rsi + 0x46fff8c2] ; ret
0x00000000004a3997 : push qword ptr [rsi + 0x46fff91a] ; sbb bh, cl ; call rsi
0x000000000046ac8d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a36e7 : push qword ptr [rsi - 0x3c] ; clc ; call qword ptr [rsi]
0x00000000004a3ac3 : push qword ptr [rsp + rbx + 0x1c44fff9] ; stc ; call rsp
0x00000000004156af : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b8a4c : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000463c4a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416f31 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041b520 : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000493eed : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004156b0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f61d : push rax ; add byte ptr [rax], al ; ret
0x0000000000425e05 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000488557 : push rax ; and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000045d64b : push rax ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x0000000000444da8 : push rax ; call rbx
0x00000000004a3553 : push rax ; clc ; inc dword ptr [rax] ; push rcx ; clc ; call qword ptr [rax]
0x00000000004105a6 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004a37bb : push rax ; in al, -8 ; call rax
0x00000000004a3f63 : push rax ; jge 0x4a3f64 ; call qword ptr [rax]
0x00000000004a3f43 : push rax ; jl 0x4a3f44 ; call qword ptr [rax]
0x00000000004785dc : push rax ; jmp qword ptr [rax]
0x000000000049cd63 : push rax ; jne 0x49cd5c ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cdc3 : push rax ; jne 0x49cdbc ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a3e97 : push rax ; jne 0x4a3e9c ; inc dword ptr [rax] ; jbe 0x4a3ea0 ; call qword ptr [rax]
0x00000000004a3f1f : push rax ; jnp 0x4a3f20 ; call qword ptr [rax]
0x00000000004a3eef : push rax ; jp 0x4a3ef4 ; inc dword ptr [rax] ; jnp 0x4a3ef8 ; call qword ptr [rax]
0x00000000004a385b : push rax ; jrcxz 0x4a385b ; call rax
0x00000000004a389c : push rax ; jrcxz 0x4a389e ; inc dword ptr [rax - 0x1b] ; clc ; call qword ptr [rax]
0x00000000004c4d30 : push rax ; jrcxz 0x4c4d2f ; jmp rax
0x00000000004bdf18 : push rax ; lodsb al, byte ptr [rsi] ; std ; call qword ptr [rax - 0x2f000252]
0x00000000004b8aba : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004a37d7 : push rax ; loop 0x4a37d7 ; call rax
0x00000000004a3838 : push rax ; loop 0x4a383a ; push qword ptr [rax] ; in al, -8 ; call qword ptr [rax]
0x00000000004a3794 : push rax ; loope 0x4a3796 ; push qword ptr [rax] ; jrcxz 0x4a379a ; call qword ptr [rax]
0x00000000004c8a20 : push rax ; mov bh, 0xfc ; call qword ptr [rax]
0x00000000004bdf28 : push rax ; mov ch, 0xfd ; call qword ptr [rax - 0x2f000249]
0x0000000000446e7a : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000416e83 : push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416e73
0x0000000000488176 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044bc38 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004bea50 : push rax ; movsxd rsi, esp ; call qword ptr [rax]
0x00000000004194a2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000457627 : push rax ; or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf -2
0x000000000041be62 : push rax ; or dh, dh ; ret 0x7404
0x000000000041bddd : push rax ; or dh, dh ; ret 0xf04
0x0000000000422e6c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3820 : push rax ; out 0xf8, al ; jmp qword ptr [rax]
0x00000000004a379f : push rax ; out 0xf8, al ; jmp rax
0x0000000000466a4e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446e7c : push rax ; push rsp ; ret
0x00000000004c22b0 : push rax ; ret
0x00000000004bdf64 : push rax ; ret 0xfffd
0x000000000047e1e8 : push rax ; retf
0x000000000046eafc : push rax ; retf -1
0x00000000004a38b8 : push rax ; retf -8
0x0000000000457e0b : push rax ; rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x00000000004a3757 : push rax ; sar eax, -1 ; add dl, 0xf8 ; call qword ptr [rax]
0x0000000000410e12 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf -0x428b
0x0000000000416f26 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000464bea : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a3b37 : push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x00000000004a3b50 : push rax ; sbb edi, ecx ; jmp rax
0x00000000004bde43 : push rax ; std ; call rax
0x00000000004bfb70 : push rax ; xor al, 0xf5 ; call qword ptr [rax]
0x00000000004165ed : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004b8a4d : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000049ef17 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000479b2f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000440891 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000467e97 : push rbp ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467e0b : push rbp ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00000000004748c8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000488763 : push rbp ; and al, 0 ; ret
0x0000000000474a62 : push rbp ; and eax, 0x89485300 ; ret
0x00000000004c01c9 : push rbp ; cmc ; jmp qword ptr [rcx]
0x000000000046c043 : push rbp ; enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x00000000004956b8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045762b : push rbp ; or cl, ch ; retf -2
0x000000000046abd0 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004c2c05 : push rbp ; ret
0x0000000000465351 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000042612a : push rbp ; xor rax, rax ; ret
0x0000000000400be9 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047af04 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000443999 : push rbx ; add byte ptr [rax + 0xf], cl ; ret
0x000000000046da86 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000423849 : push rbx ; add qword ptr [rax], rax ; ret
0x00000000004bac39 : push rbx ; call 0x4c15d5f6
0x00000000004a355d : push rbx ; clc ; jmp qword ptr [rax]
0x0000000000416e5d : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000044d7b2 : push rbx ; je 0x44d7c9 ; cmp esi, 3 ; je 0x44d7c9 ; pop rbx ; ret
0x0000000000464ae9 : push rbx ; je 0x464b4d ; pop rbp ; pop r12 ; ret
0x0000000000464b8e : push rbx ; je 0x464bf2 ; pop rbp ; pop r12 ; ret
0x000000000046abd1 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000462e8a : push rbx ; or al, 0xf6 ; ret 0xf04
0x00000000004177ba : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000415afd : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000416e82 : push rbx ; push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416e74
0x000000000040d809 : push rbx ; ret
0x000000000041fc0d : push rbx ; retf
0x0000000000416e86 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf -0x2015
0x0000000000416e61 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000041b082 : push rbx ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret
0x0000000000414a54 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000417318 : push rbx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412bd1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ba47c : push rbx ; xchg eax, edx ; jae 0x4ba45b ; push rsi ; pop rdx ; je 0x4ba450 ; ret 0xacfc
0x000000000043f529 : push rcx ; add byte ptr [rax], al ; ret
0x000000000047b51f : push rcx ; add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fd31
0x00000000004b9705 : push rcx ; call qword ptr [rsi]
0x00000000004a3559 : push rcx ; clc ; call qword ptr [rax]
0x0000000000469bab : push rcx ; cmp byte ptr [rsi], ah ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000435add : push rcx ; jl 0x435b2e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435c44 : push rcx ; jl 0x435c95 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000049da6f : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004a36a3 : push rcx ; ret
0x000000000040060f : push rcx ; retf
0x000000000048a0b5 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004bdee1 : push rcx ; std ; call qword ptr [rax]
0x000000000043ba3a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000435329 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000475b25 : push rdi ; add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000043baec : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049b5bd : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004a3565 : push rdi ; clc ; inc dword ptr [rax + 0x59] ; clc ; jmp rax
0x00000000004315d8 : push rdi ; clc ; ret
0x0000000000431750 : push rdi ; cld ; ret
0x0000000000432277 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434c09 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434b89 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004a33d5 : push rdi ; inc dword ptr [rax] ; add al, bh ; call rax
0x00000000004349da : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004155f4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434a6a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d6e8 : push rdi ; or al, 0x83 ; ret
0x000000000045d66b : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a62a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048013a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a631 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043bcd0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042f9ee : push rdi ; ret
0x0000000000401115 : push rdi ; ret 0
0x000000000042fa8e : push rdi ; ret 0xff3
0x000000000042f5b3 : push rdi ; retf
0x000000000042f633 : push rdi ; retf -0x354e
0x000000000041f8f5 : push rdi ; retf 0
0x0000000000432477 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c9a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432077 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000410fbf : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000465b2b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000043f430 : push rdx ; add byte ptr [rax], al ; ret
0x00000000004680c2 : push rdx ; add byte ptr es:[rax - 0x7d], cl ; ret
0x000000000046b0ba : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c633 : push rdx ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x00000000004a3c24 : push rdx ; psubw mm7, mm7 ; ret 0xf90e
0x00000000004c5fa5 : push rdx ; ret
0x0000000000446e76 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a3a24 : push rdx ; sbb ecx, edi ; jmp rdx
0x000000000042e6d4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043dfd9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43e030 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004640b2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004355c1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435631 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043b485 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435551 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043b423 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042e6e9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000431702 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431e71 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431aa5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431c85 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431e65 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004318c5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bb020 : push rsi ; cli ; push 0x6e ; ja 0x4bafaf ; ret 0x48f
0x000000000043d2d6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043d2c6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043d296 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000042c9fd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ba480 : push rsi ; pop rdx ; je 0x4ba44c ; ret 0xacfc
0x000000000041ed32 : push rsi ; ret
0x0000000000485c7d : push rsi ; ret 0xf02
0x000000000045f188 : push rsi ; ret 0xf10
0x000000000044bc16 : push rsi ; retf 2
0x000000000043d2a6 : push rsi ; sub eax, edx ; ret
0x00000000004b8a48 : push rsi ; xchg eax, ebp ; jge 0x4b8a2d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042e6fe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049ef7d : push rsp ; add al, bpl ; retf
0x00000000004c3a2d : push rsp ; add byte ptr [rax], al ; adc byte ptr [rdi - 8], dh ; call qword ptr [rcx]
0x000000000041b95c : push rsp ; and al, 0x10 ; call rax
0x00000000004650a3 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000466cae : push rsp ; and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000447b61 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004471ee : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000467311 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044bc36 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041e46a : push rsp ; and al, 0x68 ; call rax
0x000000000041f7aa : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000044888c : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b476 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491a40 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004919fa : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041b265 : push rsp ; and eax, 0x950f4100 ; ret
0x000000000047f7b0 : push rsp ; in eax, 0x24 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004953b9 : push rsp ; or eax, 0x894d0000 ; retf
0x0000000000446e7d : push rsp ; ret
0x00000000004708df : push rsp ; retf -0x14f8
0x0000000000478ea2 : push rsp ; retf 0x45f8
0x000000000047a4b0 : push rsp ; retf 0x48f8
0x00000000004bac4a : push rsp ; syscall
0x00000000004296c0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004c0c04 : pushfq ; add byte ptr es:[rax], al ; retf
0x0000000000447370 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045cc6a : pushfq ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x0000000000414b8c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042a3c0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000468773 : pushfq ; ret 0xb60f
0x000000000049b980 : pushfq ; ret 0xf45
0x0000000000463eac : pushfq ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf -2
0x000000000047aff4 : rcl ah, 0x6c ; add cl, ch ; ret
0x00000000004a38d8 : rcl ah, 1 ; clc ; jmp qword ptr [rax]
0x0000000000425e5d : rcl bh, 1 ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000492c6d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bad91 : rcl byte ptr [rdi], cl ; retf
0x00000000004ba8ba : rcl dword ptr [rsi + 0x27], cl ; retf -0x3f02
0x00000000004ba47f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ba44d ; ret 0xacfc
0x00000000004ba8b9 : rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x00000000004ba47b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ba451 ; ret 0xacfc
0x00000000004403bc : rcr ah, 0xfd ; dec dword ptr [rcx - 0x75] ; jge 0x4403cc ; call rbx
0x00000000004a38e4 : rcr al, 0xf8 ; call qword ptr [rax]
0x00000000004421ec : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000049875d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046345a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000440a4c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000046320c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a637 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000442cf0 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000041808f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041ec6e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b649 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ecde : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c657 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045c65b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041e723 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004184f9 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a362c : rcr byte ptr [rbx - 0x44000008], 0xf8 ; call rax
0x000000000049257d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba89d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004c6d60 : rcr cl, 0xfa ; call rsi
0x0000000000478b39 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004babf1 : rcr dword ptr [rcx], cl ; retf -0x4466
0x0000000000432ac6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004ae780 : ret 0x10
0x000000000044f97b : ret 0x100
0x0000000000462e3f : ret 0x107
0x0000000000476466 : ret 0x10eb
0x000000000041c112 : ret 0x110
0x000000000047a60c : ret 0x114d
0x0000000000447628 : ret 0x1189
0x00000000004463bb : ret 0x11e9
0x000000000048373a : ret 0x12
0x00000000004748cc : ret 0x1272
0x000000000040aaba : ret 0x135
0x000000000049d823 : ret 0x1374
0x000000000046dd7f : ret 0x1376
0x000000000046af01 : ret 0x1477
0x000000000041b801 : ret 0x148
0x0000000000416602 : ret 0x149
0x000000000041a455 : ret 0x14c
0x0000000000435e9c : ret 0x14d
0x00000000004079ba : ret 0x166
0x0000000000423b7a : ret 0x17
0x0000000000435dd9 : ret 0x180f
0x000000000044f416 : ret 0x1874
0x0000000000426195 : ret 0x1876
0x00000000004183d5 : ret 0x18eb
0x0000000000468305 : ret 0x190
0x0000000000488cc2 : ret 0x1a75
0x00000000004badfa : ret 0x1ad4
0x00000000004b958d : ret 0x1b49
0x0000000000417c0f : ret 0x1be
0x00000000004b0450 : ret 0x1d4
0x00000000004b0be8 : ret 0x1d5
0x0000000000400d95 : ret 0x1d89
0x0000000000447f73 : ret 0x1e76
0x0000000000449b07 : ret 0x1f0f
0x000000000041e8ae : ret 0x1f76
0x0000000000458d8a : ret 0x1fd
0x000000000044f897 : ret 0x200
0x000000000044716c : ret 0x2176
0x0000000000423918 : ret 0x2288
0x000000000042fbf2 : ret 0x2373
0x00000000004af458 : ret 0x24
0x000000000041b1d6 : ret 0x24e9
0x0000000000471a84 : ret 0x25
0x0000000000415129 : ret 0x2501
0x000000000047afda : ret 0x2524
0x000000000041dc9d : ret 0x2575
0x0000000000474582 : ret 0x2592
0x0000000000467cb6 : ret 0x2656
0x00000000004519ce : ret 0x27
0x000000000045c5aa : ret 0x2718
0x000000000045a95e : ret 0x2729
0x00000000004013e6 : ret 0x2773
0x0000000000465926 : ret 0x2774
0x000000000044cf02 : ret 0x2802
0x00000000004313a6 : ret 0x280f
0x0000000000426185 : ret 0x2876
0x000000000047f6d8 : ret 0x28f5
0x0000000000485ffd : ret 0x2941
0x000000000041102d : ret 0x2948
0x000000000049b90a : ret 0x2949
0x0000000000432b11 : ret 0x294c
0x000000000041313b : ret 0x294d
0x000000000041e4f3 : ret 0x2a
0x000000000041e7bb : ret 0x2a75
0x000000000043f98a : ret 0x2b3
0x0000000000410ccf : ret 0x2b48
0x000000000044665e : ret 0x2b49
0x000000000043e492 : ret 0x2b77
0x0000000000400e74 : ret 0x2c
0x000000000041bb9c : ret 0x2c75
0x000000000043e137 : ret 0x2c76
0x00000000004017ba : ret 0x2c99
0x00000000004836c4 : ret 0x2e
0x0000000000462a25 : ret 0x2e66
0x000000000048f09a : ret 0x2ec
0x000000000041c76b : ret 0x30be
0x0000000000446545 : ret 0x3101
0x00000000004037f6 : ret 0x3145
0x000000000046fe82 : ret 0x314c
0x00000000004af948 : ret 0x33
0x0000000000403fa1 : ret 0x348
0x000000000044c59b : ret 0x349
0x0000000000488d18 : ret 0x357e
0x00000000004ba6da : ret 0x3827
0x000000000047be22 : ret 0x3840
0x00000000004106ef : ret 0x3841
0x00000000004407af : ret 0x3845
0x0000000000426175 : ret 0x3876
0x00000000004434e9 : ret 0x3880
0x0000000000415a0b : ret 0x389
0x00000000004b8d66 : ret 0x38ae
0x000000000047aa66 : ret 0x38b
0x000000000044fe71 : ret 0x3948
0x000000000041d29b : ret 0x3949
0x000000000044d3b6 : ret 0x394c
0x0000000000452d38 : ret 0x394d
0x000000000043d8b2 : ret 0x3a01
0x000000000042fbdb : ret 0x3a73
0x000000000044cec3 : ret 0x3a76
0x0000000000442ce1 : ret 0x3b01
0x00000000004673ea : ret 0x3bba
0x000000000040e6ae : ret 0x3ce8
0x0000000000445d85 : ret 0x3d83
0x000000000044f70d : ret 0x3de8
0x000000000046af87 : ret 0x3e8
0x000000000046a2a2 : ret 0x3e9
0x0000000000459b7c : ret 0x3ee8
0x000000000049b68f : ret 0x3ee9
0x0000000000419a52 : ret 0x4007
0x0000000000466af6 : ret 0x408d
0x000000000047839f : ret 0x40bf
0x0000000000446170 : ret 0x4101
0x0000000000455350 : ret 0x4108
0x0000000000456e18 : ret 0x4110
0x000000000041cb0c : ret 0x4117
0x000000000046f01c : ret 0x412f
0x000000000043fabd : ret 0x4164
0x0000000000446f3e : ret 0x41c3
0x000000000042e56a : ret 0x4266
0x0000000000468402 : ret 0x428d
0x000000000044ceba : ret 0x4372
0x000000000044d94b : ret 0x4389
0x000000000044602f : ret 0x438b
0x00000000004a4088 : ret 0x43e4
0x000000000043f547 : ret 0x43e8
0x0000000000411d23 : ret 0x4401
0x00000000004558d7 : ret 0x440f
0x0000000000464867 : ret 0x4410
0x000000000047b911 : ret 0x448d
0x0000000000489c15 : ret 0x44c6
0x00000000004627a2 : ret 0x4502
0x000000000046da18 : ret 0x4574
0x00000000004632e8 : ret 0x45f6
0x00000000004b9864 : ret 0x474c
0x000000000049da73 : ret 0x4776
0x00000000004489f5 : ret 0x4801
0x000000000042c7e1 : ret 0x4802
0x000000000042c8bd : ret 0x4803
0x0000000000404380 : ret 0x4804
0x000000000042c88d : ret 0x4805
0x000000000042c875 : ret 0x4806
0x00000000004238a3 : ret 0x4808
0x000000000044f424 : ret 0x4809
0x0000000000458c44 : ret 0x480f
0x000000000041b369 : ret 0x4810
0x000000000044cd90 : ret 0x4811
0x0000000000453382 : ret 0x481e
0x000000000041b2ab : ret 0x4820
0x000000000045be6c : ret 0x482d
0x000000000044493f : ret 0x4830
0x00000000004013e2 : ret 0x4838
0x000000000042e476 : ret 0x4840
0x000000000041c8d6 : ret 0x4874
0x00000000004239b8 : ret 0x48c3
0x000000000046759d : ret 0x48d
0x0000000000473c04 : ret 0x48e9
0x00000000004bb026 : ret 0x48f
0x000000000040308e : ret 0x4901
0x000000000044c173 : ret 0x4904
0x000000000042cafe : ret 0x4906
0x0000000000457488 : ret 0x4908
0x000000000046a339 : ret 0x4909
0x0000000000422c12 : ret 0x4910
0x0000000000420e86 : ret 0x4920
0x000000000041fe00 : ret 0x4930
0x000000000047e814 : ret 0x4976
0x000000000046908e : ret 0x49be
0x00000000004bc6c1 : ret 0x4b
0x000000000046cb42 : ret 0x4b30
0x0000000000478116 : ret 0x4b66
0x00000000004b7148 : ret 0x4b6a
0x00000000004059f5 : ret 0x4c01
0x000000000042ca41 : ret 0x4c02
0x000000000044cc7f : ret 0x4c04
0x0000000000485d45 : ret 0x4c08
0x0000000000452a76 : ret 0x4c40
0x0000000000448c40 : ret 0x4c88
0x0000000000447051 : ret 0x4d02
0x00000000004baa87 : ret 0x4e27
0x0000000000469b57 : ret 0x4eb
0x0000000000444df8 : ret 0x4ee9
0x0000000000445c4e : ret 0x4f74
0x000000000042fbc4 : ret 0x5173
0x000000000044f223 : ret 0x527e
0x0000000000463068 : ret 0x5389
0x000000000045b35b : ret 0x53e9
0x000000000047bbad : ret 0x5438
0x0000000000491a66 : ret 0x5488
0x000000000044d23a : ret 0x5489
0x000000000045afb3 : ret 0x548b
0x00000000004b8cec : ret 0x5508
0x000000000040560f : ret 0x5525
0x00000000004212f2 : ret 0x575
0x000000000046dd8d : ret 0x576
0x00000000004bafb8 : ret 0x5803
0x000000000040e86b : ret 0x589
0x00000000004b89c0 : ret 0x591c
0x00000000004b9727 : ret 0x5ae4
0x0000000000446e6f : ret 0x5b80
0x0000000000449f31 : ret 0x5c77
0x00000000004bb452 : ret 0x62c1
0x000000000045c823 : ret 0x6348
0x0000000000412342 : ret 0x6349
0x000000000047f2c7 : ret 0x63e8
0x00000000004033e6 : ret 0x64e8
0x000000000049a8c0 : ret 0x65e9
0x0000000000489fe7 : ret 0x6610
0x0000000000426102 : ret 0x6620
0x0000000000423a05 : ret 0x66c3
0x00000000004748de : ret 0x674
0x00000000004b89df : ret 0x67b2
0x000000000047d92d : ret 0x6876
0x000000000049dc72 : ret 0x68e8
0x00000000004170ba : ret 0x6a
0x000000000043ef1d : ret 0x6b8
0x000000000049b967 : ret 0x6be9
0x00000000004bb5e1 : ret 0x6f9
0x0000000000432b5e : ret 0x7280
0x00000000004762b9 : ret 0x728d
0x000000000043e2fb : ret 0x72e9
0x0000000000415f51 : ret 0x7401
0x000000000041e9af : ret 0x7402
0x000000000041be65 : ret 0x7404
0x0000000000411843 : ret 0x7408
0x0000000000400f6c : ret 0x7420
0x0000000000459012 : ret 0x7450
0x000000000043be19 : ret 0x7501
0x000000000043be26 : ret 0x7502
0x00000000004268b9 : ret 0x7504
0x000000000043d254 : ret 0x7508
0x000000000043bdeb : ret 0x7510
0x00000000004268b4 : ret 0x7518
0x000000000043bdf8 : ret 0x7520
0x000000000043be05 : ret 0x7540
0x0000000000473251 : ret 0x758b
0x000000000042eab2 : ret 0x7677
0x0000000000446652 : ret 0x774
0x0000000000478dfa : ret 0x777
0x000000000049b75b : ret 0x77e9
0x000000000046dd1a : ret 0x7874
0x000000000041b79a : ret 0x7ae9
0x000000000044719a : ret 0x7b8
0x0000000000426092 : ret 0x7e20
0x000000000042180c : ret 0x7f10
0x0000000000461ca6 : ret 0x7f3c
0x0000000000432e7e : ret 0x80
0x00000000004229e9 : ret 0x8000
0x0000000000469b5c : ret 0x8001
0x00000000004729bf : ret 0x8005
0x000000000047d7e6 : ret 0x8008
0x000000000046a542 : ret 0x8010
0x0000000000473afe : ret 0x8018
0x00000000004703c8 : ret 0x804
0x000000000046c780 : ret 0x8116
0x000000000048729b : ret 0x8148
0x000000000045af74 : ret 0x8166
0x000000000041a59c : ret 0x820f
0x0000000000404160 : ret 0x8301
0x000000000047dd21 : ret 0x8308
0x000000000042e680 : ret 0x830f
0x000000000043e1c0 : ret 0x8341
0x00000000004213b5 : ret 0x8348
0x000000000041b863 : ret 0x8349
0x000000000047fe89 : ret 0x8364
0x000000000043f607 : ret 0x83e8
0x0000000000411c90 : ret 0x840
0x000000000046b362 : ret 0x8401
0x00000000004183e9 : ret 0x840f
0x000000000043e260 : ret 0x8444
0x000000000049b8d7 : ret 0x8445
0x000000000045c815 : ret 0x8504
0x0000000000462ef6 : ret 0x8508
0x0000000000413852 : ret 0x850f
0x0000000000468665 : ret 0x8545
0x0000000000419b22 : ret 0x8548
0x000000000041bbca : ret 0x854d
0x0000000000459e3c : ret 0x858b
0x000000000045766d : ret 0x85c6
0x00000000004556ba : ret 0x85c7
0x000000000049ab58 : ret 0x85e9
0x0000000000400d2e : ret 0x860f
0x000000000044fb85 : ret 0x870f
0x00000000004b82fe : ret 0x871e
0x0000000000461cad : ret 0x875
0x00000000004261a5 : ret 0x876
0x0000000000489c10 : ret 0x87e
0x000000000044ec1a : ret 0x87e9
0x000000000047e5d4 : ret 0x87f6
0x0000000000448181 : ret 0x8804
0x000000000045e4e2 : ret 0x880f
0x000000000044f0d7 : ret 0x8840
0x0000000000447582 : ret 0x8901
0x0000000000470d8e : ret 0x8908
0x0000000000400dd6 : ret 0x890f
0x000000000044d33f : ret 0x8941
0x0000000000400669 : ret 0x8944
0x0000000000411d0b : ret 0x8945
0x0000000000449ff1 : ret 0x8948
0x0000000000410abd : ret 0x8949
0x0000000000403bc7 : ret 0x894c
0x000000000044614f : ret 0x894d
0x00000000004796cb : ret 0x894e
0x000000000048389c : ret 0x89e9
0x000000000047842e : ret 0x8b
0x00000000004629ea : ret 0x8b04
0x000000000046b053 : ret 0x8b05
0x00000000004bab2e : ret 0x8b36
0x000000000044f4aa : ret 0x8b41
0x0000000000401554 : ret 0x8b48
0x0000000000411486 : ret 0x8b49
0x000000000047964e : ret 0x8b4a
0x0000000000411fe0 : ret 0x8b4c
0x00000000004806c5 : ret 0x8d01
0x000000000045299a : ret 0x8d04
0x0000000000459b60 : ret 0x8d0f
0x000000000040d40f : ret 0x8d48
0x0000000000403376 : ret 0x8d49
0x0000000000465ea8 : ret 0x8d4a
0x0000000000411f96 : ret 0x8d4c
0x000000000041cb6c : ret 0x8d4e
0x0000000000410fd1 : ret 0x8e0f
0x000000000040157e : ret 0x900
0x0000000000421435 : ret 0x90c3
0x0000000000412f6b : ret 0x938b
0x000000000043f7f7 : ret 0x93e8
0x0000000000485c50 : ret 0x940f
0x000000000048a866 : ret 0x941
0x0000000000465bc8 : ret 0x94c
0x000000000047aeff : ret 0x950f
0x0000000000455e19 : ret 0x9522
0x0000000000403a08 : ret 0x953d
0x00000000004b9953 : ret 0x9576
0x0000000000481a00 : ret 0x9589
0x000000000041b7b1 : ret 0x976
0x0000000000488d99 : ret 0x9e74
0x0000000000410ee8 : ret 0x9e9
0x0000000000474009 : ret 0x9f75
0x00000000004adf80 : ret 0xa
0x00000000004919d0 : ret 0xa074
0x00000000004b9643 : ret 0xa514
0x00000000004b9ac7 : ret 0xac65
0x000000000049df2e : ret 0xace8
0x00000000004ba484 : ret 0xacfc
0x000000000043e2e6 : ret 0xaf0f
0x0000000000485d97 : ret 0xb3e8
0x000000000041c14f : ret 0xb48b
0x0000000000402949 : ret 0xb60f
0x000000000046841b : ret 0xb70f
0x000000000043ee50 : ret 0xb8
0x0000000000460179 : ret 0xb848
0x000000000044f275 : ret 0xb87f
0x0000000000426787 : ret 0xb8c3
0x0000000000467352 : ret 0xb8e9
0x0000000000484ae2 : ret 0xb908
0x00000000004b998e : ret 0xb9b9
0x000000000045663d : ret 0xbb41
0x0000000000478f22 : ret 0xbc41
0x000000000049bcf5 : ret 0xbc80
0x0000000000460c2e : ret 0xbd83
0x0000000000484cd0 : ret 0xbe08
0x00000000004b96e4 : ret 0xbe57
0x000000000045b048 : ret 0xbf07
0x00000000004840b1 : ret 0xbf08
0x00000000004228a9 : ret 0xc000
0x000000000048f06e : ret 0xc001
0x000000000048f022 : ret 0xc002
0x0000000000413793 : ret 0xc031
0x000000000046b8c0 : ret 0xc084
0x0000000000425f50 : ret 0xc085
0x000000000040e9f6 : ret 0xc148
0x00000000004674bd : ret 0xc269
0x000000000045b516 : ret 0xc283
0x000000000042fa94 : ret 0xc2b2
0x000000000043e501 : ret 0xc35b
0x00000000004b7e82 : ret 0xc4c3
0x00000000004b9298 : ret 0xc4ff
0x0000000000432bf8 : ret 0xc580
0x000000000049b90d : ret 0xc5e9
0x00000000004828d0 : ret 0xc6e9
0x0000000000421331 : ret 0xc6eb
0x00000000004382f0 : ret 0xc748
0x000000000041c432 : ret 0xc789
0x00000000004159fc : ret 0xc883
0x000000000047d433 : ret 0xc931
0x0000000000443329 : ret 0xc985
0x0000000000423871 : ret 0xc9ff
0x000000000048145d : ret 0xcb73
0x00000000004b8d2a : ret 0xcca7
0x00000000004bae0d : ret 0xcd11
0x000000000041d561 : ret 0xce31
0x0000000000404e14 : ret 0xce80
0x0000000000480d35 : ret 0xce83
0x00000000004195fb : ret 0xcf31
0x00000000004ae380 : ret 0xd
0x000000000047bd3a : ret 0xd021
0x000000000044263f : ret 0xd029
0x0000000000432a6c : ret 0xd073
0x000000000040561e : ret 0xd089
0x00000000004644a5 : ret 0xd108
0x0000000000486c69 : ret 0xd129
0x000000000049a526 : ret 0xd284
0x0000000000485b67 : ret 0xd309
0x000000000048917b : ret 0xd348
0x000000000045b533 : ret 0xd529
0x0000000000486ce0 : ret 0xd629
0x000000000046720d : ret 0xd721
0x0000000000486bf2 : ret 0xd729
0x000000000043e2eb : ret 0xd889
0x00000000004ba8a5 : ret 0xd8f
0x0000000000477ab3 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047bb00 : ret 0xda38
0x0000000000442c83 : ret 0xda75
0x000000000040fec5 : ret 0xdaf7
0x00000000004486b1 : ret 0xdb85
0x00000000004ba986 : ret 0xdcd9
0x000000000046aaa0 : ret 0xdd72
0x00000000004b9902 : ret 0xde5d
0x00000000004115c5 : ret 0xde74
0x000000000049b4d2 : ret 0xde89
0x00000000004b8691 : ret 0xde9e
0x00000000004870b8 : ret 0xdee9
0x0000000000422769 : ret 0xe000
0x000000000043bda9 : ret 0xe074
0x000000000044718d : ret 0xe077
0x0000000000443fc9 : ret 0xe083
0x000000000044b713 : ret 0xe183
0x0000000000444542 : ret 0xe1eb
0x000000000044761b : ret 0xe277
0x000000000040dc4c : ret 0xe281
0x0000000000400edd : ret 0xe283
0x000000000043f5a7 : ret 0xe3e8
0x0000000000466570 : ret 0xe575
0x00000000004183c7 : ret 0xe675
0x0000000000458048 : ret 0xe680
0x00000000004baaa6 : ret 0xe71f
0x00000000004013d8 : ret 0xe72
0x0000000000452ed0 : ret 0xe783
0x000000000046e205 : ret 0xe874
0x0000000000459a15 : ret 0xe87f
0x0000000000455252 : ret 0xe883
0x000000000046e5ae : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x00000000004256a3 : ret 0xe901
0x0000000000402c12 : ret 0xe902
0x000000000044a0f9 : ret 0xe904
0x000000000047b731 : ret 0xe907
0x0000000000423906 : ret 0xe908
0x0000000000429526 : ret 0xe910
0x0000000000453479 : ret 0xe920
0x000000000041fea3 : ret 0xe96e
0x00000000004b8e07 : ret 0xe970
0x0000000000488cdc : ret 0xe974
0x000000000042004f : ret 0xe977
0x000000000043e48a : ret 0xea81
0x0000000000400db1 : ret 0xeac1
0x0000000000422c36 : ret 0xeb10
0x000000000041fe6f : ret 0xeb5b
0x000000000040e66a : ret 0xeb72
0x00000000004022a8 : ret 0xebe8
0x00000000004bb5b8 : ret 0xec2
0x000000000047f669 : ret 0xec75
0x00000000004708f8 : ret 0xed75
0x000000000044b26e : ret 0xed85
0x00000000004460cf : ret 0xee75
0x00000000004bb25a : ret 0xef32
0x0000000000419126 : ret 0xef75
0x0000000000443e41 : ret 0xefc1
0x0000000000422629 : ret 0xf000
0x000000000040d5d8 : ret 0xf001
0x00000000004028fa : ret 0xf01
0x000000000041b7a7 : ret 0xf02
0x000000000041bde0 : ret 0xf04
0x000000000045d66e : ret 0xf08
0x000000000046b4c6 : ret 0xf0eb
0x000000000041b523 : ret 0xf0f
0x00000000004217c2 : ret 0xf10
0x0000000000462415 : ret 0xf229
0x0000000000450106 : ret 0xf301
0x0000000000400aba : ret 0xf4
0x000000000045d6aa : ret 0xf40
0x00000000004685ed : ret 0xf43
0x000000000049b981 : ret 0xf45
0x00000000004644ca : ret 0xf48
0x000000000045aab4 : ret 0xf4c
0x0000000000402c1b : ret 0xf4e9
0x0000000000443fac : ret 0xf631
0x00000000004215d9 : ret 0xf66
0x000000000043e0ac : ret 0xf685
0x000000000041c133 : ret 0xf710
0x000000000047a135 : ret 0xf74
0x0000000000426c2c : ret 0xf748
0x0000000000466010 : ret 0xf749
0x0000000000483d8a : ret 0xf7da
0x0000000000432b1e : ret 0xf80
0x00000000004224e9 : ret 0xf800
0x00000000004b8570 : ret 0xf869
0x00000000004a3c30 : ret 0xf90d
0x00000000004a3c28 : ret 0xf90e
0x00000000004a3a20 : ret 0xf919
0x000000000040459a : ret 0xf929
0x00000000004839ba : ret 0xf9a1
0x00000000004765ba : ret 0xfa7a
0x000000000045989e : ret 0xfa80
0x000000000048ac76 : ret 0xfa81
0x0000000000405632 : ret 0xfac1
0x000000000044e59a : ret 0xfb1d
0x00000000004223a9 : ret 0xfc00
0x000000000048c1b6 : ret 0xfc01
0x000000000048c16a : ret 0xfc02
0x000000000043f69a : ret 0xfc3
0x0000000000451bba : ret 0xfcbf
0x000000000046c04a : ret 0xfd34
0x000000000046b4fa : ret 0xfd42
0x0000000000457e8a : ret 0xfd44
0x0000000000447260 : ret 0xfd83
0x00000000004404ba : ret 0xfddb
0x00000000004028d0 : ret 0xfdf
0x0000000000422269 : ret 0xfe00
0x000000000043e1e3 : ret 0xfe83
0x0000000000432a3e : ret 0xfec5
0x0000000000422129 : ret 0xff00
0x000000000049190e : ret 0xff2
0x000000000042e49a : ret 0xff3
0x0000000000421fe9 : ret 0xff80
0x0000000000488fb6 : ret 0xff81
0x0000000000488f6a : ret 0xff82
0x000000000040c34a : ret 0xff99
0x0000000000487250 : ret 0xff9f
0x0000000000452a62 : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x0000000000403d00 : ret 0xffbf
0x0000000000421ea9 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x0000000000417a95 : ret 0xffd8
0x000000000042116e : ret 0xffdf
0x000000000044f8c8 : ret 0xffe0
0x00000000004086fa : ret 0xffe2
0x000000000049e55a : ret 0xffe7
0x000000000044185a : ret 0xffe8
0x000000000044175a : ret 0xffe9
0x000000000040eeec : ret 0xffef
0x000000000040db9e : ret 0xfff0
0x000000000041996a : ret 0xfff1
0x00000000004c1221 : ret 0xfff5
0x00000000004c2231 : ret 0xfff7
0x00000000004a369d : ret 0xfff8
0x000000000045a364 : ret 0xfff9
0x00000000004c6969 : ret 0xfffa
0x000000000043f259 : ret 0xfffb
0x00000000004219a9 : ret 0xfffc
0x0000000000441dc3 : ret 0xfffd
0x00000000004053c8 : ret 0xfffe
0x000000000041112a : ret 0xffff
0x0000000000426215 : ret 1
0x000000000041676c : ret 2
0x000000000042f852 : ret 3
0x0000000000426259 : ret 4
0x0000000000459e5e : ret 5
0x000000000044682a : ret 6
0x00000000004b2424 : ret 7
0x000000000040a4fe : ret 8
0x000000000043c85a : ret 9
0x000000000042c48a : retf
0x0000000000404d0c : retf -0x10
0x000000000040b5e9 : retf -0x13
0x000000000045c94c : retf -0x1401
0x00000000004bb2c1 : retf -0x1441
0x00000000004b8acd : retf -0x147d
0x00000000004708e0 : retf -0x14f8
0x00000000004682e1 : retf -0x1509
0x0000000000421781 : retf -0x152d
0x000000000043e539 : retf -0x153f
0x00000000004443db : retf -0x1540
0x00000000004ba9ac : retf -0x156f
0x00000000004146f8 : retf -0x1680
0x0000000000443404 : retf -0x16f8
0x0000000000443414 : retf -0x16fc
0x0000000000443424 : retf -0x16fe
0x0000000000443454 : retf -0x16ff
0x0000000000470635 : retf -0x178b
0x0000000000480d1b : retf -0x178d
0x00000000004b9366 : retf -0x18d2
0x0000000000453977 : retf -0x1989
0x0000000000451731 : retf -0x1a
0x00000000004618f2 : retf -0x1b
0x00000000004b99fc : retf -0x1b6a
0x00000000004268a9 : retf -0x1b8b
0x00000000004729b7 : retf -0x1d3f
0x000000000049b46b : retf -0x1d7d
0x00000000004496dc : retf -0x1d7f
0x00000000004b941e : retf -0x1eae
0x0000000000456c46 : retf -0x1f3f
0x0000000000449013 : retf -0x1f7d
0x0000000000416e8a : retf -0x2015
0x00000000004b9973 : retf -0x2081
0x0000000000405a3e : retf -0x208b
0x00000000004bb343 : retf -0x21b1
0x000000000049d38f : retf -0x2489
0x000000000040dccd : retf -0x2509
0x000000000047bd47 : retf -0x2677
0x000000000049d654 : retf -0x2c15
0x0000000000447697 : retf -0x2d7b
0x000000000043e5d0 : retf -0x2dcf
0x00000000004b96a6 : retf -0x2e35
0x0000000000458fe2 : retf -0x2e77
0x0000000000489893 : retf -0x2f15
0x0000000000456cef : retf -0x2fc7
0x00000000004b7e8a : retf -0x3335
0x000000000042f634 : retf -0x354e
0x0000000000409242 : retf -0x36
0x0000000000403aad : retf -0x36f1
0x000000000040054a : retf -0x377d
0x0000000000403da1 : retf -0x37f1
0x0000000000463474 : retf -0x38b8
0x0000000000432c2f : retf -0x3e3c
0x0000000000465b8e : retf -0x3eb7
0x000000000040e1e7 : retf -0x3eb8
0x00000000004ba8bd : retf -0x3f02
0x0000000000413d21 : retf -0x3fcf
0x00000000004627de : retf -0x3fff
0x00000000004bac3d : retf -0x40b5
0x0000000000410e1a : retf -0x428b
0x00000000004babf3 : retf -0x4466
0x000000000049dbb2 : retf -0x4617
0x0000000000462b55 : retf -0x48
0x00000000004675af : retf -0x48f1
0x0000000000426482 : retf -0x49f1
0x00000000004b98e9 : retf -0x4ae6
0x0000000000473122 : retf -0x4c9
0x0000000000449e95 : retf -0x4f17
0x000000000040ac42 : retf -0x50
0x00000000004bb0ee : retf -0x51ce
0x0000000000452c82 : retf -0x52a
0x000000000045820d : retf -0x53f
0x00000000004bab9c : retf -0x54f3
0x00000000004765b2 : retf -0x586
0x000000000040f8ea : retf -0x5c8b
0x00000000004baacb : retf -0x5d02
0x00000000004b8a45 : retf -0x5e15
0x00000000004bb4e5 : retf -0x5fe0
0x000000000047bd62 : retf -0x61f1
0x00000000004babda : retf -0x6283
0x000000000042ae3f : retf -0x63b
0x00000000004ba86b : retf -0x6620
0x000000000048af3a : retf -0x6af1
0x0000000000418c32 : retf -0x6b
0x000000000046d682 : retf -0x6bf
0x00000000004ba4ce : retf -0x6c5e
0x00000000004a3b0c : retf -0x6e5
0x00000000004a3cf8 : retf -0x6ec
0x0000000000422b43 : retf -0x6f9a
0x000000000044965e : retf -0x71f1
0x0000000000481638 : retf -0x7277
0x0000000000487019 : retf -0x72b1
0x000000000043b32d : retf -0x72b4
0x00000000004237c4 : retf -0x72b6
0x000000000041b80a : retf -0x72b7
0x0000000000400499 : retf -0x72b8
0x000000000046755c : retf -0x72bf
0x000000000046845d : retf -0x72f1
0x000000000040d042 : retf -0x74
0x0000000000409c55 : retf -0x74b4
0x000000000040e3a5 : retf -0x74b7
0x000000000040451a : retf -0x74b8
0x0000000000446f59 : retf -0x76b3
0x000000000040ef44 : retf -0x76b4
0x00000000004052e5 : retf -0x76b7
0x0000000000402b12 : retf -0x76b8
0x0000000000486fda : retf -0x76bb
0x000000000046a32d : retf -0x76bf
0x000000000041184f : retf -0x76e0
0x0000000000420ab2 : retf -0x76fe
0x0000000000449033 : retf -0x7780
0x000000000047cae8 : retf -0x77e0
0x000000000047b420 : retf -0x77f1
0x0000000000432dac : retf -0x78f1
0x000000000040e1d1 : retf -0x7ab8
0x000000000040213a : retf -0x7abb
0x000000000040f832 : retf -0x7af1
0x00000000004b9b70 : retf -0x7b7f
0x000000000048a6a5 : retf -0x7bbb
0x0000000000448381 : retf -0x7bc0
0x00000000004663b2 : retf -0x7bf1
0x0000000000422d85 : retf -0x7cb7
0x000000000041ca99 : retf -0x7cb8
0x000000000048b651 : retf -0x7cbf
0x0000000000432d71 : retf -0x7cf1
0x0000000000400f20 : retf -0x7d
0x00000000004324ad : retf -0x7df1
0x00000000004345de : retf -0x7eb8
0x000000000042e69a : retf -0x8b8
0x000000000048b31d : retf -0x8bf
0x00000000004c1311 : retf -0xb
0x0000000000417c8f : retf -0xcf
0x000000000048ba7c : retf -0xe
0x000000000042ad6d : retf -0xe3b
0x00000000004806bb : retf -0xe77
0x0000000000451e42 : retf -0xf5
0x000000000047bd42 : retf -0xfd7
0x0000000000409228 : retf -1
0x0000000000411053 : retf -2
0x00000000004bdfcd : retf -3
0x000000000043f151 : retf -4
0x0000000000473951 : retf -5
0x0000000000453bc2 : retf -6
0x00000000004a38b9 : retf -8
0x000000000040b3b7 : retf -9
0x0000000000404a97 : retf 0
0x0000000000432abd : retf 0x1073
0x00000000004472e0 : retf 0x1089
0x00000000004ae8e0 : retf 0x11
0x000000000048004d : retf 0x114d
0x000000000040b2b2 : retf 0x12d
0x000000000044907b : retf 0x1308
0x000000000041d620 : retf 0x1373
0x00000000004492c4 : retf 0x148
0x00000000004470e4 : retf 0x1489
0x0000000000448c07 : retf 0x149
0x0000000000432d57 : retf 0x14c
0x0000000000423c52 : retf 0x16
0x000000000044932e : retf 0x1608
0x0000000000405db2 : retf 0x182
0x000000000047a53d : retf 0x194d
0x0000000000442962 : retf 0x19b8
0x00000000004196b8 : retf 0x1b73
0x000000000047d7d8 : retf 0x1b8
0x00000000004813ab : retf 0x1ba
0x00000000004b0488 : retf 0x1d4
0x00000000004b0c28 : retf 0x1d5
0x0000000000429447 : retf 0x1f0f
0x0000000000442d62 : retf 0x1f8
0x0000000000419a7a : retf 0x2173
0x0000000000407426 : retf 0x22
0x000000000041d8d9 : retf 0x2273
0x00000000004a030e : retf 0x22b6
0x000000000047f663 : retf 0x2348
0x00000000004af498 : retf 0x24
0x000000000046916a : retf 0x2642
0x0000000000468c12 : retf 0x2647
0x00000000004519cd : retf 0x27c2
0x000000000044dea2 : retf 0x27db
0x00000000004301b9 : retf 0x280f
0x0000000000445de2 : retf 0x2873
0x0000000000490d2f : retf 0x2941
0x0000000000411817 : retf 0x2948
0x0000000000410b0a : retf 0x294c
0x000000000041fdc0 : retf 0x2a
0x00000000004b977c : retf 0x2a91
0x000000000041ff22 : retf 0x2aa8
0x0000000000416d22 : retf 0x2b59
0x0000000000415122 : retf 0x2b75
0x000000000040068b : retf 0x2c
0x0000000000405032 : retf 0x2c70
0x00000000004b8bfa : retf 0x2c90
0x000000000046a241 : retf 0x2d75
0x000000000040ebd5 : retf 0x2e66
0x000000000044cece : retf 0x2f72
0x0000000000469e0b : retf 0x2f74
0x000000000045af30 : retf 0x30be
0x000000000048cbda : retf 0x310
0x000000000044006f : retf 0x3140
0x00000000004345fa : retf 0x3148
0x00000000004ba9e5 : retf 0x3159
0x00000000004baa4d : retf 0x32dd
0x00000000004af988 : retf 0x33
0x00000000004b9303 : retf 0x33e6
0x00000000004437a7 : retf 0x348
0x0000000000459b88 : retf 0x349
0x000000000044371a : retf 0x34c
0x00000000004b9831 : retf 0x3617
0x00000000004345d6 : retf 0x377
0x0000000000449897 : retf 0x3948
0x0000000000470563 : retf 0x3980
0x0000000000418292 : retf 0x3a1
0x00000000004bdde9 : retf 0x3b9a
0x000000000045c225 : retf 0x3be9
0x00000000004bae46 : retf 0x3d8a
0x00000000004b86db : retf 0x3ec
0x0000000000470a54 : retf 0x4108
0x00000000004a35b1 : retf 0x42
0x000000000042e54c : retf 0x4266
0x000000000047f45a : retf 0x42f6
0x00000000004a48d8 : retf 0x43ee
0x000000000042919a : retf 0x4466
0x0000000000488ac0 : retf 0x4489
0x0000000000404e75 : retf 0x44f6
0x00000000004b3eb9 : retf 0x45
0x0000000000478ea3 : retf 0x45f8
0x00000000004b3968 : retf 0x45fb
0x000000000047d0b4 : retf 0x47
0x0000000000416e65 : retf 0x476
0x000000000041c373 : retf 0x4801
0x000000000046d53f : retf 0x4802
0x000000000040da7b : retf 0x4803
0x000000000040da2b : retf 0x4804
0x000000000040d8df : retf 0x4805
0x000000000040da53 : retf 0x4806
0x000000000040daa3 : retf 0x4807
0x000000000040d9b8 : retf 0x4808
0x000000000040d943 : retf 0x4809
0x000000000040db43 : retf 0x480a
0x000000000040db17 : retf 0x480b
0x000000000040d985 : retf 0x480c
0x000000000040d913 : retf 0x480d
0x000000000049df73 : retf 0x4810
0x0000000000425ffe : retf 0x4890
0x000000000047a4b1 : retf 0x48f8
0x000000000047dbd7 : retf 0x4b
0x00000000004a6ec8 : retf 0x4b29
0x0000000000451b6b : retf 0x4b4d
0x000000000047409f : retf 0x4b60
0x0000000000474d7f : retf 0x4b61
0x000000000047be8b : retf 0x4c01
0x000000000041b977 : retf 0x4c04
0x000000000048631f : retf 0x4c8b
0x0000000000418d62 : retf 0x4d01
0x00000000004146ad : retf 0x4d80
0x000000000047a508 : retf 0x4de8
0x0000000000478da1 : retf 0x4df0
0x000000000047a52c : retf 0x4df8
0x0000000000463a2d : retf 0x5077
0x0000000000447cee : retf 0x5355
0x00000000004919ca : retf 0x5489
0x000000000044cea8 : retf 0x5576
0x000000000040ea83 : retf 0x6411
0x00000000004302a3 : retf 0x6601
0x00000000004303f3 : retf 0x6602
0x0000000000430543 : retf 0x6603
0x0000000000430693 : retf 0x6604
0x00000000004307e3 : retf 0x6605
0x0000000000430933 : retf 0x6606
0x0000000000430a83 : retf 0x6607
0x0000000000430bd3 : retf 0x6608
0x0000000000430d23 : retf 0x6609
0x0000000000430e73 : retf 0x660a
0x0000000000430fc3 : retf 0x660b
0x0000000000431113 : retf 0x660c
0x0000000000431263 : retf 0x660d
0x00000000004313b3 : retf 0x660e
0x0000000000431503 : retf 0x660f
0x00000000004345f5 : retf 0x676
0x00000000004bad65 : retf 0x67ca
0x00000000004674f8 : retf 0x694d
0x0000000000432bf3 : retf 0x6a77
0x000000000046adb2 : retf 0x6b8
0x00000000004b8d62 : retf 0x6ee8
0x00000000004bac26 : retf 0x7272
0x0000000000478682 : retf 0x76
0x00000000004ba3ff : retf 0x76a5
0x000000000047a476 : retf 0x77f
0x00000000004b9282 : retf 0x79f5
0x000000000046a266 : retf 0x7a80
0x0000000000462d99 : retf 0x7a8b
0x0000000000478cc1 : retf 0x877
0x0000000000491a3a : retf 0x948
0x000000000045c830 : retf 0x97e
0x0000000000471a9c : retf 0xa
0x000000000042d762 : retf 0xb
0x000000000047841e : retf 0xba
0x000000000048b471 : retf 0xc77
0x0000000000409cc1 : retf 0xd
0x00000000004badb7 : retf 0xd39
0x00000000004ae4e0 : retf 0xe
0x00000000004c1643 : retf 0xe0a
0x00000000004b89f3 : retf 0xe80
0x000000000040b35a : retf 0xf
0x0000000000432fec : retf 0xf01
0x000000000043316c : retf 0xf02
0x00000000004332ec : retf 0xf03
0x000000000043346c : retf 0xf04
0x00000000004335ec : retf 0xf05
0x000000000043376c : retf 0xf06
0x00000000004338ec : retf 0xf07
0x0000000000433a6c : retf 0xf08
0x0000000000433bec : retf 0xf09
0x0000000000433d6c : retf 0xf0a
0x0000000000433eec : retf 0xf0b
0x000000000043406c : retf 0xf0c
0x00000000004341ec : retf 0xf0d
0x000000000043436c : retf 0xf0e
0x00000000004344ec : retf 0xf0f
0x000000000047bac2 : retf 0xf40
0x00000000004258c8 : retf 0xf41
0x000000000041eca3 : retf 0xf44
0x0000000000423b10 : retf 0xf48
0x0000000000465991 : retf 0xf4c
0x00000000004ba908 : retf 0xf64
0x00000000004174e6 : retf 0xf66
0x0000000000434e51 : retf 0xff2
0x000000000042eacb : retf 0xff3
0x0000000000479ad2 : retf 1
0x000000000042e062 : retf 2
0x000000000044ba92 : retf 3
0x0000000000402ebe : retf 4
0x00000000004b2034 : retf 5
0x000000000044149a : retf 6
0x000000000042aed7 : retf 7
0x000000000040fe37 : retf 8
0x000000000042e7eb : retf 9
0x000000000043d975 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043e5c5 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000046706b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000416f37 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000477abe : rol bl, 1 ; mov eax, 1 ; ret
0x00000000004262ed : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042e472 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465922 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041f07f : rol byte ptr [rax + 0x755f067b], 1 ; retf -0x76b8
0x00000000004b1e20 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000447f08 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a0b6 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000457e0c : rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x0000000000460935 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042e9bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c3b6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044fc6b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047aa61 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042ce82 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004822b1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046b291 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b288 ; ret
0x0000000000478b3b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000443096 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000417388 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004668e2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004729b4 : rol byte ptr [rbx], 0x89 ; retf -0x1d3f
0x000000000040348a : rol byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e481 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044c86b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000440ad7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000046e475 : rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004668c2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043e296 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044e382 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043e2f7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e2e2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000432a6e : rol byte ptr [rcx], 1 ; ret 0x148
0x0000000000466922 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004668d2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000444da6 : rol byte ptr [rdx], 0x50 ; call rbx
0x00000000004bea10 : rol byte ptr [rdx], 0xfe ; call rdi
0x000000000047ca77 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000466912 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000049995d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042af25 : rol ch, 1 ; jns 0x42af04 ; retf -0x152d
0x000000000042b075 : rol ch, 1 ; jns 0x42b054 ; retf -0x152d
0x000000000042b1c5 : rol ch, 1 ; jns 0x42b1a4 ; retf -0x152d
0x000000000042b315 : rol ch, 1 ; jns 0x42b2f4 ; retf -0x152d
0x000000000042b465 : rol ch, 1 ; jns 0x42b444 ; retf -0x152d
0x000000000042b5b5 : rol ch, 1 ; jns 0x42b594 ; retf -0x152d
0x000000000042b705 : rol ch, 1 ; jns 0x42b6e4 ; retf -0x152d
0x000000000042b855 : rol ch, 1 ; jns 0x42b834 ; retf -0x152d
0x000000000042b9a5 : rol ch, 1 ; jns 0x42b984 ; retf -0x152d
0x000000000042baf5 : rol ch, 1 ; jns 0x42bad4 ; retf -0x152d
0x000000000042bc45 : rol ch, 1 ; jns 0x42bc24 ; retf -0x152d
0x000000000042bd95 : rol ch, 1 ; jns 0x42bd74 ; retf -0x152d
0x000000000042bee5 : rol ch, 1 ; jns 0x42bec4 ; retf -0x152d
0x000000000042c035 : rol ch, 1 ; jns 0x42c014 ; retf -0x152d
0x000000000042c185 : rol ch, 1 ; jns 0x42c164 ; retf -0x152d
0x00000000004963e5 : rol ch, 1 ; jns 0x4963c4 ; retf -0x152d
0x0000000000496565 : rol ch, 1 ; jns 0x496544 ; retf -0x152d
0x00000000004966e5 : rol ch, 1 ; jns 0x4966c4 ; retf -0x152d
0x0000000000496865 : rol ch, 1 ; jns 0x496844 ; retf -0x152d
0x00000000004969e5 : rol ch, 1 ; jns 0x4969c4 ; retf -0x152d
0x0000000000496b65 : rol ch, 1 ; jns 0x496b44 ; retf -0x152d
0x0000000000496ce5 : rol ch, 1 ; jns 0x496cc4 ; retf -0x152d
0x0000000000496e65 : rol ch, 1 ; jns 0x496e44 ; retf -0x152d
0x0000000000496fe5 : rol ch, 1 ; jns 0x496fc4 ; retf -0x152d
0x0000000000497165 : rol ch, 1 ; jns 0x497144 ; retf -0x152d
0x00000000004972e5 : rol ch, 1 ; jns 0x4972c4 ; retf -0x152d
0x0000000000497465 : rol ch, 1 ; jns 0x497444 ; retf -0x152d
0x00000000004975e5 : rol ch, 1 ; jns 0x4975c4 ; retf -0x152d
0x0000000000497765 : rol ch, 1 ; jns 0x497744 ; retf -0x152d
0x00000000004978e5 : rol ch, 1 ; jns 0x4978c4 ; retf -0x152d
0x00000000004b7e80 : rol cl, 0xc2 ; ret
0x00000000004683ef : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000046686c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000004268a5 : rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x0000000000403e08 : rol dword ptr [rax + 0x7549027a], 1 ; retf
0x00000000004345d0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004675a8 : rol dword ptr [rbp + 0x7418dc9], -0x77 ; retf -0x48f1
0x0000000000400593 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000004c2b7e : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x000000000046b303 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x00000000004445ed : rol ecx, -0x1f ; add edx, ebx ; loopne 0x444657 ; pop rbp ; ret
0x00000000004a369c : rol edx, 1 ; clc ; jmp qword ptr [rcx - 0x3d]
0x0000000000426172 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x4261b9 ; add rax, rdi ; ret
0x0000000000423b17 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004113da : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473b49 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x000000000044715a : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x00000000004607e4 : ror byte ptr [rax + 0x29], cl ; retf -0x3eb8
0x000000000049d778 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cfa1 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049cb22 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046af0c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46af3f ; ret
0x00000000004429d8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479536 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004013d5 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049b2b7 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000047bd3c : ror byte ptr [rax + 0x63], 1 ; ror dword ptr [rax + 1], cl ; retf -0xfd7
0x00000000004434e5 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467d70 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044f7cd : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046dcbc : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044f7be : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000047a0be : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042cd5c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000426142 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488d96 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488cd9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000423b14 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ae228 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004262e5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488536 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004693ba : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fdccd
0x000000000045e01a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b6d8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000426132 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000426162 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000426152 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000415f0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004793d3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000049d651 : ror byte ptr [rax - 0x77], 0xca ; jmp 0x49d62d
0x0000000000459b79 : ror byte ptr [rax - 0x77], 1 ; ret 0x3ee8
0x00000000004133c5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000046a1d5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000040dc49 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000046adaf : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x0000000000411449 : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x0000000000420d82 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000418535 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000413e11 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413e26 ; ret
0x000000000047aef9 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000041071f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046ae30 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041ce56 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000040f712 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000478868 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049cfee : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041cb65 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb1384
0x0000000000472182 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000472f0c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000457182 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047a93a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000490dfe : ror byte ptr [rax - 0x7d], cl ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf -0x7cb8
0x000000000047608d : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004496f3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000469e2e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000448c34 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004a3548 : ror byte ptr [rax - 8], 0xff ; ror byte ptr [rdx - 8], 1 ; jmp rax
0x000000000047abea : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004882e4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046dd1f : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049da6c : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x000000000041b807 : ror byte ptr [rcx + 0x21], 1 ; retf -0x72b7
0x0000000000447f70 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000447169 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004475f0 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000048d2df : ror byte ptr [rcx + 0x39], cl ; retf
0x0000000000403bf4 : ror byte ptr [rcx + rcx*4 - 0x19], 1 ; mov eax, 3 ; syscall
0x000000000046b283 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x0000000000465352 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044fa5e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472635 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043e134 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x0000000000411fda : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000426a69 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044fa82 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000049905d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004428dc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000468418 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041de7d : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046b0b7 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f0f6 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000411cbe : ror byte ptr [rdi], 0x84 ; retf
0x000000000040b5e6 : ror byte ptr [rdi], 0x84 ; retf -0x13
0x0000000000463eb1 : ror byte ptr [rdi], 0x84 ; retf -2
0x000000000040b3b4 : ror byte ptr [rdi], 0x84 ; retf -9
0x000000000046f5c7 : ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000479acf : ror byte ptr [rdi], 0x84 ; retf 1
0x000000000045f06f : ror byte ptr [rdi], 0x84 ; retf 3
0x00000000004469bc : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x000000000043827a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004382b6 : ror byte ptr [rdi], 0x85 ; ret
0x000000000044bc70 : ror byte ptr [rdi], 0x85 ; retf 2
0x000000000044fb96 : ror byte ptr [rdi], 0x88 ; retf
0x00000000004581a7 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490cb8 : ror byte ptr [rdi], 0x8f ; ret
0x000000000044263c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c46c : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047bbaa : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041b797 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x0000000000461ca3 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047aefc : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485b64 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047bafd : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x000000000046734f : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x000000000046720a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040fec2 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000466e3e : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004106ec : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040dc5e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dc48 ; ret
0x0000000000419b49 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041bbc1 : ror byte ptr [rdi], 1 ; test byte ptr [rsi], bh ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000046d995 : ror byte ptr [rdi], cl ; test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484407 : ror byte ptr [rdi], cl ; test bl, bh ; retf -1
0x000000000047be1f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047bf33 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004bded4 : ror byte ptr [rdx - 3], 1 ; jmp qword ptr [rax]
0x00000000004a354c : ror byte ptr [rdx - 8], 1 ; jmp rax
0x00000000004581a6 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x00000000004a38f8 : ror dl, 0xf8 ; call qword ptr [rax]
0x00000000004a35b8 : ror dl, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004345db : ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x000000000041b804 : ror dword ptr [rax + 0x29], 1 ; ror byte ptr [rcx + 0x21], 1 ; retf -0x72b7
0x00000000004110f3 : ror dword ptr [rax + 0x29], cl ; ret
0x000000000041144c : ror dword ptr [rax + 0x29], cl ; retf
0x000000000041caca : ror dword ptr [rax + 0x39], 1 ; retf
0x000000000047bd5f : ror dword ptr [rax + 0x39], 1 ; retf -0x61f1
0x0000000000467f60 : ror dword ptr [rax + 0xf], -0x51 ; retf
0x000000000040e1cd : ror dword ptr [rax + 0xf], 1 ; retf -0x7ab8
0x000000000047d256 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000047bd3f : ror dword ptr [rax + 1], cl ; retf -0xfd7
0x00000000004239e4 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf -0x76b8
0x0000000000423b09 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046598a : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000472f5c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047a3c3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x0000000000432ac2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047e381 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041558d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x415587 ; ret
0x0000000000463c0d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x463c07 ; ret
0x000000000040ebe8 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000405402 : ror dword ptr [rax - 0x7d], cl ; ret
0x0000000000486fd2 : ror dword ptr [rax], -0x42 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x486fad
0x000000000044f232 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042c965 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x0000000000441dbd : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41e086
0x0000000000441e02 : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41e086
0x000000000043bda7 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000489178 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x000000000046830b : ror dword ptr [rdi], -0x6c ; ret
0x000000000042f228 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f934 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f706 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042f686 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042f9c4 : ror dword ptr [rdi], -0x7b ; je 0x42f9d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f4bb : ror dword ptr [rdi], -0x7b ; jno 0x42f4d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f583 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f200 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000480aa5 : ror dword ptr [rdi], -0x7d ; retf
0x00000000004196cf : ror dword ptr [rdi], 1 ; xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041558c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x415588 ; ret
0x0000000000463c0c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x463c08 ; ret
0x0000000000447164 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004712ef : sahf ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004a35f9 : sahf ; clc ; inc eax ; lahf ; clc ; jmp rax
0x000000000040167c : sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042b92e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479a11 : sahf ; ret 0x148
0x00000000004b8d65 : sahf ; ret 0x38ae
0x0000000000451380 : sahf ; ret 0x8348
0x000000000047bd64 : sahf ; ret 0xe8c1
0x000000000049b993 : sahf ; ret 0xf45
0x0000000000402d3e : sahf ; retf
0x00000000004bdf01 : sahf ; std ; call qword ptr [rax]
0x000000000041738e : sal bh, 0xd8 ; ret
0x000000000043e5d9 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004229e7 : sal bh, 1 ; ret 0x8000
0x00000000004228a7 : sal bh, 1 ; ret 0xc000
0x0000000000422767 : sal bh, 1 ; ret 0xe000
0x0000000000422627 : sal bh, 1 ; ret 0xf000
0x00000000004224e7 : sal bh, 1 ; ret 0xf800
0x00000000004223a7 : sal bh, 1 ; ret 0xfc00
0x0000000000422267 : sal bh, 1 ; ret 0xfe00
0x0000000000422127 : sal bh, 1 ; ret 0xff00
0x0000000000421fe7 : sal bh, 1 ; ret 0xff80
0x0000000000421ea7 : sal bh, 1 ; ret 0xffc0
0x0000000000421d67 : sal bh, 1 ; ret 0xffe0
0x0000000000421c27 : sal bh, 1 ; ret 0xfff0
0x0000000000421ae7 : sal bh, 1 ; ret 0xfff8
0x00000000004219a7 : sal bh, 1 ; ret 0xfffc
0x0000000000421867 : sal bh, 1 ; ret 0xfffe
0x000000000045a7b4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000046705f : sal bl, 1 ; ret
0x0000000000473662 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000426128 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049e263 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049e248 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000045900e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004429f1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000413e14 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000442a01 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x0000000000416ee5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043dae0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000415590 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042e61b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dc63 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000047415f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000046709b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004a3e8c : sal byte ptr [rbp - 7], 0xff ; sal byte ptr [rbp - 7], 1 ; jmp rax
0x00000000004a3e90 : sal byte ptr [rbp - 7], 1 ; jmp rax
0x000000000047e4bd : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000041d617 : sal byte ptr [rcx + rbp*2 + 0x48], 0x8d ; adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000423a5c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004731a7 : sal byte ptr [rcx + rsi + 0x4c], 0x89 ; retf -0x76b4
0x00000000004429d6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440ee2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004658eb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000047645d : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x476482
0x0000000000423913 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000046d791 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040db99 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047b241 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000478ddf : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000473ff7 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x0000000000415f08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000042132b : sal dword ptr [rdi - 0x76b70001], 1 ; ret 0xc6eb
0x0000000000432ac5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043bde6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000044dfc7 : salc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042fca9 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000049ecc1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a391d : salc ; clc ; jmp rax
0x000000000043dd5b : salc ; clc ; ret
0x00000000004c8a51 : salc ; cld ; call qword ptr [rax]
0x000000000043f47d : salc ; mov eax, 4 ; syscall
0x000000000043f4cc : salc ; mov eax, 5 ; syscall
0x000000000046ad5d : salc ; mov eax, 6 ; syscall
0x000000000044f240 : salc ; mov rdi, r13 ; mov eax, r8d ; syscall
0x0000000000473ff9 : salc ; ret
0x0000000000409136 : salc ; retf
0x00000000004be40d : salc ; std ; call qword ptr [rbx]
0x00000000004be401 : salc ; std ; jmp rax
0x00000000004be3fd : salc ; std ; ljmp ptr [rcx] ; salc ; std ; jmp rax
0x000000000041f0e2 : salc ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41f0f4 ; call rax
0x00000000004a3711 : sar al, 0xff ; jnp 0x4a36df ; clc ; dec dword ptr [rbx] ; ret 0xfff8
0x0000000000474521 : sar al, 0xff ; xor eax, eax ; ret
0x00000000004550c3 : sar bl, 0xff ; call rax
0x0000000000485c4a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000048400c : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000484653 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044d943 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000471451 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047a89c : sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000044a0f1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a3f60 : sar byte ptr [rbp - 7], 1 ; push rax ; jge 0x4a3f67 ; call qword ptr [rax]
0x00000000004015e4 : sar byte ptr [rbx - 0x38b7ff94], 5 ; ret 0x2c
0x00000000004a3f1c : sar byte ptr [rbx - 7], 1 ; push rax ; jnp 0x4a3f23 ; call qword ptr [rax]
0x000000000044de69 : sar byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44de7d ; call rax
0x000000000044453d : sar byte ptr [rcx], cl ; ret
0x0000000000475062 : sar byte ptr [rdi + 0x4b61fc], 0xe8 ; ret
0x00000000004750ec : sar byte ptr [rdi + 0x4bc858], 0x83 ; ret
0x000000000046bd59 : sar byte ptr [rdx + 1], 0xeb ; retf
0x0000000000478a70 : sar byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x000000000044140c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047ca4c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b96ff : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000441fc4 : sar ch, 0xff ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000441fb6 : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441fa9 : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004be065 : sar ch, cl ; push qword ptr [rdi + rdx*8] ; std ; jmp rsp
0x0000000000413cb7 : sar dword ptr [rax + 2], 1 ; syscall
0x00000000004358a3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4358ae ; ret
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402cfe : sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004a3759 : sar eax, -1 ; add dl, 0xf8 ; call qword ptr [rax]
0x00000000004a3695 : sar eax, -1 ; ret 0xfff8
0x00000000004a36d1 : sar eax, -1 ; xchg eax, esi ; sar eax, -1 ; ret 0xfff8
0x0000000000464d7c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047ce7b : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a38d5 : sar eax, cl ; call rax
0x00000000004bdf45 : sar ebp, -1 ; and dl, al ; std ; push qword ptr [rax] ; ret 0xfffd
0x0000000000441e8e : sar ebp, -1 ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441e81 : sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004bdf69 : sar ebp, -1 ; ret 0xfffd
0x00000000004b9463 : sar ecx, 1 ; jnp 0x4b9424 ; ret
0x000000000045a72e : sar edx, 2 ; lea rdi, qword ptr [rax + 0x18] ; call 0x466959
0x00000000004262e7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000464d7b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004262e6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004be584 : sbb al, 0 ; add byte ptr [rax], al ; and al, 0xf4 ; call rax
0x0000000000440101 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004c01c5 : sbb al, 0 ; add byte ptr [rax], cl ; push rbp ; cmc ; jmp qword ptr [rcx]
0x00000000004944ca : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494423 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x0000000000476c2a : sbb al, 0x24 ; add rsp, 0x18 ; jmp r11
0x0000000000476f99 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x00000000004770ab : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x0000000000419533 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x0000000000467d6e : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x0000000000463543 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x00000000004ba762 : sbb al, 0x8c ; retf
0x0000000000470c39 : sbb al, 0xb8 ; retf 0
0x000000000049cb76 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004c2f91 : sbb al, 0xf8 ; call qword ptr [rax]
0x00000000004a398d : sbb al, 0xf9 ; call qword ptr [rsi + 0x26fff91b]
0x00000000004a3ac9 : sbb al, 0xf9 ; call rsp
0x00000000004a3ac5 : sbb al, 0xf9 ; inc dword ptr [rsp + rbx - 7] ; call rsp
0x00000000004a3949 : sbb al, 0xf9 ; jmp qword ptr [rax]
0x000000000047c070 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004946aa : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000460ee5 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004946a9 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049ecaf : sbb al, ch ; retf
0x00000000004a3b5d : sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a399d : sbb bh, cl ; call rsi
0x00000000004a3999 : sbb bh, cl ; inc dword ptr [rsi + 0x1a] ; stc ; call rsi
0x00000000004b94f2 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004b81e5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000440662 : sbb bl, dl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004786d4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000049ef1b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041c4d0 : sbb byte ptr [r9 + 0x39], r9b ; ret 0x850f
0x000000000041118a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047aef6 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047189b : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004786d5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417d43 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000048ddb8 : sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000411446 : sbb byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x000000000043eada : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000448431 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000410e13 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf -0x428b
0x0000000000418d5b : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x0000000000409a3e : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405d17
0x00000000004092ad : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405d18
0x000000000040d8ba : sbb byte ptr [rax - 0x77], cl ; cmp ch, cl ; retf -5
0x00000000004155f1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000490b06 : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000416e87 : sbb byte ptr [rax - 0x77], cl ; retf -0x2015
0x000000000049120e : sbb byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000416e62 : sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x0000000000410ee1 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041df17 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412f63 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049ef1c : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042c7de : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004497d4 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c7dd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000047882b : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000415eaf : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043f421 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000049488a : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bd2b9 : sbb byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000402b0c : sbb byte ptr [rbp + 0x148002c], dl ; retf -0x76b8
0x00000000004650a5 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000444d19 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000417703 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042cc21 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004115a9 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416f27 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041de5a : sbb byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004500c1 : sbb byte ptr [rcx + 0x29], cl ; retf
0x000000000041c4d1 : sbb byte ptr [rcx + 0x39], cl ; ret 0x850f
0x0000000000464beb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004717b9 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041b959 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000465183 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041cad3 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000411483 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041118b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000004a3964 : sbb byte ptr [rcx], 0xf9 ; call qword ptr [rax]
0x00000000004651d7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047aef7 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000049809d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004041b4 : sbb byte ptr [rdi], cl ; retf
0x000000000041e632 : sbb byte ptr [rdi], cl ; test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004a39f1 : sbb cl, bh ; call qword ptr [rdx + 0x22fff91e]
0x00000000004a3b69 : sbb cl, bh ; inc dword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004a39ed : sbb cl, bh ; jmp qword ptr [rdx]
0x00000000004a3b6d : sbb cl, bh ; jmp rax
0x0000000000413615 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x00000000004235dd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a07d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004231cd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422cd9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004234e9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bcca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b4ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b8da : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042abdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422f5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429b9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042329d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004235b9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b299 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423689 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429edd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004296bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a89d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042343d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422c2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000042302d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b78a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afaa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c0ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042350d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422cfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004299fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422d9f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004230fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429b33 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a833 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a353 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bfbb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042336d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ab73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429e73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429993 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a693 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b7db : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042affb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a3b6c : sbb cl, dil ; jmp rax
0x00000000004a3928 : sbb dl, 0xf8 ; call rax
0x00000000004179e2 : sbb dl, byte ptr [rbx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000476c2f : sbb dl, dh ; jmp r11
0x00000000004947c8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049cd4c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x0000000000494751 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004947c9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000442964 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004927ce : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000453718 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004baa9d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000043d7b7 : sbb eax, -1 ; ret
0x0000000000442d65 : sbb eax, 0 ; leave ; ret
0x00000000004a3945 : sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a39fd : sbb eax, 0x1d42fff9 ; stc ; call rdx
0x00000000004a397d : sbb eax, 0x1d56fff9 ; stc ; jmp rsi
0x00000000004a3b39 : sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x000000000049ede0 : sbb eax, 0x22d8fb ; jne 0x49edd0 ; pop rbx ; ret
0x00000000004b94f3 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000049432d : sbb eax, 0x894d0000 ; retf
0x0000000000452c7d : sbb eax, 0xe81ffec1 ; retf -0x52a
0x0000000000494571 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004945e9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049257e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000478b3a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049cb21 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043d7b5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004ba608 : sbb ebp, ebx ; retf
0x000000000047b8a9 : sbb ebx, 0x89000001 ; ret
0x000000000045c820 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000446e77 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a3965 : sbb ecx, edi ; call qword ptr [rax]
0x00000000004a3b61 : sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004a3a25 : sbb ecx, edi ; jmp rdx
0x00000000004ba399 : sbb edi, ebp ; retf
0x00000000004a3a11 : sbb edi, ecx ; call qword ptr [rdx]
0x00000000004a3955 : sbb edi, ecx ; call rax
0x00000000004a3951 : sbb edi, ecx ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a3991 : sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000004a3b51 : sbb edi, ecx ; jmp rax
0x00000000004a399c : sbb r15b, cl ; call rsi
0x0000000000496a0f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049670f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049760f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047ad9a : scasb al, byte ptr [rdi] ; add byte ptr [r15 + 0x6cd4a4], r15b ; call rdx
0x0000000000425bfd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000049790f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042bd1e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000049700f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004baa49 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000004a3cb0 : scasb al, byte ptr [rdi] ; or eax, 0x1554fff9 ; stc ; call rsp
0x0000000000496d0f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x00000000004bdf1d : scasb al, byte ptr [rdi] ; std ; call rax
0x0000000000419751 : scasd eax, dword ptr [rdi] ; adc byte ptr [rbx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042be1d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042569d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000411e0d : scasd eax, dword ptr [rdi] ; and eax, 0x29480005 ; ret
0x0000000000401434 : scasd eax, dword ptr [rdi] ; ret
0x000000000041102c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000401595 : scasd eax, dword ptr [rdi] ; ret 0x2c
0x000000000043e2fa : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420d88 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000401553 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043e2e5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044fd80 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048853d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000467f63 : scasd eax, dword ptr [rdi] ; retf
0x0000000000488541 : scasd eax, dword ptr [rdi] ; retf -0x3eb8
0x000000000047abe1 : scasd eax, dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004b9774 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x00000000004b89ef : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004429dc : setae al ; ret
0x000000000041738c : setne al ; neg eax ; ret
0x0000000000444540 : setne dl ; jmp 0x444528
0x0000000000465fc5 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497e5d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d9ff : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042165b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000043bda3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004215d5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042fbbb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042fbd2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465b66 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465b77 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042fab1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af450 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b92fd : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x00000000004b95e8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000044f8a8 : shl dword ptr [rdi], 0 ; je 0x44f8b6 ; ret
0x000000000043d9e2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042fb36 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d85b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000465b62 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042165f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042fbed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbbf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fb51 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f4c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042fa11 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004445f1 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004445ee : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000047909c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000479027 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478ff6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042c961 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000476461 : shl edx, 5 ; add rdx, rax ; jmp 0x47647e
0x000000000047909b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000479026 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478ff5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000476460 : shl rdx, 5 ; add rdx, rax ; jmp 0x47647f
0x000000000047645f : shl rdx, 5 ; add rdx, rax ; jmp 0x476480
0x0000000000451ce5 : shr al, 0x95 ; ret
0x00000000004b8ba4 : shr al, cl ; add al, 0x3d ; retf
0x000000000040f437 : shr al, cl ; ret
0x000000000046aabf : shr bl, cl ; ret
0x000000000044602d : shr bl, cl ; ret 0x438b
0x00000000004a34c8 : shr byte ptr [rax - 8], 1 ; push qword ptr [rax + 0x6a] ; clc ; call qword ptr [rax]
0x000000000042e61f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000004675a6 : shr byte ptr [rcx], 1 ; rol dword ptr [rbp + 0x7418dc9], -0x77 ; retf -0x48f1
0x000000000044cbe8 : shr byte ptr [rcx], cl ; ret
0x0000000000468400 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000004262eb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004ba9a7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000041e123 : shr byte ptr [rdx], 1 ; add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x000000000045f017 : shr cl, cl ; ret
0x000000000043df06 : shr dword ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf -0x78f1
0x0000000000426d79 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043e50a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e4e9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004791ac : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479131 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000479100 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464e83 : shr edx, 2 ; sub eax, edx ; ret
0x00000000004791ab : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479130 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004790ff : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464e82 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ae629 : sldt word ptr [rax] ; ret
0x00000000004460bc : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041de06 : stc ; add dword ptr [rdi + rcx + 0x44], eax ; retf -0x76b8
0x00000000004a3b9a : stc ; call qword ptr [rax + 0x10fff910]
0x00000000004a3b92 : stc ; call qword ptr [rax + 0x10fff911]
0x00000000004a3b8a : stc ; call qword ptr [rax + 0x10fff912]
0x00000000004a3b82 : stc ; call qword ptr [rax + 0x10fff913]
0x00000000004a3b7a : stc ; call qword ptr [rax + 0x10fff914]
0x00000000004a3b5e : stc ; call qword ptr [rax + 0x20fff919]
0x00000000004a3946 : stc ; call qword ptr [rax + 0x20fff91c]
0x00000000004a3966 : stc ; call qword ptr [rax]
0x00000000004a39f2 : stc ; call qword ptr [rdx + 0x22fff91e]
0x00000000004a3a12 : stc ; call qword ptr [rdx]
0x00000000004a398e : stc ; call qword ptr [rsi + 0x26fff91b]
0x00000000004c4f7a : stc ; call qword ptr [rsi]
0x00000000004a3956 : stc ; call rax
0x0000000000467199 : stc ; call rbx
0x00000000004c4832 : stc ; call rdi
0x00000000004a3a02 : stc ; call rdx
0x00000000004a399e : stc ; call rsi
0x00000000004a3aca : stc ; call rsp
0x000000000047abe2 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000487b07 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485dba : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a3b6a : stc ; inc dword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004a3952 : stc ; inc dword ptr [rax + 0x1b] ; stc ; call rax
0x00000000004a3eca : stc ; inc dword ptr [rax] ; ja 0x4a3ecd ; jmp qword ptr [rax]
0x00000000004a3e9a : stc ; inc dword ptr [rax] ; jbe 0x4a3e9d ; call qword ptr [rax]
0x00000000004a3ef2 : stc ; inc dword ptr [rax] ; jnp 0x4a3ef5 ; call qword ptr [rax]
0x00000000004a3b5a : stc ; inc dword ptr [rax] ; sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a3942 : stc ; inc dword ptr [rax] ; sbb eax, 0x1c90fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a39fe : stc ; inc dword ptr [rdx + 0x1d] ; stc ; call rdx
0x00000000004a399a : stc ; inc dword ptr [rsi + 0x1a] ; stc ; call rsi
0x00000000004a398a : stc ; inc dword ptr [rsi] ; sbb al, 0xf9 ; call qword ptr [rsi + 0x26fff91b]
0x00000000004a3ac6 : stc ; inc dword ptr [rsp + rbx - 7] ; call rsp
0x00000000004a3ee2 : stc ; inc eax ; ja 0x4a3ee5 ; jmp rax
0x00000000004a3ec2 : stc ; inc eax ; jbe 0x4a3ec5 ; jmp rax
0x00000000004a3e8a : stc ; inc eax ; jne 0x4a3e8d ; call rax
0x00000000004a397a : stc ; inc esi ; sbb eax, 0x1d56fff9 ; stc ; jmp rsi
0x000000000042add2 : stc ; je 0x42ad9e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496252 : stc ; je 0x49621e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a3d9e : stc ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3d96 : stc ; jmp qword ptr [rax + 0x20fff910]
0x00000000004a3d8e : stc ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3d86 : stc ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a3d7e : stc ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a3b72 : stc ; jmp qword ptr [rax + 0x20fff915]
0x00000000004a394a : stc ; jmp qword ptr [rax]
0x00000000004a39ee : stc ; jmp qword ptr [rdx]
0x00000000004a3992 : stc ; jmp qword ptr [rsi]
0x00000000004a393a : stc ; jmp rax
0x00000000004a3a26 : stc ; jmp rdx
0x00000000004a3982 : stc ; jmp rsi
0x00000000004b9464 : stc ; jnp 0x4b9423 ; ret
0x0000000000432478 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d907 : stc ; mov r15, rax ; jmp 0x46d8d5
0x00000000004a3b66 : stc ; push qword ptr [rax + 0x40fff918] ; sbb cl, bh ; jmp rax
0x00000000004a394e : stc ; push qword ptr [rax + 0x40fff91b] ; sbb edi, ecx ; call rax
0x00000000004a3e86 : stc ; push qword ptr [rax - 0x3f00068b] ; jne 0x4a3e91 ; call rax
0x00000000004a3d72 : stc ; push qword ptr [rax] ; adc eax, 0x14b0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3996 : stc ; push qword ptr [rsi + 0x46fff91a] ; sbb bh, cl ; call rsi
0x00000000004a3ac2 : stc ; push qword ptr [rsp + rbx + 0x1c44fff9] ; stc ; call rsp
0x00000000004a3f62 : stc ; push rax ; jge 0x4a3f65 ; call qword ptr [rax]
0x00000000004a3f42 : stc ; push rax ; jl 0x4a3f45 ; call qword ptr [rax]
0x00000000004a3e96 : stc ; push rax ; jne 0x4a3e9d ; inc dword ptr [rax] ; jbe 0x4a3ea1 ; call qword ptr [rax]
0x00000000004a3f1e : stc ; push rax ; jnp 0x4a3f21 ; call qword ptr [rax]
0x00000000004a3eee : stc ; push rax ; jp 0x4a3ef5 ; inc dword ptr [rax] ; jnp 0x4a3ef9 ; call qword ptr [rax]
0x00000000004a3b36 : stc ; push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x0000000000400e73 : stc ; ret 0x2c
0x00000000004a114f : stc ; retf
0x000000000043dd5a : stc ; salc ; clc ; ret
0x000000000040dcb5 : stc ; syscall
0x0000000000435da4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000041c357 : std ; add byte ptr [rax - 0x6af0ff94], ch ; ret 0x8349
0x00000000004bdec2 : std ; call qword ptr [rax - 0x1f0002bf]
0x00000000004bdf2a : std ; call qword ptr [rax - 0x2f000249]
0x00000000004bdf1a : std ; call qword ptr [rax - 0x2f000252]
0x00000000004bdf0a : std ; call qword ptr [rax - 0x2f00025b]
0x00000000004bdee2 : std ; call qword ptr [rax]
0x00000000004be40e : std ; call qword ptr [rbx]
0x00000000004bdf2e : std ; call rax
0x00000000004c73d2 : std ; call rcx
0x00000000004be42a : std ; call rsp
0x00000000004be3fa : std ; dec dword ptr [rax - 0x2a] ; std ; ljmp ptr [rcx] ; salc ; std ; jmp rax
0x00000000004403cc : std ; dec dword ptr [rax - 0x75] ; jge 0x4403d8 ; call rbx
0x000000000044067f : std ; dec dword ptr [rax - 0x75] ; jge 0x44068b ; call rbx
0x0000000000442217 : std ; dec dword ptr [rax - 0x75] ; jge 0x442223 ; call rbx
0x000000000043f8e1 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044028a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044068d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440297 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4402a3 ; call rbx
0x00000000004403be : std ; dec dword ptr [rcx - 0x75] ; jge 0x4403ca ; call rbx
0x0000000000440501 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44050d ; call rbx
0x0000000000440671 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44067d ; call rbx
0x0000000000441e8f : std ; dec dword ptr [rcx - 0x75] ; jge 0x441e9b ; call rbx
0x0000000000441fb7 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441fc3 ; call rbx
0x00000000004420fa : std ; dec dword ptr [rcx - 0x75] ; jge 0x442106 ; call rbx
0x00000000004421fb : std ; dec dword ptr [rcx - 0x75] ; jge 0x442207 ; call rbx
0x00000000004bdf82 : std ; dec dword ptr [rdx - 0x3b] ; std ; ljmp ptr [rax - 0x3b] ; std ; jmp rax
0x00000000004bf031 : std ; hlt ; call qword ptr [rax]
0x00000000004bf049 : std ; hlt ; call qword ptr [rdx]
0x00000000004bdebe : std ; inc dword ptr [rax + 0x3f] ; std ; call qword ptr [rax - 0x1f0002bf]
0x00000000004bde56 : std ; inc dword ptr [rax + 0x71] ; std ; jmp qword ptr [rax]
0x00000000004bdece : std ; inc dword ptr [rax - 0x2f0002b8] ; std ; jmp qword ptr [rax]
0x00000000004bde5e : std ; inc dword ptr [rax] ; jne 0x4bde65 ; jmp rax
0x00000000004be02e : std ; inc dword ptr [rax] ; retf
0x000000000047365f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004bdede : std ; inc eax ; push rcx ; std ; call qword ptr [rax]
0x000000000047830e : std ; jbe 0x47831b ; ret
0x00000000004bdefa : std ; jmp qword ptr [rax - 0x2f0002c3]
0x00000000004bdef6 : std ; jmp qword ptr [rax - 0x5f0002a1]
0x00000000004bde5a : std ; jmp qword ptr [rax]
0x00000000004c958a : std ; jmp qword ptr [rbx]
0x00000000004bdf8e : std ; jmp qword ptr [rdx]
0x00000000004bdf8a : std ; jmp rax
0x00000000004be422 : std ; jmp rdi
0x00000000004be06a : std ; jmp rsp
0x00000000004bdfca : std ; lcall ptr [rax - 0x15000236] ; retf
0x00000000004bdfc2 : std ; lcall ptr [rdi] ; retf -3
0x00000000004be40a : std ; lcall ptr [rsi] ; salc ; std ; call qword ptr [rbx]
0x00000000004bdf5e : std ; ljmp ptr [rax + 0x50fffdc2] ; ret 0xfffd
0x00000000004bdf86 : std ; ljmp ptr [rax - 0x3b] ; std ; jmp rax
0x00000000004bdf52 : std ; ljmp ptr [rax - 0x5700023e] ; ret 0xfffd
0x00000000004be3fe : std ; ljmp ptr [rcx] ; salc ; std ; jmp rax
0x000000000046a9a6 : std ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000413d6c : std ; mov eax, 3 ; syscall
0x000000000047d6f8 : std ; mov r15, rax ; jmp 0x47d712
0x000000000043f87f : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x0000000000431c9b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bdeda : std ; push qword ptr [rax + 0x4f] ; std ; inc eax ; push rcx ; std ; call qword ptr [rax]
0x00000000004bdfb2 : std ; push qword ptr [rax - 0x38] ; std ; jmp rax
0x00000000004bdf4a : std ; push qword ptr [rax] ; ret 0xfffd
0x00000000004be066 : std ; push qword ptr [rdi + rdx*8] ; std ; jmp rsp
0x00000000004bde42 : std ; push rax ; std ; call rax
0x0000000000403cff : std ; ret 0xffbf
0x00000000004ba39a : std ; retf
0x0000000000458df1 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440ee0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000048921b : sti ; add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c74c2 : sti ; call qword ptr [rax]
0x00000000004c771a : sti ; call rsp
0x000000000046bea7 : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004748c4 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000466615 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000463ead : sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf -2
0x000000000049ede1 : sti ; fsub dword ptr [rdx] ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004bef79 : sti ; hlt ; call qword ptr [rbx]
0x000000000044e746 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000045899e : sti ; inc dword ptr [rbx - 0x7af00008] ; retf -3
0x00000000004c81aa : sti ; jmp qword ptr [rax]
0x00000000004c72ba : sti ; jmp qword ptr [rdx]
0x00000000004c714a : sti ; jmp rsi
0x0000000000432078 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043eb63 : sti ; mov eax, 0x3d ; syscall
0x000000000043f783 : sti ; mov eax, 0x48 ; syscall
0x000000000046a721 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044ce7b : sti ; mov eax, 3 ; syscall
0x00000000004b95ea : sti ; ret
0x000000000048ef56 : sti ; ret 0xffbf
0x000000000041db89 : sti ; retf
0x00000000004a3710 : sti ; sar al, 0xff ; jnp 0x4a36e0 ; clc ; dec dword ptr [rbx] ; ret 0xfff8
0x000000000040f1d0 : sti ; syscall
0x000000000044f2e7 : sti ; test rax, rax ; je 0x44f2f5 ; call rax
0x0000000000440130 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000443713 : stosb byte ptr [rdi], al ; add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x00000000004b9ac4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000444502 : stosb byte ptr [rdi], al ; cwde ; sub byte ptr [rax], al ; test eax, eax ; je 0x444518 ; ret
0x0000000000409262 : stosb byte ptr [rdi], al ; retf -1
0x000000000046bea6 : stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004685e8 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004685e9 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004a3625 : stosd dword ptr [rdi], eax ; clc ; jmp qword ptr [rax]
0x00000000004c6901 : stosd dword ptr [rdi], eax ; cli ; call rdx
0x00000000004a17f0 : stosd dword ptr [rdi], eax ; fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004680c1 : stosd dword ptr [rdi], eax ; push rdx ; add byte ptr es:[rax - 0x7d], cl ; ret
0x00000000004babcc : stosd dword ptr [rdi], eax ; ret
0x00000000004baaca : stosd dword ptr [rdi], eax ; retf -0x5d02
0x00000000004685e7 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004bafb1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000049abf3 : sub ah, byte ptr [rbx] ; add byte ptr [rax], cl ; ret
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000040161e : sub al, 0 ; xor eax, eax ; ret
0x00000000004c6294 : sub al, 0x7d ; add byte ptr [rax], al ; cwde ; cli ; jmp rsp
0x0000000000442f4a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042f203 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041db6c : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f0e3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41f0f3 ; call rax
0x0000000000480f81 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x0000000000460173 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045fc1a : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000046407c : sub bh, bh ; loopne 0x464019 ; mov eax, 0xffffffff ; ret
0x00000000004c7719 : sub bl, bh ; call rsp
0x000000000049e231 : sub bl, dh ; ret
0x000000000049e230 : sub bl, r14b ; ret
0x000000000041118e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046dd7c : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046cb66 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000045d650 : sub byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x0000000000483d67 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041118f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466cb0 : sub byte ptr [rax - 0x73], cl ; je 0x466cdf ; call rbx
0x000000000041b083 : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret
0x000000000041eb54 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004056df : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000410ee5 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000046310c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000042572d : sub byte ptr [rax - 0x77], cl ; retf
0x000000000040d539 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004822dc : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044292d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000442c7f : sub byte ptr [rax], al ; cmp rdx, rax ; jne 0x442c68 ; ret
0x00000000004787c1 : sub byte ptr [rax], al ; jne 0x4787d8 ; add rsp, 0x38 ; ret
0x000000000044452a : sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000445a55 : sub byte ptr [rax], al ; ret
0x0000000000444504 : sub byte ptr [rax], al ; test eax, eax ; je 0x444516 ; ret
0x000000000043ffa5 : sub byte ptr [rax], al ; test rax, rax ; je 0x43ffb6 ; ret
0x000000000040dc1a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415270 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004444e3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000004444e2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004bf89a : sub byte ptr [rbx - 0x5ff1adfb], al ; add al, byte ptr [rdx] ; retf
0x0000000000417ef9 : sub byte ptr [rbx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044d39a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000049b021 : sub byte ptr [rcx - 0x77], cl ; xchg dword ptr [rax - 0x17000000], esp ; retf
0x00000000004880f4 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041ec6c : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b15b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000047bc1d : sub cl, al ; call 0xffffffff8a09e548
0x000000000047c574 : sub cl, al ; call 0xffffffff8a09ee9f
0x0000000000471d3e : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000004685ea : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000414a55 : sub cl, ch ; ret 0xfffe
0x00000000004c5558 : sub dh, bh ; stc ; call rsi
0x0000000000476fca : sub dl, dh ; call r11
0x00000000004b996d : sub dword ptr [rax + 0x1e], eax ; cli ; test dl, bh ; retf -0x2081
0x000000000041636b : sub dword ptr [rax + 0x39], ecx ; retf
0x000000000046dd89 : sub dword ptr [rax + rcx*2], 0x39 ; ret 0x576
0x0000000000445a54 : sub dword ptr [rax], 0 ; ret
0x0000000000402afb : sub dword ptr [rbp - 0x76b7ffd4], edx ; ret 0x8348
0x00000000004ba602 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x00000000004302c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4302dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43042d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43057d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4306cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43081d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43096d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430bf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ead ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430fe7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ffd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431137 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43114d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431287 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43129d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4313ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431527 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43153d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430223 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043021f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000045a955 : sub dword ptr [rdi], esp ; add byte ptr [rbp + 0xa], dh ; jmp 0x45a987
0x00000000004302cd : sub dword ptr [rdi], esp ; jmp r9
0x000000000041af38 : sub dword ptr [rdx], ecx ; mov eax, 2 ; syscall
0x000000000042f9e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004baeba : sub dword ptr [rsi], 0x76 ; retf
0x000000000041ec49 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000454e22 : sub eax, 0x26e8004b ; retf -6
0x0000000000454e09 : sub eax, 0x3fe8004b ; retf -6
0x000000000041caa2 : sub eax, 0x441f0f ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000454df0 : sub eax, 0x58e8004b ; retf -6
0x0000000000454dd7 : sub eax, 0x71e8004b ; retf -6
0x000000000045d721 : sub eax, 0x83000000 ; ret
0x0000000000454e3b : sub eax, 0xde8004b ; retf -6
0x00000000004b8606 : sub eax, 0xea4ca798 ; retf
0x000000000043ee1c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d804 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043dc34 : sub eax, 1 ; ret
0x0000000000478566 : sub eax, dword ptr [0] ; ret
0x0000000000469e49 : sub eax, dword ptr [rax + 0x26] ; add byte ptr [rax + 1], cl ; retf
0x0000000000417319 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004172a6 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b5455], 1 ; ret
0x0000000000417b7b : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x0000000000417215 : sub eax, dword ptr [rax] ; ret
0x00000000004189e2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x4189f2 ; call rax
0x00000000004018ef : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049a081 : sub eax, dword ptr [rcx + r8*4] ; je 0x49a067 ; ret
0x000000000049a082 : sub eax, dword ptr [rcx + rax*4] ; je 0x49a066 ; ret
0x0000000000417a4e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043e65a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43e646 ; ret
0x0000000000416f03 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000417214 : sub eax, dword ptr cs:[rax] ; ret
0x0000000000415bbd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466ceb : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000416639 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047a75d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000422a4c : sub eax, ecx ; ret
0x0000000000423b19 : sub eax, edi ; ret
0x0000000000473945 : sub eax, edx ; mov rdi, rax ; call 0x400357
0x00000000004135be : sub eax, edx ; ret
0x000000000043dde7 : sub eax, edx ; vzeroupper ; ret
0x0000000000415d1e : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000413418 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044010e : sub ebp, 0x45 ; add byte ptr [rax], al ; ret
0x000000000043ec0e : sub ebp, 0x5a ; add byte ptr [rax], al ; ret
0x00000000004b985e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b82f5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479745 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004445ec : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000416f30 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000416f25 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000426174 : sub edx, eax ; jbe 0x4261b7 ; add rax, rdi ; ret
0x0000000000426184 : sub edx, eax ; jbe 0x4261b9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426194 : sub edx, eax ; jbe 0x4261b9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004261a4 : sub edx, eax ; jbe 0x4261b9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000442301 : sub edx, esi ; mov eax, r12d ; syscall
0x0000000000410fc2 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000412bd4 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000004bf9d1 : sub esi, ebp ; jmp qword ptr [rsi]
0x00000000004be400 : sub esi, edx ; std ; jmp rax
0x0000000000474814 : sub esp, 0x1000 ; mov rsi, rsp ; syscall
0x000000000046ae52 : sub esp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000416764 : sub esp, 0x80 ; call 0x4429e8
0x00000000004167fb : sub esp, 0x80 ; call 0x442a18
0x000000000046a5eb : sub esp, 0x98 ; syscall
0x00000000004a12a1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000046abd6 : sub esp, 8 ; syscall
0x0000000000416638 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000043dc33 : sub rax, 1 ; ret
0x0000000000478565 : sub rax, qword ptr [0] ; ret
0x0000000000417c36 : sub rax, qword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417b7a : sub rax, qword ptr [r8] ; add ebx, esi ; ret
0x0000000000417a4d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000478564 : sub rax, qword ptr fs:[0] ; ret
0x0000000000466cea : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000423b18 : sub rax, rdi ; ret
0x0000000000473944 : sub rax, rdx ; mov rdi, rax ; call 0x400358
0x00000000004135bd : sub rax, rdx ; ret
0x000000000043dde6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000426173 : sub rdx, rax ; jbe 0x4261b8 ; add rax, rdi ; ret
0x0000000000442300 : sub rdx, rsi ; mov eax, r12d ; syscall
0x0000000000410fc1 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000412bd3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000046ae51 : sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000416763 : sub rsp, 0x80 ; call 0x4429e9
0x00000000004167fa : sub rsp, 0x80 ; call 0x442a19
0x000000000046a5ea : sub rsp, 0x98 ; syscall
0x00000000004a12a0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046abd5 : sub rsp, 8 ; syscall
0x000000000049abf2 : sub spl, byte ptr [r11] ; add byte ptr [rax], cl ; ret
0x00000000004003da : syscall
0x0000000000443bdf : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000411103 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000049335c : test ah, al ; or eax, 0x894d0000 ; retf
0x000000000044f446 : test ah, ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x000000000049432b : test ah, cl ; sbb eax, 0x894d0000 ; retf
0x00000000004c8db5 : test al, 0 ; add byte ptr [rax + 0x33], bh ; std ; call rsp
0x0000000000416039 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049a273 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c543 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000041d766 : test al, 0x6c ; add byte ptr [rax + 0xf], cl ; retf -0x76b4
0x000000000041c359 : test al, 0x6c ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x00000000004c0ab8 : test al, 0x6f ; cmc ; jmp qword ptr [rax]
0x00000000004b8bb7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b859e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000047dd6d : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000442577 : test al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004bc730 : test al, 0xc2 ; add byte ptr [r8], al ; add byte ptr [rax], al ; add al, dl ; ret 0x4b
0x00000000004bdf5c : test al, 0xc2 ; std ; ljmp ptr [rax + 0x50fffdc2] ; ret 0xfffd
0x00000000004bdf54 : test al, 0xc2 ; std ; ljmp ptr [rax - 0x5700023e] ; ret 0xfffd
0x0000000000442639 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004a361d : test al, 0xf8 ; jmp rax
0x000000000043f696 : test al, 2 ; cmove eax, edx ; ret
0x0000000000497e5c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042e61a : test al, al ; jne 0x42e608 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000049875c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049257c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004213d6 : test ax, 1 ; ret
0x00000000004a3511 : test bh, al ; call rax
0x00000000004460bb : test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046d997 : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484409 : test bl, bh ; retf -1
0x000000000046b293 : test bl, bl ; je 0x46b286 ; ret
0x0000000000475285 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000043f658 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x0000000000452156 : test byte ptr [rax + 0x63], cl ; retf -0x76b4
0x000000000047c683 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000494888 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x000000000047bc59 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046730e : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x00000000004423ce : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x00000000004407a1 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000416725 : test byte ptr [rax - 0x77], 0x1d ; ret
0x0000000000440ee4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000475286 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046fd81 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000498e1c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c6a2d : test byte ptr [rax], al ; add al, dl ; retf
0x000000000043bf7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043b3ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041723a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041280a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004430c8 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004171fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043e4ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000041257a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043bdba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049971c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049851c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046639c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000049310c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000419b4b : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004663b4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047aa86 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004953b8 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004496d6 : test byte ptr [rbp - 0x77000000], ch ; retf -0x1d7f
0x0000000000418256 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047ae7a : test byte ptr [rbx + 0x2526233d], 0 ; jmp rax
0x0000000000495598 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041e187 : test byte ptr [rbx - 0xa000000], cl ; ret
0x00000000004497bc : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004183ce : test byte ptr [rcx + 0x48000001], dh ; mov edx, eax ; jmp 0x4183f7
0x0000000000495778 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x00000000004503b2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049cab2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000467193 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x0000000000457e1a : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000440132 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x000000000047ea6d : test byte ptr [rcx - 0x7d], 0xc5 ; add dword ptr [rax + 0x29], ecx ; retf -0x72b8
0x000000000047e70d : test byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax + 0x29], ecx ; retf 0x148
0x0000000000422dc6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c7e4d : test byte ptr [rcx], al ; ret
0x0000000000495958 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000004420f8 : test byte ptr [rdi - 0x74b60003], bh ; jge 0x442108 ; call rbx
0x0000000000418ba7 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049fd2e : test byte ptr [rdi], 0x84 ; ret
0x00000000004405aa : test byte ptr [rdi], 0x84 ; ret 0
0x000000000047181e : test byte ptr [rdi], 0x85 ; ret
0x000000000045e3ed : test byte ptr [rdi], 0x88 ; retf
0x000000000047bd37 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x0000000000486cdd : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000041aba0 : test byte ptr [rdi], ah ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000465fdc : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465fc4 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000411f04 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004946a8 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004685f1 : test byte ptr [rdx], dl ; dec al ; add byte ptr [r8 - 0x77], cl ; ret
0x000000000047397e : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046587d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000048b2c9 : test byte ptr [rsi + rax + 0x63480000], al ; retf -0x7cb8
0x0000000000494a58 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000405b15 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041bbc3 : test byte ptr [rsi], bh ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00000000004239fd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000049688e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049658e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000049778e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496e8e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049718e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000444fe8 : test byte ptr [rsi], dh ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000044e92d : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004944c8 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e4d2 : test ch, 0xf0 ; je 0x43e4cb ; movzx eax, cl ; pop rbx ; ret
0x00000000004bb4c4 : test ch, bh ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000423e66 : test ch, cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424166 : test ch, cl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000425066 : test ch, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424d66 : test ch, cl ; add eax, 0x894d0000 ; retf
0x0000000000424a66 : test ch, cl ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424766 : test ch, cl ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d8bf : test cl, cl ; jne 0x43d8b4 ; ret
0x000000000043d96f : test cl, cl ; jne 0x43d964 ; ret
0x000000000043dc2f : test cl, cl ; jne 0x43dc28 ; sub rax, 1 ; ret
0x00000000004689cd : test cl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e4fa : test dh, 0xf0 ; je 0x43e4c9 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e4fa : test dh, 0xf0 ; je 0x43e4cb ; movzx eax, dl ; pop rbx ; ret
0x0000000000494e18 : test dh, ah ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495d18 : test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004469be : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041de7f : test dh, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446f35 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000043be04 : test dl, 0x40 ; jne 0x43bdc9 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043be32 : test dl, 4 ; jne 0x43bdc9 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000494c38 : test dl, ah ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495b38 : test dl, ah ; add eax, 0x894d0000 ; retf
0x0000000000492c6c : test dl, al ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b9971 : test dl, bh ; retf -0x2081
0x000000000045c053 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000420856 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000044dfc6 : test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040dc62 : test dl, dl ; jne 0x40dc44 ; ret
0x000000000043dadf : test dl, dl ; jne 0x43dad8 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000426d39 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000460f0b : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047de34 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x000000000045ca99 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b2bb : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049b2ba : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042c6af : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042f4e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f936 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047eca9 : test dword ptr [rbx - 0x16000002], esi ; ret
0x000000000045208b : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004260ea : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000426a50 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000410ab6 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042f4bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f3cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f2dd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045067e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000041b7aa : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047dd1a : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000426c3a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045fb40 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047cf23 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000044a29e : test dword ptr [rdi - 0x76fffff9], ebp ; retf -0x74b7
0x000000000045b68c : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042c4c5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041f984 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042f202 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004469bf : test dword ptr [rdx], 0x83480000 ; ret
0x0000000000440f4d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043d642 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c7ae : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042f708 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004b9a4d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000400708 : test eax, 0x415d002c ; pop rsp ; ret
0x00000000004ba8a0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432e76 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004a3621 : test eax, 0xab00fff8 ; clc ; jmp qword ptr [rax]
0x00000000004428db : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4be568 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x0000000000402da2 : test eax, eax ; je 0x402db6 ; mov edi, 0x6cc060 ; call rax
0x0000000000402ff1 : test eax, eax ; je 0x40300f ; mov edi, 0x6cbfe0 ; call rax
0x00000000004031e5 : test eax, eax ; je 0x403203 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403600 : test eax, eax ; je 0x403614 ; mov edi, 0x6cc0a0 ; call rax
0x0000000000403748 : test eax, eax ; je 0x40375c ; mov edi, 0x6cc0a0 ; call rax
0x0000000000418908 : test eax, eax ; je 0x418913 ; pop rbx ; ret
0x00000000004189e5 : test eax, eax ; je 0x4189ef ; call rax
0x000000000041f0e6 : test eax, eax ; je 0x41f0f0 ; call rax
0x00000000004237d3 : test eax, eax ; je 0x4237df ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043e746 : test eax, eax ; je 0x43e75a ; mov edi, 0x6cd200 ; call rax
0x000000000043e75e : test eax, eax ; je 0x43e772 ; mov edi, 0x6cd200 ; call rax
0x000000000043ffa8 : test eax, eax ; je 0x43ffb3 ; ret
0x000000000044437f : test eax, eax ; je 0x444393 ; mov edi, 0x6cb140 ; call rax
0x0000000000444506 : test eax, eax ; je 0x444514 ; ret
0x000000000044dd3e : test eax, eax ; je 0x44dd52 ; mov edi, 0x6cd200 ; call rax
0x000000000044dd6d : test eax, eax ; je 0x44dd89 ; mov edi, 0x6cd200 ; call rax
0x000000000044de6e : test eax, eax ; je 0x44de78 ; call rax
0x000000000044decd : test eax, eax ; je 0x44dee1 ; mov edi, 0x6cd200 ; call rax
0x000000000044e046 : test eax, eax ; je 0x44e061 ; mov edi, 0x6cd200 ; call rax
0x000000000044e326 : test eax, eax ; je 0x44e33a ; mov edi, 0x6cd200 ; call rax
0x000000000044e42a : test eax, eax ; je 0x44e434 ; call rax
0x000000000044f2e9 : test eax, eax ; je 0x44f2f3 ; call rax
0x0000000000470e82 : test eax, eax ; je 0x470e96 ; mov edi, 0x6cb100 ; call rax
0x0000000000474e76 : test eax, eax ; je 0x474e8a ; mov edi, 0x6cb140 ; call rax
0x0000000000474e9e : test eax, eax ; je 0x474eb2 ; mov edi, 0x6cb140 ; call rax
0x0000000000474f14 : test eax, eax ; je 0x474f28 ; mov edi, 0x6cb140 ; call rax
0x00000000004769e1 : test eax, eax ; je 0x476a59 ; mov edi, 0x6cb140 ; call rax
0x000000000047839c : test eax, eax ; je 0x47836b ; mov edi, 0x6cb140 ; call rax
0x00000000004784fa : test eax, eax ; je 0x47850e ; mov edi, 0x6cb140 ; call rax
0x000000000047b240 : test eax, eax ; je 0x47b258 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e916 : test eax, eax ; je 0x47e92a ; mov edi, 0x6cb140 ; call rax
0x000000000047e942 : test eax, eax ; je 0x47e956 ; mov edi, 0x6cb140 ; call rax
0x00000000004880c0 : test eax, eax ; je 0x4880d4 ; mov edi, 0x6cb140 ; call rax
0x0000000000488168 : test eax, eax ; je 0x48817c ; mov edi, 0x6cb140 ; call rax
0x000000000049eae8 : test eax, eax ; je 0x49eafc ; mov edi, 0x6cb100 ; call rax
0x000000000049eba9 : test eax, eax ; je 0x49ebbd ; mov edi, 0x6cb100 ; call rax
0x00000000004a090c : test eax, eax ; je 0x4a091b ; call rax
0x0000000000416ee4 : test eax, eax ; jne 0x416edd ; ret
0x0000000000426127 : test eax, eax ; jne 0x426187 ; xor rax, rax ; ret
0x0000000000442a00 : test eax, eax ; jne 0x4429fb ; pop rdx ; pop r10 ; ret
0x000000000047415e : test eax, eax ; jne 0x474135 ; ret
0x000000000049e247 : test eax, eax ; jne 0x49e255 ; ret
0x000000000049e262 : test eax, eax ; jne 0x49e275 ; ret
0x000000000049e482 : test eax, eax ; jne 0x49e495 ; ret
0x0000000000471450 : test eax, eax ; js 0x47145d ; pop rbx ; ret
0x000000000047a89b : test eax, eax ; js 0x47a8ad ; ret
0x000000000046b282 : test eax, eax ; mov rax, r9 ; jne 0x46b2e0 ; ret
0x00000000004475bc : test eax, edi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000426050 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041e634 : test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004738d2 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000044602a : test ebx, ebx ; jne 0x446005 ; jmp 0x445ff7
0x000000000047abbe : test ebx, ebx ; jne 0x47abd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ec70 : test ebx, ebx ; mov rdi, rbx ; jne 0x49ec68 ; pop rbx ; ret
0x000000000049ee9c : test ebx, ebx ; mov rdx, rbx ; jne 0x49ee99 ; pop rbx ; ret
0x000000000043bdf2 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043bdff : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000467059 : test ecx, ecx ; jne 0x467018 ; mov rax, rdx ; ret
0x000000000046b2d1 : test ecx, ecx ; jne 0x46b287 ; xor eax, eax ; ret
0x00000000004a3515 : test edi, eax ; jmp qword ptr [rax]
0x0000000000411615 : test edi, edi ; je 0x41162a ; call 0x41e086
0x0000000000421380 : test edi, edi ; je 0x421399 ; mov eax, 0x16 ; ret
0x00000000004239b2 : test edx, edx ; je 0x4239c0 ; bsf eax, edx ; ret
0x00000000004239b2 : test edx, edx ; je 0x4239c1 ; bsf eax, edx ; ret
0x0000000000423a5b : test edx, edx ; je 0x423a77 ; bsf rax, rdx ; ret
0x0000000000423a5b : test edx, edx ; je 0x423a78 ; bsf rax, rdx ; ret
0x00000000004658ea : test edx, edx ; je 0x465917 ; bsf rax, rdx ; ret
0x00000000004658ea : test edx, edx ; je 0x465918 ; bsf rax, rdx ; ret
0x0000000000413e13 : test edx, edx ; jne 0x413e24 ; ret
0x000000000041558f : test edx, edx ; jne 0x415585 ; ret
0x0000000000463c0f : test edx, edx ; jne 0x463c05 ; ret
0x000000000046709a : test edx, edx ; jne 0x467095 ; ret
0x00000000004007b5 : test edx, edx ; jns 0x4006ad ; jmp 0x40078a
0x000000000043bde5 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040ee5b : test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040dc93 : test esi, esi ; jne 0x40dcd1 ; mov eax, 0xba ; syscall
0x00000000004657e1 : test esi, esi ; jne 0x4657f0 ; xor rax, rax ; ret
0x000000000042016c : test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046b292 : test r11b, r11b ; je 0x46b287 ; ret
0x000000000047415d : test r8, r8 ; jne 0x474136 ; ret
0x00000000004237d2 : test r8d, r8d ; je 0x4237e0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046b281 : test r8d, r8d ; mov rax, r9 ; jne 0x46b2e1 ; ret
0x0000000000467058 : test r9d, r9d ; jne 0x467019 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x0000000000418907 : test rax, rax ; je 0x418914 ; pop rbx ; ret
0x00000000004189e4 : test rax, rax ; je 0x4189f0 ; call rax
0x000000000041f0e5 : test rax, rax ; je 0x41f0f1 ; call rax
0x000000000043ffa7 : test rax, rax ; je 0x43ffb4 ; ret
0x000000000044de6d : test rax, rax ; je 0x44de79 ; call rax
0x000000000044e429 : test rax, rax ; je 0x44e435 ; call rax
0x000000000044f2e8 : test rax, rax ; je 0x44f2f4 ; call rax
0x000000000047b23f : test rax, rax ; je 0x47b259 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a090b : test rax, rax ; je 0x4a091c ; call rax
0x0000000000416ee3 : test rax, rax ; jne 0x416ede ; ret
0x0000000000446029 : test rbx, rbx ; jne 0x446006 ; jmp 0x445ff8
0x000000000047abbd : test rbx, rbx ; jne 0x47abd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ec6f : test rbx, rbx ; mov rdi, rbx ; jne 0x49ec69 ; pop rbx ; ret
0x0000000000411614 : test rdi, rdi ; je 0x41162b ; call 0x41e087
0x0000000000411613 : test rdi, rdi ; je 0x41162c ; call 0x41e088
0x0000000000423a5a : test rdx, rdx ; je 0x423a78 ; bsf rax, rdx ; ret
0x0000000000423a5a : test rdx, rdx ; je 0x423a79 ; bsf rax, rdx ; ret
0x00000000004658e9 : test rdx, rdx ; je 0x465918 ; bsf rax, rdx ; ret
0x00000000004658e9 : test rdx, rdx ; je 0x465919 ; bsf rax, rdx ; ret
0x0000000000413e12 : test rdx, rdx ; jne 0x413e25 ; ret
0x000000000041558e : test rdx, rdx ; jne 0x415586 ; ret
0x0000000000463c0e : test rdx, rdx ; jne 0x463c06 ; ret
0x00000000004657e0 : test rsi, rsi ; jne 0x4657f1 ; xor rax, rax ; ret
0x0000000000414025 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043593a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000432c5a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432b90 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000432959 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043dd40 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000432a9f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00000000004328c3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432926 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043dcea : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000435926 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043590d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043debb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043debf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dd55 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043dd59 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000435c43 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435adc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004358de : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004358a2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435da5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043e078 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043dfdb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043de7a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042add1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000405685 : vpsubsb xmm14, xmm15, xmm4 ; loop 0x405695 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004056ed : vpsubsb xmm9, xmm15, xmmword ptr [rdx + 0x29480001] ; ret
0x000000000043dde9 : vzeroupper ; ret
0x000000000041645a : wait ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a371c : wait ; ret 0xfff8
0x00000000004a38f1 : xabort -1 ; jo 0x4a38c7 ; clc ; inc eax ; retf -8
0x00000000004235df : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a07f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004231cf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422cdb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000460cc9 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000004234eb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bccc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b4ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b8dc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004979ed : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004425d7 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004964f1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004976f1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496df1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004970f1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004967e9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049a262 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x000000000049a272 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x000000000049a239 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042abdf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3bf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422f5f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429b9f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042329f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004235bb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c6bdd : xchg byte ptr [rax], al ; add byte ptr [rax - 0x2c], al ; cli ; jmp rsi
0x000000000042b29b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042368b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6ff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429edf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004296bf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a89f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042343f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422c2f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049bb9c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000041cf52 : xchg byte ptr [rcx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042302f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004b9775 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000042b78c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c0bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004470e2 : xchg byte ptr [rdi], cl ; retf 0x1489
0x000000000049afb2 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000042350f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422cff : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004299ff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422da1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489760 : xchg byte ptr [rip + 0x394d0000], al ; retf
0x00000000004230ff : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000496a96 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429b35 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a835 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497996 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497096 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496d96 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a355 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049678e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bfbd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042336f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049581f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049563f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496017 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494f37 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495e37 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a0af6 : xchg ch, dl ; idiv edi ; ret
0x00000000004345cf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042ab75 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429e75 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429995 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a695 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b7dd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042affd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049b024 : xchg dword ptr [rax - 0x17000000], esp ; retf
0x000000000044599c : xchg dword ptr [rax - 0x39], ecx ; ret
0x00000000004c6d5d : xchg dword ptr [rax], eax ; add al, al ; fsqrt ; call rsi
0x0000000000470e46 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004b9778 : xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000048f7df : xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000445536 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x00000000004b92ff : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x0000000000483acd : xchg dword ptr [rbp - 0x76ffffe7], edi ; retf 0x348
0x0000000000476a41 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045e30d : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484ab5 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044ea35 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b856c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004086f5 : xchg dword ptr [rcx + 1], ebx ; add cl, ch ; ret 0xffe2
0x0000000000482aeb : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x0000000000449b42 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000482b67 : xchg dword ptr [rdi - 0x76ffffd7], ebx ; retf 0x348
0x0000000000487a23 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x0000000000419714 : xchg dword ptr [rdi - 0x9fffffc], esi ; ret
0x00000000004429fe : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4429fd ; pop rdx ; pop r10 ; ret
0x00000000004196d1 : xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000046e5a8 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485839 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b870b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494b78 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x000000000041ab5f : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000447f6b : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000464a36 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000411eb2 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000453472 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004b8a49 : xchg eax, ebp ; jge 0x4b8a2c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000041b26a : xchg eax, ebp ; ret
0x000000000047be21 : xchg eax, ebp ; ret 0x3840
0x0000000000463067 : xchg eax, ebp ; ret 0x5389
0x000000000041c35d : xchg eax, ebp ; ret 0x8349
0x00000000004671ae : xchg eax, ebp ; ret 0x8b4c
0x000000000048a865 : xchg eax, ebp ; ret 0x941
0x0000000000403a07 : xchg eax, ebp ; ret 0x953d
0x0000000000467e9b : xchg eax, ebp ; ret 0xb60f
0x0000000000467351 : xchg eax, ebp ; ret 0xb8e9
0x000000000046b8bf : xchg eax, ebp ; ret 0xc084
0x000000000045b515 : xchg eax, ebp ; ret 0xc283
0x0000000000443328 : xchg eax, ebp ; ret 0xc985
0x000000000048917a : xchg eax, ebp ; ret 0xd348
0x000000000046720c : xchg eax, ebp ; ret 0xd721
0x000000000040fec4 : xchg eax, ebp ; ret 0xdaf7
0x0000000000444541 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466e40 : xchg eax, ebp ; ret 0xe883
0x000000000049ba2d : xchg eax, ebp ; ret 0xf45
0x0000000000467e0f : xchg eax, ebp ; ret 0xf748
0x00000000004b9302 : xchg eax, ebp ; retf 0x33e6
0x000000000041738d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485c49 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004ba75c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000415be2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000046a340 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e650 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004bb0ec : xchg eax, ebx ; in al, dx ; retf -0x51ce
0x000000000043b27c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042fdd2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004ba603 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4ba5dd
0x000000000044fe70 : xchg eax, ebx ; ret 0x3948
0x00000000004509ce : xchg eax, ebx ; ret 0x3949
0x0000000000411c8f : xchg eax, ebx ; ret 0x840
0x0000000000450ea3 : xchg eax, ebx ; ret 0x8548
0x00000000004644a4 : xchg eax, ebx ; ret 0xd108
0x00000000004c7715 : xchg eax, ecx ; add byte ptr [rax], al ; cmp byte ptr [rax], ch ; sti ; call rsp
0x0000000000421167 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042ac81 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004420eb : xchg eax, ecx ; mov edi, 0x8b49fffd ; call rbx
0x00000000004293af : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004b8ab5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8a83 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004b8ce7 : xchg eax, edi ; jo 0x4b8d54 ; salc ; retf
0x0000000000409975 : xchg eax, edi ; ret
0x00000000004b941d : xchg eax, edi ; retf -0x1eae
0x000000000044263b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004c73d1 : xchg eax, edi ; std ; call rcx
0x00000000004ba75b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b8bb8 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000485c5f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004ba47d : xchg eax, edx ; jae 0x4ba45a ; push rsi ; pop rdx ; je 0x4ba44f ; ret 0xacfc
0x00000000004bb0e6 : xchg eax, edx ; mov esi, dr1 ; jrcxz 0x4bb0d0 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004b8abc : xchg eax, edx ; pop rbx ; retf
0x000000000046e47b : xchg eax, edx ; ret 0x8348
0x0000000000475356 : xchg eax, edx ; ret 0xb60f
0x000000000044263e : xchg eax, edx ; ret 0xd029
0x00000000004b856f : xchg eax, edx ; ret 0xf869
0x00000000004237d7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042e950 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000469a06 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434687 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048c988 : xchg eax, esi ; add eax, 0x394d0000 ; retf
0x000000000047417e : xchg eax, esi ; and eax, 0x6894800 ; ret
0x00000000004ba868 : xchg eax, esi ; jnp 0x4ba8b7 ; retf -0x6620
0x000000000049adc9 : xchg eax, esi ; jo 0x49add3 ; add byte ptr [rax], al ; jmp 0x49ada1
0x000000000042ea0d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e96b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bae0c : xchg eax, esi ; ret 0xcd11
0x000000000042e9bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a36d4 : xchg eax, esi ; sar eax, -1 ; ret 0xfff8
0x00000000004a3990 : xchg eax, esi ; sbb edi, ecx ; jmp qword ptr [rsi]
0x00000000004c7a0d : xchg eax, esp ; add byte ptr [rax], al ; and byte ptr [rsi], dh ; sti ; jmp qword ptr [rdx]
0x00000000004c79c5 : xchg eax, esp ; add byte ptr [rax], al ; clc ; mov esi, ebx ; jmp qword ptr [rsi]
0x0000000000400e6c : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x2d], al ; stc ; ret 0x2c
0x0000000000495779 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bb01f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bafb0 ; ret 0x48f
0x0000000000458df4 : xchg eax, esp ; ret
0x000000000046d987 : xchg eax, esp ; ret 0x1f0f
0x000000000041b1d5 : xchg eax, esp ; ret 0x24e9
0x000000000047c46e : xchg eax, esp ; ret 0x3840
0x000000000047bbac : xchg eax, esp ; ret 0x5438
0x000000000041b799 : xchg eax, esp ; ret 0x7ae9
0x0000000000461ca5 : xchg eax, esp ; ret 0x7f3c
0x000000000043e1bf : xchg eax, esp ; ret 0x8341
0x000000000044a0f5 : xchg eax, esp ; ret 0x8348
0x000000000043e25f : xchg eax, esp ; ret 0x8444
0x000000000046f571 : xchg eax, esp ; ret 0x8545
0x000000000047aefe : xchg eax, esp ; ret 0x950f
0x0000000000455e18 : xchg eax, esp ; ret 0x9522
0x0000000000402948 : xchg eax, esp ; ret 0xb60f
0x000000000046bd1c : xchg eax, esp ; ret 0xc283
0x000000000047bd39 : xchg eax, esp ; ret 0xd021
0x0000000000485b66 : xchg eax, esp ; ret 0xd309
0x000000000047baff : xchg eax, esp ; ret 0xda38
0x000000000047a940 : xchg eax, esp ; ret 0xdaf7
0x000000000049b9cc : xchg eax, esp ; ret 0xf45
0x000000000045989d : xchg eax, esp ; ret 0xfa80
0x000000000043e1e2 : xchg eax, esp ; ret 0xfe83
0x000000000046ae2f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000040f711 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000004be064 : xchg eax, esp ; sar ch, cl ; push qword ptr [rdi + rdx*8] ; std ; jmp rsp
0x00000000004b8a43 : xchg eax, esp ; xlatb ; retf -0x5e15
0x00000000004121d1 : xchg eax, r8d ; jmp 0x4120dd
0x0000000000476137 : xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004bac36 : xchg esp, eax ; jb 0x4bac94 ; call 0x4c15d5f9
0x000000000048dca6 : xchg esp, ebx ; jmp 0x48dcaf
0x000000000043ed7f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000048aa6e : xchg esp, esi ; jmp 0x48aa77
0x0000000000411eb1 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000469fc5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000425e5e : xlatb ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004b1479 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042fcac : xlatb ; add r9, r11 ; jmp r9
0x000000000043eac1 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a38e1 : xlatb ; clc ; inc eax ; fdivr st(0) ; call qword ptr [rax]
0x000000000046af0f : xlatb ; ja 0x46af3c ; ret
0x00000000004b95e3 : xlatb ; jo 0x4b965f ; mov ebp, 0xfb67d10d ; ret
0x0000000000452522 : xlatb ; mov byte ptr [rsi], al ; jne 0x452508 ; mov rax, rsi ; ret
0x000000000040dcad : xlatb ; mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000043ebc2 : xlatb ; mov eax, esi ; syscall
0x000000000043ebd2 : xlatb ; mov eax, r8d ; syscall
0x00000000004b89f0 : xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000421529 : xlatb ; ret
0x00000000004baa86 : xlatb ; ret 0x4e27
0x0000000000465bc7 : xlatb ; ret 0x94c
0x0000000000425f4f : xlatb ; ret 0xc085
0x0000000000421520 : xlatb ; ret 0xc148
0x00000000004239d4 : xlatb ; ret 0xf66
0x00000000004215bd : xlatb ; retf
0x0000000000421780 : xlatb ; retf -0x152d
0x00000000004b9972 : xlatb ; retf -0x2081
0x0000000000465ca4 : xlatb ; retf -0x3eb8
0x00000000004b8a44 : xlatb ; retf -0x5e15
0x000000000042ce81 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043bda6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004229e6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000004228a6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422766 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000422626 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004224e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004223a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000422266 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000422126 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000421fe6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421ea6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421d66 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421c26 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000421ae6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000004219a6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000421866 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043bda2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465b65 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465b76 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004be069 : xlatb ; std ; jmp rsp
0x00000000004bb0e5 : xlatb ; xchg eax, edx ; mov esi, dr1 ; jrcxz 0x4bb0d1 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004a383c : xor ah, ah ; clc ; call qword ptr [rax]
0x00000000004b856a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004ba606 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000040560d : xor al, 0x89 ; ret 0x5525
0x00000000004c6f9c : xor al, 0x8a ; add byte ptr [rax], al ; jo 0x4c6f95 ; cli ; jmp qword ptr [rdx]
0x00000000004624c7 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004be068 : xor al, 0xd7 ; std ; jmp rsp
0x00000000004b974a : xor al, 0xd8 ; ret
0x00000000004bfb71 : xor al, 0xf5 ; call qword ptr [rax]
0x00000000004a3854 : xor al, ah ; clc ; call qword ptr [rax]
0x00000000004c1845 : xor al, byte ptr [rax] ; add byte ptr [rax], cl ; int1 ; cmc ; call qword ptr [rdx]
0x000000000046bea3 : xor al, ch ; stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004a33d4 : xor bh, bh ; idiv edi ; add byte ptr [rax], al ; clc ; call rax
0x00000000004a3798 : xor bl, ah ; clc ; call qword ptr [rax]
0x00000000004261ac : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000042606d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004268a1 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x000000000049ea24 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000421431 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000443122 : xor byte ptr [rax + rax + 0x48], al ; mov dword ptr [rax + 8], edx ; ret
0x0000000000467ced : xor byte ptr [rax - 0x39], cl ; ret
0x0000000000449edb : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004238df : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000464b72 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004268a2 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x000000000041165d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040ead2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040ea8a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043e59c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000464aba : xor byte ptr [rax], al ; je 0x464ac4 ; ret
0x00000000004162a0 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000403643 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049fd2b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000049e57e : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c110f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x0000000000426c9b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004165ee : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004a350c : xor byte ptr [rbx - 0x7b7f0008], al ; clc ; call rax
0x000000000044563a : xor byte ptr [rbx], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000455727 : xor byte ptr [rbx], cl ; jmp rax
0x0000000000444139 : xor byte ptr [rcx + 0x28906005], cl ; add cl, ch ; ret
0x000000000041fe01 : xor byte ptr [rcx + 0x39], cl ; retf -0x7af1
0x0000000000420a48 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041af5e : xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x0000000000458e27 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004b8a4e : xor byte ptr [rcx], ah ; retf
0x000000000041165e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000410165 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000040f435 : xor byte ptr [rcx], dh ; shr al, cl ; ret
0x000000000047055f : xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x00000000004a34c4 : xor byte ptr [rdi - 8], ah ; call rax
0x00000000004a3564 : xor byte ptr [rdi - 8], dl ; inc dword ptr [rax + 0x59] ; clc ; jmp rax
0x000000000046aa84 : xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000463cd0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458df2 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000400e97 : xor byte ptr [rdx + rcx - 0x7f], 0xd ; cld ; ret 0x2c
0x00000000004c215f : xor byte ptr [rdx], al ; int 0xa
0x00000000004c199f : xor byte ptr [rdx], al ; ret
0x00000000004a3d74 : xor byte ptr [rip + 0x14b0fff9], dl ; stc ; jmp qword ptr [rax]
0x000000000042e6ff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000465b2c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042606e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e15a : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004ba75e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b8a3f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4b89ef
0x000000000045899c : xor ch, cl ; sti ; inc dword ptr [rbx - 0x7af00008] ; retf -3
0x00000000004882f4 : xor ch, dl ; insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x00000000004a37b4 : xor cl, ah ; clc ; call qword ptr [rax]
0x00000000004a0b36 : xor cl, al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004661ab : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000413605 : xor cl, byte ptr [rax + 0x63] ; jg 0x413681 ; xor eax, eax ; syscall
0x000000000041d393 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000473276 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d6bf : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000441072 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000049e2fa : xor dh, ch ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004439b8 : xor dl, byte ptr [rbx + 0x4a] ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000476f9e : xor dl, dh ; jmp r11
0x00000000004770b0 : xor dl, dh ; ret
0x000000000040dc96 : xor dword ptr [rax + 0xba], edi ; syscall
0x0000000000420d85 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004b99f6 : xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x000000000041df1a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000457817 : xor dword ptr [rbx], ecx ; jmp rax
0x000000000043f587 : xor dword ptr [rcx + rdx*2], 0 ; ret
0x0000000000441513 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000049e2f9 : xor eax, 0x22f532 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049e1a1 : xor eax, 0x22f68a ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004c1b65 : xor eax, 0x3d180000 ; idiv bh ; ret
0x000000000048e6a9 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043f80b : xor eax, 0x4e ; add byte ptr [rax], al ; ret
0x000000000040eacf : xor eax, dword ptr [0x30] ; call rax
0x000000000049cfed : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000478867 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047893f : xor eax, eax ; add rsp, 0x68 ; ret
0x000000000047498a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451f49 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047811a : xor eax, eax ; call 0x473d38
0x0000000000465357 : xor eax, eax ; call rbx
0x000000000046af0b : xor eax, eax ; cmp rdi, rdx ; ja 0x46af40 ; ret
0x00000000004429d7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000442d75 : xor eax, eax ; leave ; ret
0x000000000046bd58 : xor eax, eax ; mov edx, 1 ; jmp 0x46bd34
0x0000000000463459 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000440a4b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000442cef : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041ec6d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b648 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ecdd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042396c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412e1c : xor eax, eax ; pop rbx ; ret
0x0000000000401620 : xor eax, eax ; ret
0x000000000042e61e : xor eax, eax ; sub eax, ecx ; ret
0x000000000041360a : xor eax, eax ; syscall
0x000000000043e4f8 : xor eax, eax ; test dh, 0xf0 ; je 0x43e4cb ; movzx eax, dl ; pop rbx ; ret
0x000000000046b290 : xor eax, eax ; test r11b, r11b ; je 0x46b289 ; ret
0x0000000000413e10 : xor eax, eax ; test rdx, rdx ; jne 0x413e27 ; ret
0x0000000000467c23 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000474228 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e1e4 : xor ecx, dword ptr [rax + 0x29] ; retf -0x3eb8
0x000000000046aa9d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000448361 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000425a29 : xor ecx, dword ptr [rax - 0x77] ; retf -0x76b8
0x0000000000466635 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004a3690 : xor ecx, eax ; clc ; push qword ptr [rcx + 0x41fff8c1] ; ret 0xfff8
0x000000000044f422 : xor ecx, eax ; ret 0x4809
0x00000000004bdfb0 : xor ecx, eax ; std ; push qword ptr [rax - 0x38] ; std ; jmp rax
0x00000000004c8db9 : xor edi, ebp ; call rsp
0x0000000000473d1e : xor edi, edi ; call 0x440004
0x0000000000400d60 : xor edi, edi ; mov eax, edx ; syscall
0x000000000040ea87 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000444da3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000044453c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44452c
0x000000000045a7b3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047abe9 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aabe : xor edx, edx ; jmp 0x46aa88
0x0000000000473f94 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000415f09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000418534 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004882e3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440ee1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000445639 : xor esi, dword ptr [rax] ; add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x000000000043ed3c : xor esi, esi ; mov eax, 2 ; syscall
0x00000000004038f9 : xor esi, esi ; mov eax, ecx ; syscall
0x000000000044cdfe : xor esi, esi ; mov edi, 0x4a6228 ; mov eax, ecx ; syscall
0x0000000000401735 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047ae79 : xor esi, esi ; mov edi, dword ptr [rip + 0x252623] ; jmp rax
0x0000000000440131 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440ee3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440f08 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440f2d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440f51 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440f71 : xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000046a01f : xor esp, dword ptr [rsi] ; add byte ptr [rax + 0x39], cl ; retf
0x000000000046a090 : xor esp, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000465356 : xor r8d, r8d ; call rbx
0x000000000040eace : xor rax, qword ptr [0x30] ; call rax
0x000000000040eacd : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004260ef : xor rax, rax ; ret
0x000000000040ea86 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040ea85 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 11535
