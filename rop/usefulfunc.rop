Gadgets information
============================================================
0x00000000004a3370 : adc ah, bh ; clc ; call qword ptr [rax + 0x10fff8fd]
0x00000000004c6110 : adc ah, bl ; cli ; call rsi
0x00000000004a331c : adc ah, dh ; clc ; call qword ptr [rax + 0x10fff8f5]
0x0000000000428cef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428d59 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049b970 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004c3928 : adc al, 0 ; add byte ptr [rax], al ; pop rsi ; add byte ptr [rax], al ; xlatb ; retf
0x000000000046a55a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000423368 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042f2d5 : adc al, 0x13 ; jmp rdx
0x000000000042d8c5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043f3ca : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000004091c4 : adc al, 0x24 ; call 0x405cb4
0x000000000049b66a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040ea28 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000418a67 : adc al, 0x41 ; pop rsp ; ret
0x000000000043b0d0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000412635 : adc al, 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000412389 : adc al, 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000043e9c8 : adc al, 0x51 ; add byte ptr [rax], al ; ret
0x00000000004c34dc : adc al, 0x5a ; add byte ptr [rax], al ; loopne 0x4c34a0 ; clc ; call qword ptr [rdi]
0x000000000041f36a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043eb76 : adc al, 0x89 ; ret 0xdaf7
0x000000000046449e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042a180 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004288ae : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042f2d1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000420bb7 : adc al, 0xa ; jmp r10
0x000000000042da33 : adc al, 0xa ; sub eax, edx ; ret
0x000000000046a558 : adc al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043e958 : adc al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043e9b8 : adc al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043ea18 : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046a3c8 : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000468499 : adc al, 0xbf ; push rax ; ret 0x6c
0x00000000004bd5c4 : adc al, 0xd3 ; std ; call rsp
0x0000000000401619 : adc al, 0xdd ; fmul dword ptr [rsi - 0x7cb7ff94] ; ret
0x000000000043f668 : adc al, 0xdf ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000422091 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049ba1c : adc al, 0xf7 ; ret
0x00000000004a29b1 : adc al, 0xf8 ; call qword ptr [rax + 0x10fff815]
0x00000000004a2e2c : adc al, 0xf8 ; call rax
0x00000000004a3299 : adc al, 0xf9 ; call rax
0x00000000004a3219 : adc al, 0xf9 ; jmp rsp
0x00000000004a3215 : adc al, 0xf9 ; push qword ptr [rsp + rdx - 7] ; jmp rsp
0x00000000004c4c91 : adc al, 0xfa ; jmp rdx
0x0000000000476042 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x0000000000490fce : adc al, 9 ; ret 0xa074
0x00000000004a2d94 : adc al, ah ; clc ; push rax ; loope 0x4a2d9a ; call rax
0x00000000004bed4d : adc al, byte ptr [rax] ; add byte ptr [rax + 0x2d], dh ; cmc ; jmp qword ptr [rsi]
0x0000000000428e97 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000428f01 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004924be : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495e8f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040d7a7 : adc al, ch ; push rbx ; ret
0x00000000004c2670 : adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004a2e80 : adc bh, 0xf8 ; call rax
0x00000000004a29ad : adc bh, al ; call qword ptr [rax]
0x00000000004a3378 : adc bh, bh ; clc ; call qword ptr [rax + 0x10fff900]
0x00000000004a2d10 : adc bh, bl ; clc ; call rax
0x00000000004a2bb4 : adc bh, byte ptr [rax + rdi*8 - 0x7431d01] ; jmp rdx
0x000000000047f46e : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004a32a9 : adc bh, cl ; call rax
0x00000000004a3229 : adc bh, cl ; jmp rsp
0x00000000004a3324 : adc bh, dh ; clc ; call qword ptr [rax + 0x10fff8f8]
0x00000000004c3840 : adc bl, bl ; clc ; call qword ptr [rax]
0x0000000000467b92 : adc bl, byte ptr [rsi - 0x42] ; add byte ptr [r8 - 0x77], cl ; ret
0x0000000000426355 : adc bl, ch ; call 0xffffffffc412ecaa
0x0000000000422e25 : adc bl, ch ; call 0xffffffffc43ab77a
0x00000000004785f2 : adc bl, ch ; jno 0x478648 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483094 : adc bl, ch ; ret 0x8348
0x00000000004a3358 : adc bl, dh ; clc ; call qword ptr [rax + 0x10fff8f4]
0x0000000000425d44 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043aa06 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043aa77 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043a9d7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043aa05 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000473d70 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000412f76 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044f24d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000044fdab : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044f246 : adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000477d6f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046a059 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a02d
0x000000000041697c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000470db4 : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041825e : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x000000000043fea2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000410533 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004781ec : adc byte ptr [rax + 0x29], cl ; ret
0x0000000000459b02 : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000043a82a : adc byte ptr [rax + 0x29], cl ; retf -0x72b4
0x000000000044f247 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000418623 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000041cb1d : adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000418bb5 : adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000418f77 : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041cdd6 : adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x0000000000442500 : adc byte ptr [rax + 0x48004424], dh ; mov dword ptr [rax + 8], edx ; ret
0x0000000000477d70 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412497 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000487b3a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000478c8e : adc byte ptr [rax + 1], cl ; ret
0x000000000046a028 : adc byte ptr [rax + 1], cl ; retf -0x7cb8
0x000000000046a027 : adc byte ptr [rax + 1], r9b ; retf -0x7cb8
0x000000000049c24c : adc byte ptr [rax + 8], bh ; ret
0x00000000004a29b0 : adc byte ptr [rax + rdi*8], dl ; call qword ptr [rax + 0x10fff815]
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004740e4 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x00000000004702f1 : adc byte ptr [rax - 0x73], cl ; int1 ; or byte ptr [rax + 0x39], cl ; retf -0x7bf1
0x000000000042b8c4 : adc byte ptr [rax - 0x73], cl ; jg 0x42b8e1 ; jne 0x42b8b8 ; ret
0x000000000046a675 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046fedc : adc byte ptr [rax - 0x73], cl ; push rsp ; retf -0x14f8
0x000000000046a674 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000043fb12 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000446ac8 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044742b : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042bcda : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004099b7 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405cb7
0x0000000000409260 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405cb8
0x0000000000463227 : adc byte ptr [rax - 0x77], cl ; jo 0x463245 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046455c : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046a05a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a02c
0x00000000004631e7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e3c3 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000041697d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000004853bf : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x0000000000489a64 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041c069 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000048a20d : adc byte ptr [rax - 0x77], cl ; retf
0x000000000047ccb9 : adc byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000431fbf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000437777 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004377b3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400b8a : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420273 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041f24b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004791c9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041825f : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x000000000043ea5c : adc byte ptr [rax], 0 ; ret
0x000000000046c68c : adc byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x000000000042a458 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x0000000000422280 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x0000000000428942 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x00000000004220e0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000042a74c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004290a1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043daaa : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004237e8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004358c8 : adc byte ptr [rax], al ; add cl, ch ; retf -2
0x000000000048c0c0 : adc byte ptr [rax], al ; jne 0x48c091 ; jmp 0x48c099
0x00000000004a333c : adc byte ptr [rax], al ; stc ; call qword ptr [rax + 0x10fff901]
0x00000000004a2990 : adc byte ptr [rax], cl ; clc ; call qword ptr [rax + 0x10fff809]
0x00000000004189fa : adc byte ptr [rbp + 0x39], cl ; ret
0x000000000044fa9c : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000425c8a : adc byte ptr [rbp + 0x43], cl ; add bl, dh ; ret
0x0000000000478195 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000425e68 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042b8c8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x000000000043f987 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000004bd3dc : adc byte ptr [rbp - 3], ah ; call rax
0x00000000004a33d8 : adc byte ptr [rbp - 7], dh ; jmp qword ptr [rax]
0x0000000000400c66 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049c50c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041e14b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040fc23 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c06aa : adc byte ptr [rbx + 0xa9b0202], al ; ret
0x00000000004c00c2 : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000412f77 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000416432 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000479e97 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x479eb1 ; ret
0x000000000043d75a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004071ee : adc byte ptr [rbx - 0x7bf0fd06], al ; retf
0x0000000000441fe6 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x441fff ; pop rbp ; pop r12 ; ret
0x00000000004a346c : adc byte ptr [rbx - 7], bh ; jmp qword ptr [rax]
0x000000000043e38d : adc byte ptr [rbx], al ; add cl, ch ; retf -2
0x00000000004a3344 : adc byte ptr [rbx], al ; stc ; call qword ptr [rax + 0x10fff904]
0x00000000004a2998 : adc byte ptr [rbx], cl ; clc ; call qword ptr [rax + 0x10fff80c]
0x0000000000410534 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044bcf4 : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000004791cd : adc byte ptr [rcx + 0x39], cl ; retf
0x000000000044fc47 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041f093 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004618f0 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e4b8 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d3ac : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000004189a7 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422113 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000493b77 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000043ded4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416435 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000041fa79 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a29a8 : adc byte ptr [rcx], dl ; clc ; call qword ptr [rax + 0x10fff812]
0x000000000043dfbf : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043b2e3 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000496feb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495aef : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000496cef : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004963ef : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004966ef : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495de7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496094 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496c94 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496f94 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496694 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496394 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000495d8c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494e1d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494c3d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495615 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494535 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495435 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044f24e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000044fdac : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000004a29b8 : adc byte ptr [rdi], dl ; clc ; call qword ptr [rax + 0x10fff818]
0x000000000044f7cc : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004c6940 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x000000000042f7c9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000048569a : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x00000000004924bd : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a2944 : adc byte ptr [rdx], al ; clc ; jmp rax
0x00000000004a3380 : adc byte ptr [rdx], al ; stc ; call qword ptr [rax + 0x10fff903]
0x00000000004a29c0 : adc byte ptr [rdx], bl ; clc ; call qword ptr [rax + 0x10fff81b]
0x000000000042e72b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e5da : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042dbd5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dfd5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42dfa9
0x000000000042e053 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42e027
0x000000000042e4e5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42e4b9
0x000000000042e563 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42e537
0x000000000042dfd0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42dfae
0x000000000042e04e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e02c
0x000000000042e4e0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e4be
0x000000000042e55e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e53c
0x0000000000420d05 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004267bb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000497f9d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a2a94 : adc byte ptr [rsi], bh ; clc ; jmp qword ptr [rax]
0x00000000004a29a0 : adc byte ptr [rsi], cl ; clc ; call qword ptr [rax + 0x10fff80f]
0x0000000000490fff : adc byte ptr [rsp - 4], al ; ret
0x0000000000491045 : adc byte ptr [rsp - 8], al ; ret
0x0000000000496097 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3334 : adc ch, bh ; clc ; call qword ptr [rax + 0x10fff8fe]
0x00000000004a2df8 : adc cl, ah ; clc ; push rax ; loop 0x4a2dfe ; jmp rax
0x00000000004a32b9 : adc cl, bh ; call rax
0x00000000004a3368 : adc cl, bh ; clc ; call qword ptr [rax + 0x10fff8fa]
0x00000000004a3239 : adc cl, bh ; jmp rsp
0x0000000000451e4f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000422e15 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000451e52 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000004746ca : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x00000000004791c1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000463e04 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004a3314 : adc cl, dh ; clc ; call qword ptr [rax + 0x10fff8f2]
0x0000000000425dd0 : adc dh, bh ; ret
0x00000000004a2db0 : adc dh, bl ; clc ; call rax
0x00000000004a3360 : adc dh, dh ; clc ; call qword ptr [rax + 0x10fff8f7]
0x000000000041aa21 : adc dh, dh ; ret 0xf0f
0x00000000004a332c : adc dl, bh ; clc ; call qword ptr [rax + 0x10fff8fb]
0x000000000048c7b3 : adc dword ptr [rax + 0x39], ecx ; retf -0x7bf1
0x0000000000478b33 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000411ad2 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044eca5 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000410525 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000047920c : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044ed7c : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417e4e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00000000004163dc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x0000000000462925 : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047577a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042a74b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000429037 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a64f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423668 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000435147 : adc dword ptr [rcx + 7], edi ; ret
0x0000000000434de2 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000434da6 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000468fef : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402f94 : adc dword ptr [rdi + 0x6cafe0], edi ; call rax
0x00000000004352a9 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043d3ac : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043d4df : adc dword ptr [rsi + 3], edx ; ret
0x000000000043d57c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043d37e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000429036 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044ec86 : adc eax, 0x27bdad ; je 0x44ec98 ; ret
0x0000000000443907 : adc eax, 0x28568c ; pop rbx ; ret
0x00000000004b8e44 : adc eax, 0x2f3ffae1 ; retf -0x4ae6
0x000000000047099d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x00000000004708d9 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004137b8 : adc eax, 0x60e8004a ; retf
0x0000000000428bc1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000495ae9 : adc eax, 0x83490000 ; jmp 0x495b09
0x000000000046dba9 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000495b90 : adc eax, 0x894d0000 ; retf
0x0000000000465e0a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042a4ae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494359 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004234e8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495d8f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479af9 : adc eax, eax ; ret
0x00000000004a29a9 : adc eax, edi ; call qword ptr [rax + 0x10fff812]
0x0000000000479c36 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b8ae5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046a67c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000043fa6b : adc ebx, ebx ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000049b2da : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x00000000004416ef : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x000000000041544a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000446a61 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044bfc4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452111 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x0000000000473ce9 : adc ecx, dword ptr [rsi - 0x76b7ffdb] ; ret 0x8b48
0x00000000004a32b1 : adc ecx, edi ; call rax
0x00000000004a3231 : adc ecx, edi ; jmp rsp
0x00000000004bd528 : adc ecx, esp ; std ; push qword ptr [rax] ; retf
0x00000000004a32a1 : adc edi, ecx ; call rax
0x00000000004a3221 : adc edi, ecx ; jmp rsp
0x00000000004b9ffe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049c54c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000495f72 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000435146 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000434de1 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000434da5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000004352a8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043d4de : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043d57b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043d37d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000425d43 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004944c0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479c35 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000425dcf : adc sil, r15b ; ret
0x00000000004c5cab : add ah, ah ; add dword ptr [rax], 0xfaadd000 ; call rdx
0x00000000004c15ab : add ah, ah ; cmp al, byte ptr [rax] ; add al, al ; ret
0x00000000004c4c8b : add ah, al ; jno 0x4c4c97 ; add byte ptr [rax + 0x14], ah ; cli ; jmp rdx
0x00000000004be58b : add ah, al ; or al, byte ptr [rax] ; add byte ptr [rax + 7], dl ; cmc ; call qword ptr [rax]
0x000000000043da0e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043da2e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043dabd : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043d9ed : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c7559 : add ah, bh ; jmp qword ptr [rax]
0x00000000004be5a3 : add ah, bl ; or al, byte ptr [rax] ; add byte ptr [rax + 7], cl ; cmc ; call qword ptr [rdx]
0x00000000004ba027 : add ah, byte ptr [rbp + rdi - 0x55] ; retf -0x5d02
0x00000000004bf0df : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bf1b8 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043d4da : add ah, byte ptr [rdx - 0xf] ; jl 0x43d52f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004c5893 : add ah, cl ; jge 0x4c589f ; add byte ptr [rax], cl ; jle 0x4c589d ; call rax
0x00000000004c14bb : add ah, dh ; cmp dword ptr [rax], eax ; add al, al ; sal bh, 0xff ; retf 2
0x00000000004c6dbb : add ah, dh ; xchg eax, edx ; add byte ptr [rax], al ; jo 0x4c6e02 ; sti ; jmp qword ptr [rdx]
0x0000000000449101 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449139 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041b6ac : add al, 0 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x418178
0x0000000000470e19 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000042284d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b36f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422871 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004bdf6d : add al, 0 ; add byte ptr [rax], al ; add edi, esi ; call rdi
0x0000000000440372 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000004263e8 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000043e8bf : add al, 0 ; add byte ptr [rax], al ; syscall
0x000000000048ede1 : add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004243e8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449461 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041a12a : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000402c95 : add al, 0 ; add byte ptr [rdi + 0x6cc0a0], bh ; call rbx
0x0000000000418c16 : add al, 0 ; add dh, dh ; ret
0x000000000040f434 : add al, 0 ; add rsp, 0xd8 ; ret
0x000000000046a67b : add al, 0x11 ; ret
0x000000000043da5d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000473d19 : add al, 0x16 ; jae 0x473cc7 ; xor eax, eax ; ret
0x0000000000443e7e : add al, 0x17 ; add al, ch ; retf -0x187
0x000000000042d8c1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000421f4a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000469765 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x469736
0x000000000043e89d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000004099ba : add al, 0x24 ; call 0x405cb4
0x0000000000470dbc : add al, 0x24 ; call rax
0x000000000046f0d3 : add al, 0x24 ; lea rdi, qword ptr [rax + 0x6ca1e0] ; call rdx
0x000000000043e9d8 : add al, 0x24 ; mov eax, 0 ; syscall
0x000000000046a578 : add al, 0x24 ; mov eax, 0x14 ; syscall
0x000000000043ea38 : add al, 0x24 ; mov eax, 1 ; syscall
0x000000000043e978 : add al, 0x24 ; mov eax, 2 ; syscall
0x000000000046a3e8 : add al, 0x24 ; mov eax, 3 ; syscall
0x000000000044a08a : add al, 0x24 ; mov r12, rsi ; jmp 0x44a062
0x000000000044176c : add al, 0x24 ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000044ecea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047c075 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040ea70 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044c71d : add al, 0x29 ; ret 0x8941
0x000000000046518e : add al, 0x31 ; ret
0x000000000046508a : add al, 0x37 ; ret
0x0000000000415b2f : add al, 0x3a ; ret
0x00000000004b8106 : add al, 0x3d ; retf
0x000000000048032c : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480301
0x0000000000465f56 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000004709a1 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043af3b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000043a449 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043a45b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000463713 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000463653 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000043482a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463534 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000438c89 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000464d84 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000473d16 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x473cca ; xor eax, eax ; ret
0x0000000000473606 : add al, 0x4c ; cmp edx, eax ; jne 0x4735b4 ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000043a457 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000438c97 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044bfc2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041b664 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x000000000049c24a : add al, 0x75 ; adc byte ptr [rax + 8], bh ; ret
0x0000000000465f54 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000041f54a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bf177 : add al, 0x79 ; ret
0x0000000000474951 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000499683 : add al, 0x81 ; je 0x499665 ; ret
0x00000000004288ab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000049967f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x499669 ; ret
0x000000000042a183 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043db58 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43db48 ; ret
0x0000000000428607 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000448acd : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000049a89a : add al, 0x84 ; add rax, r12 ; jmp rax
0x000000000046a8d0 : add al, 0x85 ; leave ; jne 0x46a888 ; xor eax, eax ; ret
0x0000000000466639 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049b15f : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043a446 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000438c86 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000040e29a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004437b9 : add al, 0x89 ; retf -0x1540
0x000000000043db5b : add al, 0x8a ; je 0x43db45 ; ret
0x000000000045bbf0 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000489733 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c1588 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c4aee : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049ad24 : add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000454ab3 : add al, 0xc5 ; and byte ptr [rbx + rcx*2], 0 ; jmp rax
0x0000000000479b8d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x479be9
0x000000000047f69d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47f6f9
0x00000000004663a7 : add al, 0xe8 ; ret
0x000000000047a505 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042208d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000434b93 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043e91b : add al, 0xf3 ; ret
0x0000000000425e29 : add al, 0xf6 ; ret 0x7408
0x00000000004a3349 : add al, 0xf9 ; call qword ptr [rax]
0x0000000000480a28 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000473ccc : add al, 1 ; cmp rax, 0xff ; cmove rax, rdx ; ret
0x00000000004bf1ef : add al, 2 ; hlt ; ret
0x00000000004bddcc : add al, 3 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xc], al ; call qword ptr [rdx]
0x000000000042ee37 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7380 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x000000000042092d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042c458 : add al, 7 ; ret
0x000000000042da2f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004c34df : add al, ah ; mov bh, 0xf8 ; call qword ptr [rdi]
0x00000000004c4f6f : add al, al ; and edx, edi ; jmp rdi
0x00000000004a35ff : add al, al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d9
0x00000000004c634f : add al, al ; out dx, al ; cli ; jmp qword ptr [rdx]
0x00000000004c15af : add al, al ; ret
0x00000000004c14bf : add al, al ; sal bh, 0xff ; retf 2
0x00000000004adb87 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004a293d : add al, bh ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004c3527 : add al, bh ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004bfd37 : add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rsi]
0x00000000004c19d7 : add al, bl ; fincstp ; jmp qword ptr [rbx]
0x00000000004c2d47 : add al, bl ; ja 0x4c2d47 ; call qword ptr [rcx]
0x00000000004c3447 : add al, bl ; mov dl, 0xf8 ; call qword ptr [rdi]
0x000000000041a54f : add al, bpl ; cli ; retf
0x0000000000402857 : add al, bpl ; ret 0xffda
0x000000000049e51e : add al, bpl ; retf
0x0000000000496e72 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041836c : add al, byte ptr [r8] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000422e11 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000041904d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425403 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000410605 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000040049f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000469566 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041ee86 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044549d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045146d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004229ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d31c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000429f41 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422a11 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043f562 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000004407e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440555 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440421 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440399 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000465e73 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000400430 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000469c7a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000403895 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000477a18 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000424568 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043c8e4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004748bd : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000400463 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000048277e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000041b0c5 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000041836d : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a060 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000044734c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000004469cc : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044c154 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c8a75 : add al, byte ptr [rax] ; ret
0x000000000044391a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44390e
0x0000000000466af7 : add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf -0x72bf
0x0000000000441e1e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bed10 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c470d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c44e5 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004bfa5d : add al, byte ptr [rdx] ; ret
0x00000000004bec20 : add al, byte ptr [rdx] ; retf
0x000000000047a0c5 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c158c : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x000000000041b0c4 : add al, byte ptr ds:[rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x00000000004c7557 : add al, ch ; add ah, bh ; jmp qword ptr [rax]
0x0000000000411472 : add al, ch ; call 0xffffffff854118af
0x00000000004159c2 : add al, ch ; clc ; ret
0x000000000041a550 : add al, ch ; cli ; retf
0x00000000004452c0 : add al, ch ; cli ; retf -1
0x0000000000405213 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x00000000004c0757 : add al, ch ; iretd ; cmc ; call rdx
0x00000000004c34f7 : add al, ch ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c7817 : add al, ch ; or ah, bh ; call qword ptr [rdx]
0x00000000004c64f7 : add al, ch ; or bh, bl ; jmp rsi
0x0000000000403c9d : add al, ch ; pop rbp ; ret
0x00000000004bf717 : add al, ch ; pop rsp ; cmc ; call qword ptr [rcx]
0x0000000000455597 : add al, ch ; push rbx ; ret 0xfffa
0x00000000004c5647 : add al, ch ; push rcx ; cli ; jmp rsp
0x000000000041e9f7 : add al, ch ; ret
0x00000000004165b8 : add al, ch ; ret 0x6a
0x0000000000482fb8 : add al, ch ; ret 0xf9a0
0x00000000004428b8 : add al, ch ; ret 0xfcbf
0x0000000000402858 : add al, ch ; ret 0xffda
0x000000000040241f : add al, ch ; retf
0x0000000000443e80 : add al, ch ; retf -0x187
0x00000000004685b0 : add al, ch ; retf -0x4b1
0x0000000000451220 : add al, ch ; retf -0xf5
0x000000000041bef0 : add al, ch ; retf 0x25e
0x0000000000414320 : add al, ch ; retf 0x2da
0x000000000045a000 : add al, ch ; retf 0x8d
0x00000000004c3487 : add al, cl ; leave ; std ; call qword ptr [rbx]
0x00000000004c350f : add al, dh ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c77ff : add al, dh ; or ah, bh ; call qword ptr [rax]
0x00000000004c7f15 : add al, dh ; ret
0x00000000004c7e2f : add al, dh ; xchg eax, edx ; cld ; call qword ptr [rax]
0x00000000004bc4df : add al, dl ; inc byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004c3e0f : add al, dl ; jg 0x4c3e10 ; call rdx
0x00000000004c5caf : add al, dl ; lodsd eax, dword ptr [rsi] ; cli ; call rdx
0x000000000045ec2e : add al, r13b ; retf
0x00000000004c6482 : add bh, ah ; ret
0x000000000044419f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a2949 : add bh, al ; inc dword ptr [rax] ; div edi ; call qword ptr [rax]
0x00000000004a2945 : add bh, al ; jmp rax
0x000000000045ef1e : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000041335a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400b87 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047d97f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000402c9c : add bh, bh ; sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x0000000000479ca0 : add bh, byte ptr [rax + 1] ; ret
0x00000000004122c2 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dc8b : add bh, byte ptr [rax - 1] ; ret
0x00000000004be913 : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043ccb2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004a3381 : add bh, cl ; call qword ptr [rax + 0x10fff903]
0x00000000004a0a3f : add bh, cl ; sbb eax, 0x40 ; add byte ptr [rax], al ; ret 0x401d
0x000000000046f9c6 : add bh, dh ; ret 0x804
0x00000000004c392f : add bh, dl ; retf
0x00000000004256e6 : add bl, al ; lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000466611 : add bl, al ; mov eax, 2 ; ret
0x0000000000420794 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000499839 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004438ca : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004a2e4c : add bl, bl ; clc ; inc dword ptr [rax - 0x3a] ; clc ; call qword ptr [rax]
0x00000000004c5277 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c44b7 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004a2f68 : add bl, byte ptr [rcx + rdi*8] ; call qword ptr [rdx + 0x22fff91b]
0x00000000004c5335 : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000046976a : add bl, ch ; ret 0x1f0f
0x000000000046b35e : add bl, ch ; retf
0x00000000004865d8 : add bl, ch ; retf -0x76bb
0x000000000047eb5f : add bl, ch ; retf 0x1f0f
0x000000000043eebc : add bl, ch ; retf 0x4890
0x00000000004bc3f7 : add bl, cl ; add ecx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000406367 : add bl, dh ; ret
0x000000000048835f : add bl, dl ; add byte ptr [r8 + 1], cl ; retf -0x74b8
0x000000000046fb5a : add byte ptr [r11 + r9*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x0000000000466a94 : add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x0000000000455591 : add byte ptr [r15 + 0x4b22e8], dil ; call 0x4017f9
0x00000000004554f4 : add byte ptr [r15 + 0x4b2318], dil ; call 0x4017f9
0x000000000047a270 : add byte ptr [r15 + 0x6cc340], r15b ; call rax
0x000000000047a39b : add byte ptr [r15 + 0x6cc344], r15b ; call rdx
0x000000000045aea3 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x0000000000459e8f : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000473d51 : add byte ptr [r8 + 0x39], r9b ; ret
0x000000000042535f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x000000000046861e : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000488361 : add byte ptr [r8 + 1], cl ; retf -0x74b8
0x0000000000467b95 : add byte ptr [r8 - 0x77], cl ; ret
0x00000000004428c1 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000458f38 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27ed74a
0x0000000000446565 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004c266d : add byte ptr [r8], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c1fe5 : add byte ptr [r8], r8b ; js 0x4c1ff1 ; clc ; call rsp
0x000000000043f4f0 : add byte ptr [r8], r8b ; ret
0x00000000004c225d : add byte ptr [r8], r8b ; sbb byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x0000000000472b17 : add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c3a74
0x0000000000472b16 : add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c3a75
0x00000000004c4c8f : add byte ptr [rax + 0x14], ah ; cli ; jmp rdx
0x000000000042078f : add byte ptr [rax + 0x16], bh ; ret
0x000000000043e85f : add byte ptr [rax + 0x18], bh ; syscall
0x00000000004c22a7 : add byte ptr [rax + 0x1d], bl ; clc ; call qword ptr [rax]
0x000000000049969f : add byte ptr [rax + 0x26], bh ; syscall
0x000000000043d27f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00000000004054a7 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044b978 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418bd5 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044aaf0 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000041f910 : add byte ptr [rax + 0x29], cl ; retf
0x000000000041d625 : add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x000000000041cd2f : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000004bed4f : add byte ptr [rax + 0x2d], dh ; cmc ; jmp qword ptr [rsi]
0x00000000004c6dbf : add byte ptr [rax + 0x38], dh ; sti ; jmp qword ptr [rdx]
0x00000000004173fb : add byte ptr [rax + 0x39], cl ; ret
0x000000000046d317 : add byte ptr [rax + 0x39], cl ; ret 0x7874
0x000000000048336b : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x00000000004178e6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044e15b : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004178a7 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000441fa1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000442060 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000046d4f5 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004469a0 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042f1e1 : add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x000000000043d408 : add byte ptr [rax + 0x39], cl ; retf -0x78f1
0x000000000043226e : add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000042f6b6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000433ad3 : add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004c27a7 : add byte ptr [rax + 0x3b], ch ; clc ; call qword ptr [rax]
0x000000000046a28f : add byte ptr [rax + 0x3f], bh ; syscall
0x000000000042535b : add byte ptr [rax + 0x43ccd0], bh ; cmove rax, rdx ; ret
0x0000000000479f46 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004625e7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000043f2bf : add byte ptr [rax + 0x61], bh ; syscall
0x0000000000441d5f : add byte ptr [rax + 0x63], bh ; syscall
0x00000000004122a8 : add byte ptr [rax + 0x63], cl ; jnp 0x412322 ; syscall
0x000000000045c69e : add byte ptr [rax + 0x63], cl ; ret
0x00000000004642df : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000040eee1 : add byte ptr [rax + 0x63], cl ; retf -0x76b4
0x000000000045bcc5 : add byte ptr [rax + 0x63], cl ; retf -0x76b8
0x000000000048a7f4 : add byte ptr [rax + 0x63], cl ; retf -0x7cb8
0x000000000040dc52 : add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000043ebc0 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x48 ; syscall
0x000000000044c258 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x000000000046a2cf : add byte ptr [rax + 0x68], bh ; syscall
0x000000000046a2bf : add byte ptr [rax + 0x6b], bh ; syscall
0x0000000000417db2 : add byte ptr [rax + 0x6c9800], bh ; ret
0x000000000046a2df : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000422e0f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000475f74 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043aedf : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000040f90a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000046c68e : add byte ptr [rax + 0x9e], bh ; syscall
0x000000000043f49f : add byte ptr [rax + 0xb], bh ; syscall
0x000000000046696f : add byte ptr [rax + 0xc9], bh ; syscall
0x0000000000441e01 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000043e246 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000041cc65 : add byte ptr [rax + 0xf48006c], bl ; retf -0x76b4
0x0000000000464ff5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000049acdd : add byte ptr [rax + 0xf], cl ; mov edi, 0x148015b ; retf
0x0000000000442d7b : add byte ptr [rax + 0xf], cl ; ret
0x0000000000412637 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425360 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040faa9 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000046861f : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000425c83 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000044823a : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000447a8d : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044a64a : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041cc68 : add byte ptr [rax + 0xf], cl ; retf -0x76b4
0x0000000000468ca8 : add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x000000000041bf95 : add byte ptr [rax + 0xf], cl ; retf -0x7cb8
0x00000000004014f0 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000004c1fe7 : add byte ptr [rax + 1], bh ; clc ; call rsp
0x0000000000474087 : add byte ptr [rax + 1], bh ; ret
0x0000000000425405 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000410607 : add byte ptr [rax + 1], cl ; ret
0x00000000004882bf : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047acdc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047e947 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004693ec : add byte ptr [rax + 1], cl ; retf
0x0000000000488362 : add byte ptr [rax + 1], cl ; retf -0x74b8
0x0000000000402aaf : add byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000042540f : add byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000433b91 : add byte ptr [rax + 1], cl ; retf -0x7eb8
0x000000000047ea57 : add byte ptr [rax + 1], cl ; retf 0x42f6
0x0000000000479130 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000049c27f : add byte ptr [rax + 2], bh ; ret
0x000000000040042e : add byte ptr [rax + 2], bh ; syscall
0x000000000040042d : add byte ptr [rax + 2], dil ; syscall
0x000000000044e414 : add byte ptr [rax + 3], bh ; syscall
0x000000000049c26f : add byte ptr [rax + 4], bh ; ret
0x00000000004c4a27 : add byte ptr [rax + 5], bh ; cli ; jmp rdx
0x00000000004be5a7 : add byte ptr [rax + 7], cl ; cmc ; call qword ptr [rdx]
0x00000000004be58f : add byte ptr [rax + 7], dl ; cmc ; call qword ptr [rax]
0x000000000043da7e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x0000000000441d1f : add byte ptr [rax + 8], bh ; syscall
0x000000000043da7d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004acb2b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000041b8bf : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041bfe9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c430b : add byte ptr [rax + rbp*2], al ; add byte ptr [rax - 0x14], dl ; stc ; call qword ptr [rsi]
0x00000000004c8343 : add byte ptr [rax + rbp*4], bh ; add byte ptr [rax], bl ; cmp bh, ch ; call rcx
0x00000000004709a0 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004c634b : add byte ptr [rax + rcx*4 - 0x11400000], al ; cli ; jmp qword ptr [rdx]
0x00000000004a2a90 : add byte ptr [rax + rdi*8], bh ; call qword ptr [rax]
0x00000000004adcd7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000049b910 : add byte ptr [rax + rsi + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004bbb0f : add byte ptr [rax + rsi*4 + 0x4b], dh ; add byte ptr [rax], al ; ret 0x4bb0
0x00000000004c430f : add byte ptr [rax - 0x14], dl ; stc ; call qword ptr [rsi]
0x0000000000461df7 : add byte ptr [rax - 0x14dff3b5], al ; retf -0x6f9a
0x00000000004032f6 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c7dff : add byte ptr [rax - 0x27], al ; cld ; call qword ptr [rax]
0x000000000043f321 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000451e3f : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dc7f : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042066b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044ed7f : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000410627 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000465e7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000465e5f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000465ebf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000465e6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000465eaf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000044ee5f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000458870 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044c16d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004780d5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000488cd2 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000048ce07 : add byte ptr [rax - 0x48], cl ; retf -2
0x00000000004c31c7 : add byte ptr [rax - 0x66], cl ; clc ; jmp rbx
0x00000000004c677f : add byte ptr [rax - 0x67], ah ; std ; call rcx
0x00000000004c6d77 : add byte ptr [rax - 0x68], cl ; jmp qword ptr [rsi]
0x000000000041b858 : add byte ptr [rax - 0x6af0ff94], bl ; ret 0x8349
0x000000000044f243 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000418bb1 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x000000000044911f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449103 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000044913b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047afda : add byte ptr [rax - 0x73], cl ; jl 0x47b00a ; js 0x47b029 ; call rsp
0x000000000047b2ef : add byte ptr [rax - 0x73], cl ; jl 0x47b31f ; js 0x47b33e ; call rsp
0x000000000047b6b6 : add byte ptr [rax - 0x73], cl ; jl 0x47b6e6 ; js 0x47b705 ; call rsp
0x000000000041aa1d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004746c7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b2d7 : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x0000000000454ab0 : add byte ptr [rax - 0x75], cl ; add al, 0xc5 ; and byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000044c19f : add byte ptr [rax - 0x75], cl ; add eax, 0x27fed1 ; ret
0x0000000000444e2f : add byte ptr [rax - 0x75], cl ; add eax, 0x287e31 ; ret
0x000000000041670f : add byte ptr [rax - 0x75], cl ; add eax, 0x2b29a9 ; ret
0x000000000044f25f : add byte ptr [rax - 0x75], cl ; jl 0x44f290 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045a308 : add byte ptr [rax - 0x75], cl ; jl 0x45a339 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x00000000004150e6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464596 : add byte ptr [rax - 0x75], cl ; jp 0x4645e1 ; jmp 0x464566
0x00000000004645cf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047cddd : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416cb7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000430bff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041d967 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x000000000047849f : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x0000000000444952 : add byte ptr [rax - 0x75], cl ; ret
0x000000000041673f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040fba2 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041d573 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004004a1 : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000004003d1 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 1] ; syscall
0x0000000000414c52 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414dc2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000049caf7 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; retf
0x0000000000455462 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b4
0x0000000000453717 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x0000000000468fa9 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000440c35 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000440b35 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044072d : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf -0x13
0x000000000044d3b4 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000418e65 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x00000000004624ac : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x0000000000468a78 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf0913ce
0x000000000040f9f1 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000401462 : add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x000000000041b6ae : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x418176
0x00000000004407f1 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041dc20 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000040342c : add byte ptr [rax - 0x77], cl ; ret
0x00000000004178d2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041710c : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000004598f0 : add byte ptr [rax - 0x77], cl ; ret 0x24e9
0x000000000047a063 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000049d034 : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000046983f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000485394 : add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000043e35a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402a9e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046be0f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x00000000004196cf : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459219 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044e4b4 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000041be6f : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043e1c3 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044e887 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004704a7 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000049c57f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000042530b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a16f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000413360 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000472ed6 : add byte ptr [rax - 0x77], cl ; retf
0x000000000042a33c : add byte ptr [rax - 0x77], cl ; retf -0x63b
0x0000000000422040 : add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x000000000048ad40 : add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000452c4f : add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000422282 : add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x0000000000428944 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000041bfa7 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000410007 : add byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004697de : add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x00000000004220e2 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000442b84 : add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000404e12 : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x00000000004287c6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000047177f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049d7dd : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000470443 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000043e01f : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x0000000000404a13 : add byte ptr [rax - 0x7af0a707], al ; retf -5
0x0000000000464d7f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004677bf : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x00000000004640ba : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000004428c2 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004114d7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000045e44c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x0000000000470e1b : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000049a99e : add byte ptr [rax - 0x7bf0dc06], al ; retf
0x0000000000458f39 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27ed749
0x000000000041c456 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004208ad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401788 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000454758 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000455d7f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000488e8b : add byte ptr [rax - 0x7d], cl ; jl 0x488ebc ; or byte ptr [rax], al ; jne 0x488e66 ; jmp 0x488e6e
0x000000000048c0bb : add byte ptr [rax - 0x7d], cl ; jl 0x48c0ec ; adc byte ptr [rax], al ; jne 0x48c096 ; jmp 0x48c09e
0x000000000041dc62 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040161e : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041b60f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043cdaf : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041c009 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000046939f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040edff : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047565f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a01bf : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045275f : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040137f : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446566 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044b550 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042210f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000463fd7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004255ff : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042558f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000049c55f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000047d31e : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044695f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000461dc7 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000004840df : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000424ba0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000428a23 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422133 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466cef : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000419c6f : add byte ptr [rax - 0x7d], cl ; retf
0x000000000040da18 : add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040d9c8 : add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d87c : add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9f0 : add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da40 : add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d955 : add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d8e0 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040dae0 : add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040dab4 : add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d922 : add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d8b0 : add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000042d96f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000464ebf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044bcd4 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044d75f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000451020 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000451219 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0xf5
0x000000000041bee9 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x25e
0x0000000000414319 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x2da
0x000000000044624c : add byte ptr [rax - 0x7f], cl ; ret 0x50e0
0x000000000043237b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004169df : add byte ptr [rax - 1], bh ; jmp 0x4169b8
0x0000000000463642 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410152 : add byte ptr [rax - 1], bh ; ret
0x000000000041686e : add byte ptr [rax - 1], dil ; ret
0x00000000004bd3b4 : add byte ptr [rax - 3], dh ; jmp rax
0x00000000004013f3 : add byte ptr [rax - 9], cl ; fmul dword ptr [rbx + rcx*4 + 0xd] ; ret 0x2c8d
0x00000000004c1fe3 : add byte ptr [rax*2 + 0x1780000], bl ; clc ; call rsp
0x00000000004159bf : add byte ptr [rax], 0 ; add al, ch ; clc ; ret
0x00000000004452bd : add byte ptr [rax], 0 ; add al, ch ; cli ; retf -1
0x0000000000405210 : add byte ptr [rax], 0 ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x0000000000403c9a : add byte ptr [rax], 0 ; add al, ch ; pop rbp ; ret
0x0000000000451024 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000045121d : add byte ptr [rax], 0 ; add al, ch ; retf -0xf5
0x000000000041beed : add byte ptr [rax], 0 ; add al, ch ; retf 0x25e
0x000000000041431d : add byte ptr [rax], 0 ; add al, ch ; retf 0x2da
0x0000000000414329 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417daf : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6c9800], bh ; ret
0x0000000000433b8e : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x0000000000410389 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000418e62 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x000000000048ae00 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041335d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047d7db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x0000000000434b9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000477b4b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000049c2e3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000046592b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044e0f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041bff3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417dbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c3fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047bc85 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042de51 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446752 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f90b : add byte ptr [rax], 0 ; je 0x40f920 ; mov eax, edx ; pop rbx ; ret
0x0000000000479f47 : add byte ptr [rax], 0 ; je 0x479f58 ; mov eax, edx ; pop rbx ; ret
0x00000000004bfe1f : add byte ptr [rax], ah ; jno 0x4bfe1c ; call qword ptr [rdx]
0x00000000004c610e : add byte ptr [rax], al ; adc ah, bl ; cli ; call rsi
0x00000000004c34da : add byte ptr [rax], al ; adc al, 0x5a ; add byte ptr [rax], al ; loopne 0x4c34a2 ; clc ; call qword ptr [rdi]
0x00000000004c266e : add byte ptr [rax], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c383e : add byte ptr [rax], al ; adc bl, bl ; clc ; call qword ptr [rax]
0x00000000004c15a9 : add byte ptr [rax], al ; add ah, ah ; cmp al, byte ptr [rax] ; add al, al ; ret
0x000000000047099f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004bddca : add byte ptr [rax], al ; add al, 3 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xc], al ; call qword ptr [rdx]
0x00000000004159c0 : add byte ptr [rax], al ; add al, ch ; clc ; ret
0x00000000004452be : add byte ptr [rax], al ; add al, ch ; cli ; retf -1
0x0000000000405211 : add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x0000000000403c9b : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret
0x0000000000451025 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000482fb6 : add byte ptr [rax], al ; add al, ch ; ret 0xf9a0
0x000000000041e68d : add byte ptr [rax], al ; add al, ch ; retf
0x000000000045121e : add byte ptr [rax], al ; add al, ch ; retf -0xf5
0x000000000041beee : add byte ptr [rax], al ; add al, ch ; retf 0x25e
0x000000000041431e : add byte ptr [rax], al ; add al, ch ; retf 0x2da
0x000000000045fb96 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000046660f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000469768 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000046b35c : add byte ptr [rax], al ; add bl, ch ; retf
0x00000000004865d6 : add byte ptr [rax], al ; add bl, ch ; retf -0x76bb
0x000000000041432a : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042078d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000043e85d : add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x000000000045be7b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046d315 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483369 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044e159 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000042f6b4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000433ad1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043f2bd : add byte ptr [rax], al ; add byte ptr [rax + 0x61], bh ; syscall
0x0000000000441d5d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], bh ; syscall
0x00000000004122a6 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x412324 ; syscall
0x00000000004642dd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000040dc50 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000046a2cd : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000046a2bd : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x0000000000417db0 : add byte ptr [rax], al ; add byte ptr [rax + 0x6c9800], bh ; ret
0x000000000046a2dd : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x000000000043aedd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000043f49d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x0000000000441dff : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000043e244 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000448238 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000447a8b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044a648 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041bf93 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf -0x7cb8
0x00000000004014ee : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000479cd3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004883e4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000004882bd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000433b8f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x000000000049c27d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000044e412 : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; syscall
0x000000000049c26d : add byte ptr [rax], al ; add byte ptr [rax + 4], bh ; ret
0x0000000000441d1d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x0000000000461df5 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf -0x6f9a
0x000000000043f31f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000041320d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000041038a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044c16b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004780d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000047afd8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b00c ; js 0x47b02b ; call rsp
0x000000000047b2ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b321 ; js 0x47b340 ; call rsp
0x000000000047b6b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b6e8 ; js 0x47b707 ; call rsp
0x00000000004150e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464594 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x4645e3 ; jmp 0x464568
0x000000000041673d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000455460 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b4
0x0000000000453715 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x0000000000468fa7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000440c33 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000440b33 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000044072b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf -0x13
0x000000000044d3b2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000418e63 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfff1
0x00000000004407ef : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040fa31 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041710a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049d032 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000485392 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000046be0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000046d522 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043e1c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000049c57d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000425309 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a16d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041335e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000472ed4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000042a33a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x63b
0x000000000042203e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x000000000048ad3e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000452c4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000410005 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004287c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000047177d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043e01d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x0000000000404a11 : add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf -5
0x000000000045e44a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x000000000044232c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043cdad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004441a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047565d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a01bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045275d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044b54e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042a077 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004255fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042558d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000049c55d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000044695d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004841bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042a0e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000466ced : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042d96d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044d75d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000433b88 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410150 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004013f1 : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; fmul dword ptr [rbx + rcx*4 + 0xd] ; ret 0x2c8d
0x00000000004166fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000473d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004642db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000046251b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000041320b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000041673b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000417108 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485390 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000049c57b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000045e07b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045783b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043cdab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000047565b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a01bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045275b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004255fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042558b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000049c55b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000044695b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004841bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000499deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004b2cf8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45c9
0x00000000004a2b4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; clc ; jmp qword ptr [rax]
0x000000000041553b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004ae9b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004aeea2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004b2cfa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45c9
0x00000000004ae062 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004ae9f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004aeee2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004ae05a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000416f1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043cfeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000004220eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000420cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000411d0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000004424a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000465e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047792f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047d7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b09dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004afb8c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000049b9b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x49b99c ; ret
0x000000000045efa4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043b50c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b51c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b52c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b53c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043b54c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043b48c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b49c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b4bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b4dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b47c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043aedc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043a8bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000042078c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043e85c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000043f2bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x0000000000441d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046a2cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046a2bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046a2dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000043f49c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000414fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000479cd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049c27c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000049c26c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 4 ; ret
0x0000000000441d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x0000000000434b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000477b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041672c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c2e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000041673c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044e363 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x000000000043e01c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x0000000000411d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000434cec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004424aa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004153b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414bb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a2b4d : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; clc ; jmp qword ptr [rax]
0x000000000041553d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0144 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004ae9b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004aeea4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a0a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x401d
0x00000000004a35e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d9
0x00000000004a3fd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43e5
0x00000000004b2524 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4568
0x00000000004b2cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45c9
0x00000000004bbb14 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4bb0
0x00000000004ae064 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004af9e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0184 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004ae9f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004aeee4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004bd345 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004a09fc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x401c
0x00000000004a63e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4b41
0x00000000004ae05c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000043e9ba : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x000000000041bff4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411a7c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000400cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000042c3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000475739 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000045bc4c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000441cb8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004617ed : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004476f2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043d6da : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004c112e : add byte ptr [rax], al ; add byte ptr [rbp - 0xa], dh ; call qword ptr [rax]
0x000000000043da29 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047b31f : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x00000000004420ec : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000047eb58 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4bc2a0], bh ; jmp 0x47eb35
0x000000000043447d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004114c3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004153b1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000412e70 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046284c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; retf -0x38b8
0x00000000004c0641 : add byte ptr [rax], al ; add byte ptr [rbx + rbp], bh ; add byte ptr [rax], bh ; retf -0xb
0x000000000049b9b5 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000469cc4 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000445c03 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; sti ; ret
0x000000000045fd16 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045d4bc : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x00000000004432ad : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462646 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000041653c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000045cac2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045ca45 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403d73 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043cfed : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000041fd58 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000440431 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000440565 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000044039a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000004403a9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000424f01 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004581cc : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004220ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000420cbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041e197 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x0000000000425710 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000425736 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047bc86 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045af4a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040ec7a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049b717 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049b73f : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000049ba15 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*8 + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000043d985 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000434c7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000434ced : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004482ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462265 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000411d0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042563d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000466985 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044cd26 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000442704 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046b317 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000049b925 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c1531 : add byte ptr [rax], al ; add byte ptr [rdx + rdi], ch ; add byte ptr [rax], bl ; ret
0x000000000042de52 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425552 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440373 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049de25 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c3929 : add byte ptr [rax], al ; add byte ptr [rsi + rbx*2], ah ; add bh, dl ; retf
0x00000000004c87de : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004424ab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c112a : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; add byte ptr [rbp - 0xa], dh ; call qword ptr [rax]
0x0000000000457e9d : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000449185 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000471b62 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000048b078 : add byte ptr [rax], al ; add cl, ch ; retf -0xe
0x000000000043e58d : add byte ptr [rax], al ; add cl, ch ; retf -4
0x0000000000452f9e : add byte ptr [rax], al ; add cl, ch ; retf -6
0x0000000000417758 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000446753 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043c741 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485260 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004bdf6f : add byte ptr [rax], al ; add edi, esi ; call rdi
0x00000000004780a7 : add byte ptr [rax], al ; add rax, -8 ; ret
0x0000000000465e3e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425404 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043dbfe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043df47 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049b973 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004011bc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044f046 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f4c5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000444e97 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000477931 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c48ea : add byte ptr [rax], al ; and al, 0x6e ; add byte ptr [rax], al ; xor byte ptr [rax], al ; cli ; call rsi
0x00000000004bfe1e : add byte ptr [rax], al ; and byte ptr [rcx - 0xb], dh ; call qword ptr [rdx]
0x000000000042563e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000422f00 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000464ff4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004bf716 : add byte ptr [rax], al ; call 0x124bec7e
0x00000000004c34f6 : add byte ptr [rax], al ; call 0x124c2db9
0x00000000004c7816 : add byte ptr [rax], al ; call 0x134c742a
0x00000000004c7846 : add byte ptr [rax], al ; call 0x134c745a
0x00000000004c7876 : add byte ptr [rax], al ; call 0x134c748a
0x00000000004c0f66 : add byte ptr [rax], al ; call 0x174c05b5
0x00000000004c7556 : add byte ptr [rax], al ; call 0x214c7162
0x00000000004452bf : add byte ptr [rax], al ; call 0x441dc4
0x000000000040532f : add byte ptr [rax], al ; call 0x441df4
0x00000000004c0756 : add byte ptr [rax], al ; call 0xffffffffd34bfd31
0x00000000004c5646 : add byte ptr [rax], al ; call 0xffffffffe54c50a3
0x00000000004c64f6 : add byte ptr [rax], al ; call 0xffffffffe74c600c
0x000000000044be7b : add byte ptr [rax], al ; call r12
0x000000000047b194 : add byte ptr [rax], al ; call r14
0x000000000044bf55 : add byte ptr [rax], al ; call r15
0x00000000004016da : add byte ptr [rax], al ; call rax
0x0000000000440379 : add byte ptr [rax], al ; call rbx
0x00000000004b09de : add byte ptr [rax], al ; call rdi
0x000000000040ea2c : add byte ptr [rax], al ; call rdx
0x00000000004afb8e : add byte ptr [rax], al ; call rsp
0x00000000004c6d76 : add byte ptr [rax], al ; cdqe ; jmp qword ptr [rsi]
0x00000000004c3526 : add byte ptr [rax], al ; clc ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004bfd36 : add byte ptr [rax], al ; clc ; outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rsi]
0x0000000000410b47 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x410b58 ; pop rbx ; ret
0x0000000000464055 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x464069 ; ret
0x000000000048c0ba : add byte ptr [rax], al ; cmp qword ptr [rsp + 0x10], 0 ; jne 0x48c097 ; jmp 0x48c09f
0x0000000000488e8a : add byte ptr [rax], al ; cmp qword ptr [rsp + 8], 0 ; jne 0x488e67 ; jmp 0x488e6f
0x00000000004c812a : add byte ptr [rax], al ; cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov al, 0x35 ; std ; call rdx
0x00000000004c0ee6 : add byte ptr [rax], al ; cwde ; idiv bh ; ret
0x00000000004acb3a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004b0b8e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000004adce6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004ad4e6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000004ad8e6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004b0d8e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004b0f8e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004b118e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004b138e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004b158e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004b178e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004b198e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004b1b8e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004b1d8e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004c62a2 : add byte ptr [rax], al ; fadd qword ptr [rdi - 0x1c780000] ; cli ; jmp qword ptr [rdx]
0x00000000004c22a2 : add byte ptr [rax], al ; fadd qword ptr [rdi] ; add byte ptr [rax + 0x1d], bl ; clc ; call qword ptr [rax]
0x00000000004c2d46 : add byte ptr [rax], al ; fdiv dword ptr [rdi - 8] ; call qword ptr [rcx]
0x00000000004c7dfe : add byte ptr [rax], al ; frndint ; call qword ptr [rax]
0x00000000004c6dba : add byte ptr [rax], al ; hlt ; xchg eax, edx ; add byte ptr [rax], al ; jo 0x4c6e03 ; sti ; jmp qword ptr [rdx]
0x00000000004bdfaa : add byte ptr [rax], al ; in al, 4 ; add byte ptr [rax], al ; nop ; insd dword ptr [rdi], dx ; hlt ; call qword ptr [rax]
0x00000000004bfd32 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and al, byte ptr [rax] ; add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rsi]
0x00000000004bfe32 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and eax, dword ptr [rax] ; add byte ptr [rax], ch ; jno 0x4bfe39 ; jmp qword ptr [rax]
0x00000000004c1532 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, byte ptr [rax] ; add byte ptr [rax], bl ; ret
0x00000000004c5a32 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jg 0x4c5a40 ; add byte ptr [rax], ch ; mov edi, edx ; call rsi
0x000000000040f90c : add byte ptr [rax], al ; je 0x40f91f ; mov eax, edx ; pop rbx ; ret
0x00000000004205f7 : add byte ptr [rax], al ; je 0x420604 ; ret
0x0000000000479f48 : add byte ptr [rax], al ; je 0x479f57 ; mov eax, edx ; pop rbx ; ret
0x000000000049b926 : add byte ptr [rax], al ; je 0x49b914 ; add rsp, 0x18 ; ret
0x000000000049b9b6 : add byte ptr [rax], al ; je 0x49b99a ; ret
0x000000000049ba16 : add byte ptr [rax], al ; je 0x49b9f9 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000049de26 : add byte ptr [rax], al ; je 0x49de35 ; ret
0x00000000004c383a : add byte ptr [rax], al ; je 0x4c38a4 ; add byte ptr [rax], al ; adc bl, bl ; clc ; call qword ptr [rax]
0x00000000004bf542 : add byte ptr [rax], al ; jl 0x4bf569 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x00000000004c2d42 : add byte ptr [rax], al ; jl 0x4c2da1 ; add byte ptr [rax], al ; fdiv dword ptr [rdi - 8] ; call qword ptr [rcx]
0x00000000004c3b42 : add byte ptr [rax], al ; jl 0x4c3baf ; add byte ptr [rax], al ; sub byte ptr [rax], bh ; stc ; call rdi
0x00000000004c4042 : add byte ptr [rax], al ; jl 0x4c40b4 ; add byte ptr [rax], al ; sbb ah, ah ; stc ; jmp rax
0x00000000004c5642 : add byte ptr [rax], al ; jl 0x4c56ca ; add byte ptr [rax], al ; call 0xffffffffe54c50a7
0x00000000004c7842 : add byte ptr [rax], al ; jl 0x4c77ec ; add byte ptr [rax], al ; call 0x134c745e
0x00000000004c8342 : add byte ptr [rax], al ; jl 0x4c82f7 ; add byte ptr [rax], al ; sbb byte ptr [rdx], bh ; std ; call rcx
0x0000000000457db9 : add byte ptr [rax], al ; jmp 0x457b8b
0x0000000000469769 : add byte ptr [rax], al ; jmp 0x469732
0x000000000046b35d : add byte ptr [rax], al ; jmp 0x46b32f
0x0000000000478d6f : add byte ptr [rax], al ; jmp 0x478d41
0x000000000047944f : add byte ptr [rax], al ; jmp 0x479421
0x00000000004865d7 : add byte ptr [rax], al ; jmp 0x4865a8
0x000000000048ffd4 : add byte ptr [rax], al ; jmp 0x48ed75
0x000000000043f564 : add byte ptr [rax], al ; jmp rax
0x000000000043e955 : add byte ptr [rax], al ; jne 0x43e976 ; mov eax, 2 ; syscall
0x000000000043e9b5 : add byte ptr [rax], al ; jne 0x43e9d6 ; mov eax, 0 ; syscall
0x000000000043ea15 : add byte ptr [rax], al ; jne 0x43ea36 ; mov eax, 1 ; syscall
0x000000000046a3c5 : add byte ptr [rax], al ; jne 0x46a3e6 ; mov eax, 3 ; syscall
0x000000000046a555 : add byte ptr [rax], al ; jne 0x46a576 ; mov eax, 0x14 ; syscall
0x00000000004c112f : add byte ptr [rax], al ; jne 0x4c112d ; call qword ptr [rax]
0x00000000004bed4e : add byte ptr [rax], al ; jo 0x4bed84 ; cmc ; jmp qword ptr [rsi]
0x00000000004c6dbe : add byte ptr [rax], al ; jo 0x4c6dff ; sti ; jmp qword ptr [rdx]
0x00000000004c1fe6 : add byte ptr [rax], al ; js 0x4c1ff0 ; clc ; call rsp
0x00000000004c4a26 : add byte ptr [rax], al ; js 0x4c4a34 ; cli ; jmp rdx
0x000000000043b50e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b51e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b52e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b53e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043b54e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043b46d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b48e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b49e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b4ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b4be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b4ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b4de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b41a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b4ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b4fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b47e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000047afd9 : add byte ptr [rax], al ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x00000000004c7872 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; popfq ; add byte ptr [rax], al ; call 0x134c748e
0x00000000004c6d72 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; add byte ptr [rax], al ; cdqe ; jmp qword ptr [rsi]
0x00000000004c34de : add byte ptr [rax], al ; loopne 0x4c349e ; clc ; call qword ptr [rdi]
0x00000000004c812e : add byte ptr [rax], al ; mov al, 0x35 ; std ; call rdx
0x000000000043a3ee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000438c3e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004c62a6 : add byte ptr [rax], al ; mov bl, ah ; cli ; jmp qword ptr [rdx]
0x00000000004c4d96 : add byte ptr [rax], al ; mov byte ptr [rax], bl ; cli ; jmp qword ptr [rax]
0x00000000004c7ef6 : add byte ptr [rax], al ; mov byte ptr [rcx], bl ; std ; jmp rsp
0x000000000043aede : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043a8be : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004c6ac6 : add byte ptr [rax], al ; mov byte ptr [rdx], ch ; sti ; call rsp
0x00000000004bf546 : add byte ptr [rax], al ; mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x00000000004c0bc6 : add byte ptr [rax], al ; mov dl, dh ; cmc ; call qword ptr [rdx]
0x000000000046412b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043a8ce : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042078e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043e85e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000046a28e : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x000000000043f2be : add byte ptr [rax], al ; mov eax, 0x61 ; syscall
0x0000000000441d5e : add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046a2ce : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046a2be : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046a2de : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x0000000000417db1 : add byte ptr [rax], al ; mov eax, 0x6c9800 ; ret
0x000000000046c68d : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x000000000043f49e : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000441e00 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043e245 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000004169de : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x4169b9
0x0000000000463641 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410151 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000474086 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049c27e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000044e413 : add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049c26e : add byte ptr [rax], al ; mov eax, 4 ; ret
0x0000000000441d1e : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x00000000004163fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049d80e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d829 ; ret
0x000000000049da1e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49da39 ; ret
0x0000000000487d5e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x244e9a] ; ret
0x000000000040f721 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000472cc6 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000046a4f3 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000040f955 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000444143 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000047eb59 : add byte ptr [rax], al ; mov ebx, 0x4bc2a0 ; jmp 0x47eb34
0x000000000046a4ee : add byte ptr [rax], al ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000043a8fe : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000402c96 : add byte ptr [rax], al ; mov edi, 0x6cc0a0 ; call rbx
0x000000000049b718 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049b740 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043447e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000441eb6 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000440374 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000469cc5 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004c3482 : add byte ptr [rax], al ; mov esp, 0xc8000059 ; leave ; std ; call qword ptr [rbx]
0x000000000047a708 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004546d5 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000487672 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004876f6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470414 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042c08e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049ba5e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000479cc0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000417719 : add byte ptr [rax], al ; mov qword ptr fs:[r9], rdx ; mov rax, rdx ; ret
0x000000000044ed8f : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004166ae : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000044ee5e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x0000000000465e5e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x0000000000465e6e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x0000000000465e7e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x0000000000465e8e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x0000000000465e9e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x0000000000465eae : add byte ptr [rax], al ; mov rax, 6 ; ret
0x0000000000465ebe : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414be9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410b60 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004150e5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000477b4e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047124e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x00000000004645ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041672e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049b9ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049ba2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049ba6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049bace : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049babe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049ba7e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000444e2e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287e31] ; ret
0x000000000041670e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b29a9] ; ret
0x000000000049986e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000049c2e6 : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000473eef : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049bbd8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040fba1 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041d572 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041b8c2 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041673e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041dc1f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a089 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000044e365 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000464595 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464567
0x0000000000440566 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440432 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000004403aa : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000044039b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000400464 : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x000000000041b6ad : add byte ptr [rax], al ; mov rdi, rbp ; call 0x418177
0x00000000004407f0 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000461f96 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004618ab : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004004a0 : add byte ptr [rax], al ; mov rdi, rbx ; mov eax, r10d ; syscall
0x000000000043e01e : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x00000000004349de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004178d1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x4178f4
0x000000000049c03e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x0000000000473e18 : add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004c0752 : add byte ptr [rax], al ; mov word ptr [rax + rax], gs ; add al, ch ; iretd ; cmc ; call rdx
0x00000000004c7552 : add byte ptr [rax], al ; mov word ptr [rdx + 0xe80000], ds ; cld ; jmp qword ptr [rax]
0x00000000004bdf6a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], al ; add edi, esi ; call rdi
0x00000000004c266a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c4f6a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; je 0x4c4f78 ; add al, al ; and edx, edi ; jmp rdi
0x00000000004c686a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; lea eax, dword ptr [rax] ; add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x000000000043f456 : add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x0000000000499917 : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x00000000004122a7 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x000000000040dc51 : add byte ptr [rax], al ; movsxd rdi, ecx ; syscall
0x000000000044ef54 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000411d0e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043460e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000434cee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000434c7e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004c7e5e : add byte ptr [rax], al ; nop ; cld ; call qword ptr [rax]
0x00000000004bdfae : add byte ptr [rax], al ; nop ; insd dword ptr [rdi], dx ; hlt ; call qword ptr [rax]
0x000000000046a39c : add byte ptr [rax], al ; nop ; mov eax, 0x15 ; syscall
0x000000000043f4dc : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x000000000046a2ac : add byte ptr [rax], al ; nop ; mov eax, 0x66 ; syscall
0x000000000043f4bc : add byte ptr [rax], al ; nop ; mov eax, 0xa ; syscall
0x00000000004424ac : add byte ptr [rax], al ; nop ; ret
0x00000000004c5f8e : add byte ptr [rax], al ; nop ; salc ; cli ; jmp rsi
0x00000000004c3826 : add byte ptr [rax], al ; or bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c3856 : add byte ptr [rax], al ; or bl, bl ; clc ; call qword ptr [rdx]
0x00000000004c5896 : add byte ptr [rax], al ; or byte ptr [rsi - 6], bh ; call rax
0x00000000004c6666 : add byte ptr [rax], al ; or byte ptr [rsi], dl ; sti ; jmp qword ptr [rdx]
0x0000000000476044 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045bb7d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045bc4d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043da2a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000462647 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000459c4c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000004420ed : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004114c4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411aab : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c392a : add byte ptr [rax], al ; pop rsi ; add byte ptr [rax], al ; xlatb ; retf
0x00000000004c8022 : add byte ptr [rax], al ; pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; sbb byte ptr [rax], dh ; std ; call rsi
0x00000000004c4a22 : add byte ptr [rax], al ; pop rsp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; js 0x4c4a38 ; cli ; jmp rdx
0x00000000004c3822 : add byte ptr [rax], al ; pop rsp ; pop rbp ; add byte ptr [rax], al ; or bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c3522 : add byte ptr [rax], al ; pop rsp ; pop rdx ; add byte ptr [rax], al ; clc ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c7812 : add byte ptr [rax], al ; popfq ; add byte ptr [rax], al ; call 0x134c742e
0x00000000004c430a : add byte ptr [rax], al ; push -0x13b00000 ; stc ; call qword ptr [rsi]
0x00000000004c430e : add byte ptr [rax], al ; push rax ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004bfe1a : add byte ptr [rax], al ; push rsp ; and eax, dword ptr [rax] ; add byte ptr [rax], ah ; jno 0x4bfe21 ; call qword ptr [rdx]
0x00000000004a2b4f : add byte ptr [rax], al ; pushfq ; clc ; jmp qword ptr [rax]
0x00000000004bf64e : add byte ptr [rax], al ; rcr byte ptr [rcx - 0xb], 0xff ; ret
0x00000000004011c3 : add byte ptr [rax], al ; ret
0x00000000004a6d66 : add byte ptr [rax], al ; ret 0
0x00000000004adcde : add byte ptr [rax], al ; ret 0x10
0x00000000004af9ae : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0146 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004ae9b6 : add byte ptr [rax], al ; ret 0x24
0x00000000004aeea6 : add byte ptr [rax], al ; ret 0x33
0x00000000004a0a46 : add byte ptr [rax], al ; ret 0x401d
0x00000000004a35e6 : add byte ptr [rax], al ; ret 0x43d9
0x00000000004a3fd6 : add byte ptr [rax], al ; ret 0x43e5
0x00000000004b2526 : add byte ptr [rax], al ; ret 0x4568
0x00000000004b2cfe : add byte ptr [rax], al ; ret 0x45c9
0x00000000004bbb16 : add byte ptr [rax], al ; ret 0x4bb0
0x00000000004ad4de : add byte ptr [rax], al ; ret 0xa
0x00000000004ad8de : add byte ptr [rax], al ; ret 0xd
0x00000000004b0d82 : add byte ptr [rax], al ; ret 1
0x00000000004b0f82 : add byte ptr [rax], al ; ret 2
0x00000000004b1182 : add byte ptr [rax], al ; ret 3
0x00000000004b1382 : add byte ptr [rax], al ; ret 4
0x00000000004b1582 : add byte ptr [rax], al ; ret 5
0x00000000004ad086 : add byte ptr [rax], al ; ret 6
0x00000000004b1982 : add byte ptr [rax], al ; ret 7
0x00000000004b1b82 : add byte ptr [rax], al ; ret 8
0x00000000004b1d82 : add byte ptr [rax], al ; ret 9
0x00000000004a6d8a : add byte ptr [rax], al ; retf
0x00000000004a6d86 : add byte ptr [rax], al ; retf 0
0x00000000004ade3e : add byte ptr [rax], al ; retf 0x11
0x00000000004af9e6 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0186 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004ae9f6 : add byte ptr [rax], al ; retf 0x24
0x00000000004aeee6 : add byte ptr [rax], al ; retf 0x33
0x00000000004bd347 : add byte ptr [rax], al ; retf 0x3b9a
0x00000000004a09fe : add byte ptr [rax], al ; retf 0x401c
0x00000000004a63e6 : add byte ptr [rax], al ; retf 0x4b41
0x00000000004ad63e : add byte ptr [rax], al ; retf 0xb
0x00000000004ada3e : add byte ptr [rax], al ; retf 0xe
0x00000000004ae05e : add byte ptr [rax], al ; retf 1
0x00000000004b0f92 : add byte ptr [rax], al ; retf 2
0x00000000004b1192 : add byte ptr [rax], al ; retf 3
0x00000000004acee6 : add byte ptr [rax], al ; retf 4
0x00000000004b1592 : add byte ptr [rax], al ; retf 5
0x00000000004b1792 : add byte ptr [rax], al ; retf 6
0x00000000004b1992 : add byte ptr [rax], al ; retf 7
0x00000000004b1b92 : add byte ptr [rax], al ; retf 8
0x00000000004b1d92 : add byte ptr [rax], al ; retf 9
0x00000000004b137e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004ad786 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004c3e0e : add byte ptr [rax], al ; sar byte ptr [rdi - 7], 1 ; call rdx
0x00000000004c4046 : add byte ptr [rax], al ; sbb ah, ah ; stc ; jmp rax
0x00000000004bf712 : add byte ptr [rax], al ; sbb al, 0 ; add al, ch ; pop rsp ; cmc ; call qword ptr [rcx]
0x00000000004c1fe2 : add byte ptr [rax], al ; sbb al, 0x45 ; add byte ptr [rax], al ; js 0x4c1ff4 ; clc ; call rsp
0x00000000004c225e : add byte ptr [rax], al ; sbb byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x00000000004c8026 : add byte ptr [rax], al ; sbb byte ptr [rax], dh ; std ; call rsi
0x00000000004c8346 : add byte ptr [rax], al ; sbb byte ptr [rdx], bh ; std ; call rcx
0x00000000004c4f6e : add byte ptr [rax], al ; shl byte ptr [rcx], 0xfa ; jmp rdi
0x00000000004c634e : add byte ptr [rax], al ; shr dh, 0xfa ; jmp qword ptr [rdx]
0x00000000004c34f2 : add byte ptr [rax], al ; sub al, 0x5a ; add byte ptr [rax], al ; call 0x124c2dbd
0x00000000004c64f2 : add byte ptr [rax], al ; sub al, 0x8a ; add byte ptr [rax], al ; call 0xffffffffe74c6010
0x00000000004c7ef2 : add byte ptr [rax], al ; sub al, 0xa4 ; add byte ptr [rax], al ; mov byte ptr [rcx], bl ; std ; jmp rsp
0x00000000004c6016 : add byte ptr [rax], al ; sub al, bl ; cli ; jmp rdi
0x00000000004c3b46 : add byte ptr [rax], al ; sub byte ptr [rax], bh ; stc ; call rdi
0x00000000004bfe36 : add byte ptr [rax], al ; sub byte ptr [rcx - 0xb], dh ; jmp qword ptr [rax]
0x000000000042e89c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000415b36 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000046a44f : add byte ptr [rax], al ; sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000004003d8 : add byte ptr [rax], al ; syscall
0x00000000004c634a : add byte ptr [rax], al ; test byte ptr [rax - 0x11400000], cl ; cli ; jmp qword ptr [rdx]
0x00000000004bed4a : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add byte ptr [rax], al ; jo 0x4bed88 ; cmc ; jmp qword ptr [rsi]
0x0000000000441cb9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004c6012 : add byte ptr [rax], al ; test qword ptr [rax], r8 ; add byte ptr [rax], ch ; fdivr st(2) ; jmp rdi
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004c610a : add byte ptr [rax], al ; xchg byte ptr [rax], r8b ; add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x00000000004c225a : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [r8], r8b ; sbb byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x00000000004c392e : add byte ptr [rax], al ; xlatb ; retf
0x00000000004c7dfa : add byte ptr [rax], al ; xor al, 0xa3 ; add byte ptr [rax], al ; frndint ; call qword ptr [rax]
0x00000000004c48ee : add byte ptr [rax], al ; xor byte ptr [rax], al ; cli ; call rsi
0x00000000004c686e : add byte ptr [rax], al ; xor byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x00000000004bddce : add byte ptr [rax], al ; xor byte ptr [rdx - 0xc], al ; call qword ptr [rdx]
0x0000000000451327 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ec7b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000469c65 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041bff6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411a7e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041330e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x413329 ; ret
0x0000000000400cfe : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004878e1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000043e17a : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403897 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x00000000004402e6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000044030b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000044032f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000044034f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004255ed : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004c3b43 : add byte ptr [rax], bh ; add byte ptr [rax], ch ; cmp cl, bh ; call rdi
0x00000000004c0647 : add byte ptr [rax], bh ; retf -0xb
0x00000000004c8347 : add byte ptr [rax], bl ; cmp bh, ch ; call rcx
0x00000000004c4047 : add byte ptr [rax], bl ; in al, -7 ; jmp rax
0x00000000004bfbe7 : add byte ptr [rax], bl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rax]
0x00000000004c1537 : add byte ptr [rax], bl ; ret
0x00000000004c8027 : add byte ptr [rax], bl ; xor ch, bh ; call rsi
0x00000000004c3b47 : add byte ptr [rax], ch ; cmp cl, bh ; call rdi
0x00000000004c6017 : add byte ptr [rax], ch ; fdivr st(2) ; jmp rdi
0x00000000004bfe37 : add byte ptr [rax], ch ; jno 0x4bfe34 ; jmp qword ptr [rax]
0x00000000004c5a37 : add byte ptr [rax], ch ; mov edi, edx ; call rsi
0x00000000004bc3f1 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000044e50d : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x0000000000476045 : add byte ptr [rax], cl ; je 0x4760b2 ; pop rbx ; ret
0x00000000004c5897 : add byte ptr [rax], cl ; jle 0x4c5899 ; call rax
0x000000000049a1de : add byte ptr [rax], cl ; mov byte ptr [rip + 0x2322f9], 8 ; ret
0x00000000004c1e37 : add byte ptr [rax], cl ; push rdi ; call qword ptr [rdi]
0x000000000049a1e5 : add byte ptr [rax], cl ; ret
0x00000000004c48ef : add byte ptr [rax], dh ; add dl, bh ; call rsi
0x00000000004bddcf : add byte ptr [rax], dh ; hlt ; call qword ptr [rdx]
0x00000000004c686f : add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x0000000000473e16 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004c610f : add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x00000000004010af : add byte ptr [rax], dl ; jmp 0x401013
0x000000000041d05b : add byte ptr [rax], dl ; ret 0x41
0x00000000004c266f : add byte ptr [rax], dl ; sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004c0640 : add byte ptr [rax], r8b ; add byte ptr [rbx + rbp], bh ; add byte ptr [rax], bh ; retf -0xb
0x00000000004704fd : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000477b1d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000047d97d : add byte ptr [rax], r8b ; call rbx
0x000000000046a28d : add byte ptr [rax], r8b ; mov eax, 0x3f ; syscall
0x00000000004169dd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; jmp 0x4169ba
0x0000000000474085 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043a8ed : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042c08d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043a92d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047a485 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000412b2d : add byte ptr [rax], r8b ; ret
0x00000000004132ed : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043e9b6 : add byte ptr [rbp + 0x14], dh ; mov eax, 0 ; syscall
0x000000000046a556 : add byte ptr [rbp + 0x14], dh ; mov eax, 0x14 ; syscall
0x000000000043ea16 : add byte ptr [rbp + 0x14], dh ; mov eax, 1 ; syscall
0x000000000043e956 : add byte ptr [rbp + 0x14], dh ; mov eax, 2 ; syscall
0x000000000046a3c6 : add byte ptr [rbp + 0x14], dh ; mov eax, 3 ; syscall
0x0000000000466b97 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x00000000004679f7 : add byte ptr [rbp + 0x39440753], cl ; retf -0x72f1
0x000000000041ab31 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041acae : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047573b : add byte ptr [rbp + 0x39], cl ; retf
0x0000000000477f3c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045bb7e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045bc4e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000473e57 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x00000000004167d3 : add byte ptr [rbp + 0xa], dh ; jmp 0x416801
0x000000000041cc90 : add byte ptr [rbp + 0xa], dh ; jmp 0x41ccbf
0x000000000049fff2 : add byte ptr [rbp + 0xa], dh ; jmp 0x4a0020
0x0000000000477dc2 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x000000000041cc10 : add byte ptr [rbp + 0xb], dh ; jmp 0x41cc41
0x000000000047875f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000047864f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000477e64 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000004c6013 : add byte ptr [rbp + rax*4], cl ; add byte ptr [rax], ch ; fdivr st(2) ; jmp rdi
0x00000000004c3853 : add byte ptr [rbp + rbx*2 - 0x24f80000], cl ; clc ; call qword ptr [rdx]
0x00000000004c7873 : add byte ptr [rbp + rbx*4 + 0x8e80000], ch ; cld ; call qword ptr [rdx]
0x00000000004c785b : add byte ptr [rbp + rbx*4 + 0x8f00000], dl ; cld ; call qword ptr [rax]
0x00000000004c782b : add byte ptr [rbp + rbx*4], ah ; add al, dh ; or ah, bh ; call qword ptr [rax]
0x00000000004c7843 : add byte ptr [rbp + rbx*4], bh ; add al, ch ; or ah, bh ; call qword ptr [rdx]
0x00000000004c7813 : add byte ptr [rbp + rbx*4], cl ; add al, ch ; or ah, bh ; call qword ptr [rdx]
0x00000000004ad8d7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000004c686b : add byte ptr [rbp + rcx*4 + 0x18300000], ah ; sti ; call qword ptr [rax]
0x000000000046471e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000477a1a : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004bd428 : add byte ptr [rbp + rdi*8 - 1], 0xd0 ; std ; jmp qword ptr [rax]
0x000000000049e384 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000488e91 : add byte ptr [rbp - 0x36], dh ; jmp 0x488e68
0x000000000048c0c1 : add byte ptr [rbp - 0x36], dh ; jmp 0x48c098
0x0000000000441cba : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004adb83 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000047542a : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf -0x7cf1
0x0000000000451f69 : add byte ptr [rbp - 0x75], cl ; jl 0x451f9a ; and byte ptr [rax + 1], cl ; ret
0x000000000045c209 : add byte ptr [rbp - 0x75], cl ; jl 0x45c23a ; and byte ptr [rax + 1], cl ; ret
0x000000000040dc67 : add byte ptr [rbp - 0x76208037], al ; retf -0x2509
0x00000000004617ef : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004476f4 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000042310d : add byte ptr [rbp - 0x77], cl ; retf
0x0000000000466a95 : add byte ptr [rbp - 0x77], cl ; retf 0x694d
0x000000000043d6dc : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000047fdef : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000004c1130 : add byte ptr [rbp - 0xa], dh ; call qword ptr [rax]
0x00000000004a33d4 : add byte ptr [rbp - 7], dh ; call qword ptr [rax]
0x00000000004c4043 : add byte ptr [rbp], bh ; add byte ptr [rax], bl ; in al, -7 ; jmp rax
0x00000000004c8023 : add byte ptr [rbp], bl ; add byte ptr [rax], bl ; xor ch, bh ; call rsi
0x00000000004288a9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000474078 : add byte ptr [rbx + 0x2560f00d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043da2b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000046f9c0 : add byte ptr [rbx + 0x25d1d115], cl ; add bh, dh ; ret 0x804
0x0000000000410b48 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000417076 : add byte ptr [rbx + 0x2b459a05], al ; add byte ptr [rcx], al ; ret
0x00000000004167a7 : add byte ptr [rbx + 0x2b4df505], al ; add byte ptr [rcx], al ; ret
0x000000000047b321 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x00000000004420ee : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000459c4d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043a8ff : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043a42f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000047eb5a : add byte ptr [rbx + 0x4bc2a0], bh ; jmp 0x47eb33
0x000000000041f857 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000043447f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004188f9 : add byte ptr [rbx + 0x5cbe02e7], al ; ret
0x00000000004704f6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041dd27 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000412541 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004114c5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046284e : add byte ptr [rbx + 0x7501046a], al ; retf -0x38b8
0x000000000049d80f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483365 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044ec8a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c1e33 : add byte ptr [rbx + rax*2], ch ; add byte ptr [rax], cl ; push rdi ; call qword ptr [rdi]
0x00000000004bddcb : add byte ptr [rbx + rax], al ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xc], al ; call qword ptr [rdx]
0x00000000004c0643 : add byte ptr [rbx + rbp], bh ; add byte ptr [rax], bh ; retf -0xb
0x000000000049b9b7 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004c266b : add byte ptr [rbx + rcx*2 - 0x2ff00000], ah ; std ; jmp qword ptr [rdx]
0x00000000004c6663 : add byte ptr [rbx + rcx*4 + 0x16080000], bl ; sti ; jmp qword ptr [rdx]
0x0000000000469cc6 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x000000000040522d : add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x0000000000445c05 : add byte ptr [rbx + rcx*4 + 0x3d], cl ; sti ; ret
0x000000000046fb5b : add byte ptr [rbx + rcx*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x0000000000474882 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x0000000000479c27 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047f737 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004c5643 : add byte ptr [rbx + rdi*2], bh ; add al, ch ; push rcx ; cli ; jmp rsp
0x000000000045fd18 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x00000000004438ef : add byte ptr [rbx - 0x18], dl ; retf 0x269
0x000000000047c047 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47c061 ; ret
0x000000000046728a : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410adf : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043daa6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043da9f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043da98 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043da91 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043da8a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043da83 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000045d4be : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043d7f5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043d7e0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x00000000004740e1 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047494e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x00000000004177ff : add byte ptr [rbx - 0x76b3fd1d], al ; loop 0x4177ce ; pop rsp ; ret
0x0000000000419a67 : add byte ptr [rbx - 0x76b3fe1e], al ; retf
0x00000000004432af : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462648 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000410344 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043c8e6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406823 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462274 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004073c0 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000040b2f4 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0xf
0x000000000040a498 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x000000000044214f : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x00000000004c7e5b : add byte ptr [rbx - 0xd700000], dl ; cld ; call qword ptr [rax]
0x000000000041653e : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004a3468 : add byte ptr [rbx - 7], bh ; call qword ptr [rax]
0x00000000004c77fb : add byte ptr [rbx*4 + 0x8f00000], dh ; cld ; call qword ptr [rax]
0x00000000004bd9f8 : add byte ptr [rbx], 0xfe ; call qword ptr [rax + 0x10fffe03]
0x00000000004c7e2b : add byte ptr [rbx], ah ; add al, dh ; xchg eax, edx ; cld ; call qword ptr [rax]
0x00000000004c3e0b : add byte ptr [rbx], al ; add al, dl ; jg 0x4c3e14 ; call rdx
0x0000000000470447 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004bfe33 : add byte ptr [rbx], ch ; add byte ptr [rax], ch ; jno 0x4bfe38 ; jmp qword ptr [rax]
0x00000000004c7dfb : add byte ptr [rbx], dh ; add byte ptr [rax], al ; frndint ; call qword ptr [rax]
0x000000000045ef1b : add byte ptr [rbx], dh ; add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004bfe1b : add byte ptr [rbx], dl ; add byte ptr [rax], ah ; jno 0x4bfe20 ; call qword ptr [rdx]
0x0000000000493a25 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000044e60f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x0000000000464eef : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041aa6f : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x000000000048920d : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000425f66 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047dbce : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040f722 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004748bf : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000415406 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000004704f3 : add byte ptr [rcx + 0x5d5b006c], ah ; jmp rax
0x000000000046412c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042f2ce : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000403993 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x000000000042db4c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043a778 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000499918 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x000000000046a4ef : add byte ptr [rcx + 0xc], bh ; mov eax, ecx ; syscall
0x000000000043fb85 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045cac4 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045ca47 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041a767 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046eb6e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403d75 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000041718b : add byte ptr [rcx + 0xf], cl ; retf -0xcf
0x000000000043cfef : add byte ptr [rcx + 1], cl ; ret
0x000000000041fd5a : add byte ptr [rcx + 9], al ; ret
0x0000000000412492 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c046b : add byte ptr [rcx + rbp - 0x44700000], ah ; cmc ; call qword ptr [rax]
0x00000000004c3483 : add byte ptr [rcx + rbx*2 - 0x36380000], bh ; std ; call qword ptr [rbx]
0x00000000004c3443 : add byte ptr [rcx + rbx*2], bh ; add al, bl ; mov dl, 0xf8 ; call qword ptr [rdi]
0x0000000000487bdd : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret
0x000000000042c08f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412493 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000440433 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000044e50f : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x000000000047dacf : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000440567 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000444ac2 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000041a48a : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x0000000000400465 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000049c03f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000044039c : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000444a1c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x00000000004403ab : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000048e66b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048b7b3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x00000000004885b3 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045a7c4 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000419fbf : add byte ptr [rcx - 0x43], al ; jo 0x419fe9 ; add cl, bpl ; retf -2
0x00000000004055b4 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449463 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449480 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044949d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000419a00 : add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000482780 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000046291f : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047f46b : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x000000000043fe9f : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e98f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000004483ed : add byte ptr [rcx - 0x76ec7738], cl ; retf -0x1f7d
0x000000000044a087 : add byte ptr [rcx - 0x77], al ; add al, 0x24 ; mov r12, rsi ; jmp 0x44a065
0x0000000000441e17 : add byte ptr [rcx - 0x77], al ; ret
0x000000000044e82a : add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x0000000000472b18 : add byte ptr [rcx - 0x77], cl ; call 0xffffffffca8c3a73
0x0000000000424f03 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000041b0c7 : add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x0000000000442aca : add byte ptr [rcx - 0x77], cl ; retf
0x0000000000442af7 : add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004113b3 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004a2a68 : add byte ptr [rcx - 0x7d2f0008], 0xf8 ; jmp qword ptr [rax]
0x00000000004581ce : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000049136b : add byte ptr [rcx - 0x7d], cl ; jmp 0x491387
0x0000000000495aeb : add byte ptr [rcx - 0x7d], cl ; jmp 0x495b07
0x00000000004960eb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496107
0x00000000004963eb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496407
0x00000000004966eb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496707
0x00000000004969eb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496a07
0x0000000000496ceb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496d07
0x00000000004437a7 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445517 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046c13f : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x00000000004220ef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041f3a0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000420cbf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041e199 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x000000000041d303 : add byte ptr [rcx - 0x80], al ; stc ; add dword ptr [rdi + rcx + 0x44], eax ; retf -0x76b8
0x000000000041836f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041a062 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000047c521 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047c04a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x0000000000425712 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000425738 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000442702 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000047407e : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x00000000004438fc : add byte ptr [rcx], bh ; ret
0x0000000000400ccc : add byte ptr [rcx], bh ; ret 0x860f
0x00000000004678a9 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x000000000049c0a0 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045af4c : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041379a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000043e17b : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x000000000047ac47 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec7c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046a88f : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46a88a ; ret
0x000000000046a50a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46a541 ; ret
0x00000000004882d7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000041330f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413328 ; ret
0x0000000000479f38 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004878e2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000044734e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446547 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004469ce : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044391b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046b357 : add byte ptr [rcx], dh ; sar byte ptr [rdx + 1], 0xeb ; retf
0x000000000041a65f : add byte ptr [rdi + 0x4a1a48], bh ; call 0x417158
0x000000000041a65e : add byte ptr [rdi + 0x4a1a48], dil ; call 0x417159
0x000000000041a67e : add byte ptr [rdi + 0x4a1a77], bh ; call 0x417158
0x000000000041a67d : add byte ptr [rdi + 0x4a1a77], dil ; call 0x417159
0x00000000004419a2 : add byte ptr [rdi + 0x4a433d], bh ; mov eax, ebx ; syscall
0x00000000004419d1 : add byte ptr [rdi + 0x4a4348], bh ; mov eax, ebx ; syscall
0x000000000044eb14 : add byte ptr [rdi + 0x4a6280], bh ; mov eax, ecx ; syscall
0x0000000000455592 : add byte ptr [rdi + 0x4b22e8], bh ; call 0x4017f8
0x00000000004554f5 : add byte ptr [rdi + 0x4b2318], bh ; call 0x4017f8
0x0000000000432285 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000444ed0 : add byte ptr [rdi + 0x6cc050], bh ; call rax
0x0000000000444ecf : add byte ptr [rdi + 0x6cc050], r15b ; call rax
0x0000000000402c97 : add byte ptr [rdi + 0x6cc0a0], bh ; call rbx
0x000000000047a271 : add byte ptr [rdi + 0x6cc340], bh ; call rax
0x000000000047a39c : add byte ptr [rdi + 0x6cc344], bh ; call rdx
0x000000000049b719 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049b741 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c225b : add byte ptr [rdi + rax*2 + 0x18800000], dl ; clc ; call qword ptr [rax]
0x00000000004c4a23 : add byte ptr [rdi + rbp*2], bl ; add byte ptr [rax + 5], bh ; cli ; jmp rdx
0x000000000045aea4 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000459e90 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c5a33 : add byte ptr [rdi + rdi*2], ch ; add byte ptr [rax], ch ; mov edi, edx ; call rsi
0x000000000049ba17 : add byte ptr [rdi + rdx*8 + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000442ac7 : add byte ptr [rdi - 0x76b6ff94], cl ; retf
0x0000000000442af4 : add byte ptr [rdi - 0x76b6ff94], cl ; retf 0x34c
0x0000000000442b81 : add byte ptr [rdi - 0x76b7ff94], cl ; retf 0x348
0x00000000004bd3d4 : add byte ptr [rdi - 3], bh ; jmp rax
0x00000000004a3438 : add byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x0000000000433c1a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043d987 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000434c7f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000434cef : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004482ee : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462267 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000044775a : add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf -0x7bc0
0x0000000000421f5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000465fe0 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000411d0f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042db5f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004257bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042c3bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042565f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042564f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042563f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000466987 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044cd28 : add byte ptr [rdi], cl ; ret 0x4389
0x0000000000403313 : add byte ptr [rdi], cl ; ret 0x8d49
0x0000000000448b9a : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041fd54 : add byte ptr [rdi], cl ; test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x00000000004602e9 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451469 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047d318 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044967c : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x76fffff9], ebp ; retf -0x74b7
0x000000000040edf9 : add byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041f66a : add byte ptr [rdi], cl ; test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045d6eb : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041b85b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x0000000000467439 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000442706 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x00000000004673ad : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046b31a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000475735 : add byte ptr [rdi], cl ; xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000047a26e : add byte ptr [rdx + 0x40bf0047], ah ; ret
0x0000000000425c7e : add byte ptr [rdx + 0x42f180], bh ; cmove rax, rdx ; ret
0x000000000043a3ef : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x0000000000438c3f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000049b927 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000044413f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000004c3583 : add byte ptr [rdx + rbx*2 - 0x47680000], bh ; clc ; jmp qword ptr [rsi]
0x00000000004c350b : add byte ptr [rdx + rbx*2], al ; add al, dh ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c3523 : add byte ptr [rdx + rbx*2], bl ; add al, bh ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c34f3 : add byte ptr [rdx + rbx*2], ch ; add byte ptr [rax], al ; call 0x124c2dbc
0x00000000004c34db : add byte ptr [rdx + rbx*2], dl ; add byte ptr [rax], al ; loopne 0x4c34a1 ; clc ; call qword ptr [rdi]
0x00000000004c7553 : add byte ptr [rdx + rbx*4 + 0xe80000], cl ; cld ; jmp qword ptr [rax]
0x00000000004ad4d7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004c64f3 : add byte ptr [rdx + rcx*4], ch ; add byte ptr [rax], al ; call 0xffffffffe74c600f
0x00000000004c1533 : add byte ptr [rdx + rdi], ch ; add byte ptr [rax], bl ; ret
0x00000000004bed4b : add byte ptr [rdx + rdx + 0x2d700000], al ; cmc ; jmp qword ptr [rsi]
0x00000000004c2d43 : add byte ptr [rdx + rdx*2], bh ; add al, bl ; ja 0x4c2d4b ; call qword ptr [rcx]
0x00000000004c6d73 : add byte ptr [rdx + rdx*4 - 0x67b80000], ch ; jmp qword ptr [rsi]
0x00000000004690f0 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469105
0x0000000000488665 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044ed8d : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000400462 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x00000000004a2ebc : add byte ptr [rdx], bl ; stc ; call qword ptr [rax + 0x20fff919]
0x00000000004bfd33 : add byte ptr [rdx], ch ; add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rsi]
0x000000000045cca9 : add byte ptr [rip + 0x1f0f004b], ch ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000441eb7 : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000042de54 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457583 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000425554 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440375 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000440562 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x000000000044042e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000004403a6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000004407e0 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000440553 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000044041f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440397 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049de27 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c610b : add byte ptr [rsi + rax*4], al ; add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x00000000004c48eb : add byte ptr [rsi + rbp*2], ah ; add byte ptr [rax], al ; xor byte ptr [rax], al ; cli ; call rsi
0x00000000004c392b : add byte ptr [rsi + rbx*2], ah ; add bh, dl ; retf
0x00000000004c87e0 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c112b : add byte ptr [rsi + rsi], ah ; add byte ptr [rax], al ; jne 0x4c1131 ; call qword ptr [rax]
0x0000000000466a91 : add byte ptr [rsi - 0x42], bl ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x000000000046a39d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x000000000043f4dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1c ; syscall
0x000000000046a2ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x66 ; syscall
0x000000000043f4bd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa ; syscall
0x00000000004424ad : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004a3414 : add byte ptr [rsi - 7], dh ; jmp qword ptr [rax]
0x00000000004a3094 : add byte ptr [rsi], bl ; stc ; call qword ptr [rax + 0x20fff91d]
0x00000000004bc4cf : add byte ptr [rsi], dh ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004c0753 : add byte ptr [rsp + rbp - 0x30180000], cl ; cmc ; call rdx
0x00000000004bf713 : add byte ptr [rsp + rbx], cl ; add al, ch ; pop rsp ; cmc ; call qword ptr [rcx]
0x00000000004c677b : add byte ptr [rsp + rcx*4 - 0x66a00000], dh ; std ; call rcx
0x00000000004c4f6b : add byte ptr [rsp + rsi*2 + 0x21c00000], ah ; cli ; jmp rdi
0x00000000004c0ee3 : add byte ptr [rsp + rsi], bl ; add byte ptr [rax], al ; cwde ; idiv bh ; ret
0x00000000004c7ef3 : add byte ptr [rsp], ch ; add byte ptr [rax], al ; mov byte ptr [rcx], bl ; std ; jmp rsp
0x000000000044e7b1 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000045bfd6 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004695c0 : add byte ptr es:[rax + 0x39], cl ; retf
0x000000000045bcc4 : add byte ptr es:[rax + 0x63], cl ; retf -0x76b8
0x0000000000468ca7 : add byte ptr es:[rax + 0xf], cl ; retf -0x76b8
0x00000000004693eb : add byte ptr es:[rax + 1], cl ; retf
0x0000000000468a77 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf0913cf
0x0000000000467663 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000467438 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004673ac : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00000000004690ef : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469106
0x0000000000482fb5 : add byte ptr fs:[rax], al ; add al, ch ; ret 0xf9a0
0x0000000000425308 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000441cb7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004132e0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c4045 : add byte ptr gs:[rax], al ; sbb ah, ah ; stc ; jmp rax
0x0000000000411a43 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c112d : add byte ptr ss:[rax], al ; add byte ptr [rbp - 0xa], dh ; call qword ptr [rax]
0x00000000004bc4d0 : add byte ptr ss:[rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004ad8e3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000414010 : add ch, al ; pop rdx ; retf
0x0000000000457e9f : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bab3c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bab3d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x0000000000466b3b : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004583c0 : add ch, byte ptr [rcx] ; retf -0x2e77
0x000000000046443a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045cb00 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000471c38 : add ch, cl ; ret 0xfffd
0x00000000004a2cd4 : add cl, ah ; clc ; jmp rax
0x00000000004b2dcf : add cl, ah ; rol byte ptr [rbp], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45c9
0x00000000004a2cb4 : add cl, al ; clc ; call qword ptr [rax + 0x20fff8c1]
0x00000000004a333d : add cl, bh ; call qword ptr [rax + 0x10fff901]
0x00000000004a337d : add cl, bh ; call qword ptr [rax]
0x0000000000459f69 : add cl, bl ; in eax, -0x21 ; loopne 0x459efe ; ret 0xe680
0x00000000004b9f0a : add cl, bl ; retf -0x156f
0x0000000000419fc4 : add cl, bpl ; retf -2
0x0000000000438c67 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045d3fe : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000488d04 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000488d2d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000044ae6c : add cl, byte ptr [rax + 0x39] ; int 0xf
0x0000000000449123 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046f02b : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004319aa : add cl, byte ptr [rax + 0x39] ; retf -0x7df1
0x000000000045bc0d : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000041ccfc : add cl, byte ptr [rax + 0xf] ; retf -0x7cb8
0x0000000000410529 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004835c5 : add cl, byte ptr [rax + 1] ; ret
0x000000000044c793 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000438c68 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000438bd5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047b671 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x00000000004163e2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041a862 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000047ab20 : add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0f330
0x000000000046a959 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000047907c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x0000000000422da0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000447d34 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000422e03 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000463a61 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bf2e8 : add cl, byte ptr [rbp + 0xa] ; ret
0x00000000004896f3 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000434ac2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000403dab : add cl, byte ptr [rcx + 0x75] ; retf
0x000000000047ccb4 : add cl, byte ptr [rcx - 0x73] ; jl 0x47cc86 ; adc byte ptr [rax - 0x77], cl ; retf -0x74b8
0x000000000043eb7f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043ead7 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000004044b8 : add cl, byte ptr [rdi] ; retf -0x74b8
0x000000000041aca8 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000462445 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000046da79 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043d75d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c72af : add cl, byte ptr [rdx] ; ret
0x0000000000475d4d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x000000000044351f : add cl, ch ; ret
0x0000000000408698 : add cl, ch ; ret 0xffe2
0x0000000000459b19 : add cl, ch ; ret 0xffe8
0x0000000000471b64 : add cl, ch ; ret 0xfffd
0x0000000000407c04 : add cl, ch ; retf
0x000000000048b07a : add cl, ch ; retf -0xe
0x0000000000419fc5 : add cl, ch ; retf -2
0x000000000043e58f : add cl, ch ; retf -4
0x0000000000452fa0 : add cl, ch ; retf -6
0x0000000000442147 : add cl, cl ; ret
0x00000000004b9dc3 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x00000000004b9dc2 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x00000000004bf1f0 : add dh, ah ; ret
0x00000000004bc3ef : add dh, al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b158b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000004b09d7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004bc4f7 : add dh, bl ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000434c73 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f38b : add dh, bl ; ret
0x0000000000483a58 : add dh, byte ptr [rax] ; jmp 0x4804f1
0x00000000004bf0ee : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049de32 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x0000000000470050 : add dh, byte ptr [rdi + rbx - 0x7d] ; retf 0x4108
0x000000000041775a : add dh, dh ; ret
0x0000000000446755 : add dh, dh ; ret 0x4801
0x0000000000425e18 : add dh, dh ; ret 0x7404
0x0000000000400f0a : add dh, dh ; ret 0x7420
0x000000000043b317 : add dh, dh ; ret 0x7501
0x000000000043b324 : add dh, dh ; ret 0x7502
0x000000000043b331 : add dh, dh ; ret 0x7504
0x000000000043b2e9 : add dh, dh ; ret 0x7510
0x000000000043b2f6 : add dh, dh ; ret 0x7520
0x000000000043b303 : add dh, dh ; ret 0x7540
0x000000000041aca5 : add dh, dh ; ret 0xf02
0x000000000047003a : add dh, dh ; ret 0xf08
0x00000000004bd4c8 : add dl, 0xfd ; jmp rax
0x00000000004a35e7 : add dl, al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d9
0x00000000004c48f1 : add dl, bh ; call rsi
0x000000000046c68b : add dl, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004c11d4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449466 : add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000461b7e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00000000004622d2 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000004700ac : add dword ptr [r9 - 0x1efa09fe], ecx ; retf 0x25
0x0000000000448ad0 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043a3f1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000047e071 : add dword ptr [rax + 0x29], ecx ; retf -0x72b8
0x000000000048a3d2 : add dword ptr [rax + 0x29], ecx ; retf -0x7cb8
0x000000000047dd11 : add dword ptr [rax + 0x29], ecx ; retf 0x148
0x0000000000415061 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000473ec9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000473edb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479210 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000458f3d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000041bf9d : add dword ptr [rax + 0x39], ecx ; retf
0x000000000047ba34 : add dword ptr [rax + 0x39], ecx ; retf 0xf40
0x000000000049c563 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000475126 : add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000047b5bd : add dword ptr [rax + 1], ecx ; ret
0x000000000049ace2 : add dword ptr [rax + 1], ecx ; retf
0x000000000040dbe6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049de22 : add dword ptr [rax + 3], edi ; je 0x49de39 ; ret
0x000000000041c15a : add dword ptr [rax + 9], ecx ; retf -0x76b8
0x00000000004c45be : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000004a2bd4 : add dword ptr [rax + rdi*8 - 0x7432e01], edi ; call rcx
0x00000000004b99bb : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4b9a27 ; retf
0x00000000004579e6 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x00000000004028e3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000438c41 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000473d6d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000438bd2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000414e63 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000041863e : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000414ffa : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000464bc1 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000004713a7 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000412d4f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000047ab24 : add dword ptr [rax - 0x77], ecx ; retf
0x0000000000474d42 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x77], 5 ; ret
0x0000000000473ccd : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424dc2 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000472f84 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000461b7f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x000000000044fd29 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041a866 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000443d1c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452203 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x000000000044642e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x00000000004895e4 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047cde3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x00000000004622d3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x0000000000480a2a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048881c : add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c5cad : add dword ptr [rax], 0xfaadd000 ; call rdx
0x000000000040f9f6 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044b976 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044aaee : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000473094 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044699e : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000047e407 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000420669 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041aa1b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000411406 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004178d0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000044e885 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049b5b5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004640b8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041db36 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041dc60 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405ab7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c007 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040edfd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000422b8d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000448f24 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000424b9e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042b60f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ae1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040da16 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040d9c6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d87a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9ee : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da3e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d953 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d8de : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040dade : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040dab2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d920 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d8ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000044bcd2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000463640 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004441a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b09da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004afb8a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004af9b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af9aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0142 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af9ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004af9e2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0182 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000049b71b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000000004016d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440377 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000469767 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x469734
0x000000000046b35b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46b331
0x00000000004865d5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4865aa
0x000000000049bfed : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000441dfe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043e243 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000044e411 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049bc68 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000479cbe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000440564 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440430 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000004403a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004407ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000461f94 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004618a9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045bc4b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415463 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dfdc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004438c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004003d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000041acac : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000004246e8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049b4fb : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004439b3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040522b : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x0000000000467288 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410342 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462272 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000044e828 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x000000000044559c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041f39e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000448b9e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004678a7 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x0000000000413798 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446545 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447758 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf -0x7bc0
0x000000000043b315 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043b322 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043b32f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043b2e7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043b2f4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043b301 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004208d8 : add dword ptr [rax], eax ; ret
0x00000000004251c1 : add dword ptr [rax], edi ; ret
0x0000000000424dc6 : add dword ptr [rax], edi ; retf 0xf41
0x000000000043d797 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00000000004b9f04 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000047dac2 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x00000000004896d3 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000041e19d : add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x00000000004855f7 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000441c29 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004ba2ea : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000434b32 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004b8eca : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test dl, bh ; retf -0x2081
0x000000000040d61d : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c8a72 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c8a6f : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000045bcbf : add dword ptr [rcx + 0x26ede60d], ecx ; add byte ptr [rax + 0x63], cl ; retf -0x76b8
0x0000000000469879 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x000000000044656a : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x00000000004469f8 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x00000000004700ad : add dword ptr [rcx - 0x1efa09fe], ecx ; retf 0x25
0x000000000041b2da : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000438c71 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000461690 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000044554d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000040431d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000004580bb : add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x0000000000424bb7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043ede1 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000476d3b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004748da : add dword ptr [rcx], edi ; retf
0x00000000004b9e15 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x000000000041d307 : add dword ptr [rdi + rcx + 0x44], eax ; retf -0x76b8
0x00000000004c64cd : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c640d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c646d : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c641e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c647e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c64de : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c20d5 : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c72ab : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c71fa : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043d7f8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043d7e3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045b431 : add dword ptr [rdi], ecx ; test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044699a : add dword ptr [rdi], ecx ; test eax, edi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x00000000004740e7 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000474954 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043d6bd : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000499680 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x0000000000403da5 : add dword ptr [rdx + 0x75], edx ; rol dword ptr [rax + 0x7549027a], 1 ; retf
0x000000000043d282 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000434e7d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000487b5b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bf1ee : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046d087 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004b9aef : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000046d377 : add dword ptr [rdx - 0x77], eax ; je 0x46d307 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046d376 : add dword ptr [rdx - 0x77], eax ; je 0x46d308 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x00000000004c045d : add dword ptr [rdx], 0x43 ; ret
0x00000000004c61dd : add dword ptr [rdx], 0x48 ; ret
0x00000000004c881c : add dword ptr [rdx], 0x54 ; ret
0x00000000004c1f1b : add dword ptr [rdx], 0x55 ; ret
0x00000000004c61d4 : add dword ptr [rdx], 0x5b ; ret
0x00000000004c87c4 : add dword ptr [rdx], 0x69 ; ret
0x0000000000417206 : add dword ptr [rdx], 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c470c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c44e4 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004bfa5c : add dword ptr [rdx], 2 ; ret
0x00000000004bf2fa : add dword ptr [rdx], ecx ; ret
0x00000000004bec1b : add dword ptr [rip + 0x2a00e52], 2 ; retf
0x0000000000417077 : add dword ptr [rip + 0x2b459a], 1 ; ret
0x00000000004167a8 : add dword ptr [rip + 0x2b4df5], 1 ; ret
0x00000000004be7be : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4be7d4 ; ret
0x00000000004be7cc : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000438c52 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004bf5fe : add dword ptr [rsi], 0xa ; ret
0x00000000004bf670 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c11d5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400d7d : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c1b9e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000496f97 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c72c2 : add dword ptr es:[rdx], ecx ; ret
0x0000000000426278 : add eax, 0x12ad3 ; ret
0x0000000000422d48 : add eax, 0x14853 ; ret
0x00000000004256ea : add eax, 0x15e71 ; ret
0x0000000000425cc4 : add eax, 0x17647 ; ret
0x00000000004208d5 : add eax, 0x1a966 ; ret
0x00000000004256ce : add eax, 0x1d ; ret
0x000000000044ed8c : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c0d1c : add eax, 0x2300e4a ; ret
0x0000000000487d61 : add eax, 0x244e9a ; ret
0x0000000000475f70 : add eax, 0x256c22 ; jne 0x475fb9 ; ret
0x000000000047377c : add eax, 0x258f67 ; mov qword ptr [rsi], rax ; ret
0x000000000047371b : add eax, 0x258fd0 ; ret
0x000000000047363a : add eax, 0x2590b1 ; add rsp, 8 ; ret
0x000000000044c1a2 : add eax, 0x27fed1 ; ret
0x0000000000444e32 : add eax, 0x287e31 ; ret
0x00000000004438e1 : add eax, 0x28936a ; test eax, eax ; je 0x4438f9 ; ret
0x000000000041d069 : add eax, 0x2ae596 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416712 : add eax, 0x2b29a9 ; ret
0x0000000000417078 : add eax, 0x2b459a ; add ebx, esi ; ret
0x0000000000416816 : add eax, 0x2b4d89 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004015bb : add eax, 0x2c7ad0 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2c99a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2ca1f5 ; add ebx, esi ; ret
0x00000000004c11d3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000488d61 : add eax, 0x394d0000 ; retf
0x000000000043a488 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000438cb8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043a986 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043a509 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000438cf9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047a0c6 : add eax, 0x5b000000 ; ret
0x00000000004b157d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418a35 : add eax, 0x5c415d5b ; ret
0x00000000004b158d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000047a23b : add eax, 0x60002521 ; ret
0x0000000000426394 : add eax, 0x67 ; ret
0x0000000000489753 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043d6b7 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000042277d : add eax, 0x83480000 ; ret 0x4910
0x0000000000429c01 : add eax, 0x83480000 ; ret 0xe910
0x00000000004226d1 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000455d7d : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043a48b : add eax, 0x8428d48 ; ret
0x00000000004256e2 : add eax, 0x8449 ; ret
0x0000000000484e3a : add eax, 0x89000001 ; ret 0x348
0x0000000000424268 : add eax, 0x894d0000 ; retf
0x000000000044911d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000044947e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x000000000044949b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000445ed1 : add eax, 0xbe000000 ; retf
0x000000000042eb8a : add eax, 0xc0310000 ; ret
0x000000000043a50d : add eax, 0xc428d48 ; ret
0x000000000043afed : add eax, 0xc478d48 ; ret
0x0000000000440812 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000440837 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000440980 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000440a19 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000434b23 : add eax, 0xf7f0ff3 ; ret
0x0000000000472f7f : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004780aa : add eax, 0xfffffff8 ; ret
0x000000000043d795 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465e31 : add eax, 1 ; ret
0x0000000000444185 : add eax, 2 ; push rax ; call rbx
0x0000000000465e28 : add eax, 2 ; ret
0x0000000000420b28 : add eax, 3 ; ret
0x00000000004263e7 : add eax, 4 ; ret
0x000000000044ece9 : add eax, dword ptr [0] ; ret
0x0000000000470448 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418bd3 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000047099e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000418baf : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x000000000044d3a8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041c454 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046f383 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042291d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429da1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422941 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000444dd6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049de24 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49de37 ; ret
0x000000000043f57c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000469cc3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000440d5d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440db4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440e34 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440f34 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004122a5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000420b29 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040048a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000476043 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x4760b4 ; pop rbx ; ret
0x00000000004bddcd : add eax, dword ptr [rax] ; add byte ptr [rax], dh ; hlt ; call qword ptr [rdx]
0x000000000049531a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d7f3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047dbcc : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x00000000004483eb : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf -0x1f7d
0x0000000000441e15 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000496ce9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x496d09
0x000000000041a0a2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000441eb5 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000470038 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000444ac1 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000444a1b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x00000000004443ca : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043da10 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043da30 : add eax, dword ptr [rax] ; ret
0x00000000004c5673 : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bf2e2 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047e1f1 : add eax, dword ptr [rbx] ; call rax
0x00000000004c6421 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004111b4 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047c47d : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c737b : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bed0a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046a67a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471255 : add eax, dword ptr [rdi] ; call rax
0x0000000000477e54 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000004755a9 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c6481 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c64e1 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bea5a : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c3c92 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bf1ea : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c1b9a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000470dbb : add eax, dword ptr [rsp] ; call rax
0x0000000000496d8f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043dad8 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000459b98 : add eax, eax ; ret
0x0000000000425306 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000405626 : add eax, ebp ; push rsp ; fadd dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049cbda : add eax, ebx ; cmp rdi, r8 ; jae 0x49cbaa ; mov rdx, rcx ; jmp 0x49cbc2
0x000000000049ad27 : add eax, ecx ; jmp rax
0x0000000000416483 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000042540a : add eax, ecx ; ret
0x0000000000425407 : add eax, edi ; add rax, rcx ; ret
0x00000000004a2941 : add eax, edi ; call qword ptr [rax]
0x00000000004c1fe9 : add eax, edi ; call rsp
0x0000000000425644 : add eax, edi ; ret
0x0000000000423016 : add eax, edx ; sub rax, rdi ; ret
0x000000000049b162 : add eax, esi ; jmp rax
0x00000000004669a7 : add eax, esi ; ret
0x000000000049a89d : add eax, esp ; jmp rax
0x0000000000459b97 : add eax, r8d ; ret
0x00000000004570b8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047aebd : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c01a3 : add ebp, dword ptr [rdi + 0x380e0a01] ; ret
0x00000000004c89ab : add ebp, dword ptr [rdx + 0x380e0a01] ; ret
0x000000000047b46d : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004b8a57 : add ebp, ebp ; retf
0x0000000000470db7 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x0000000000487d9a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c6472 : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000470a53 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004bf2f8 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478141 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000484bba : add ebx, ebp ; ret 0x8d48
0x0000000000434ce3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x000000000047e8fb : add ecx, 0x17bf004b ; ret 0x4b
0x0000000000425da4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x425d99 ; ret
0x00000000004865d1 : add ecx, 8 ; mov esi, 1 ; jmp 0x4865ae
0x0000000000438ca5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000041829a : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044913f : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000463a67 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x00000000004151b5 : add ecx, dword ptr [rax + 0x39] ; retf -0x76b8
0x0000000000431fba : add ecx, dword ptr [rax + 0x39] ; retf 0x1073
0x000000000046d2b9 : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x0000000000438ca9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047d438 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041ca5e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418af8 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000433ad8 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x0000000000446965 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040e05d : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e137 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000411937 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00000000004bc3f9 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000489713 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000434a52 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c6412 : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043a924 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047da8f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000438ca6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046d2eb : add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x00000000004c158a : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c4af0 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046aebd : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000004996ea : add ecx, eax ; jmp rcx
0x000000000045174c : add ecx, ebp ; ret
0x000000000046aa6b : add ecx, ebp ; retf -2
0x000000000042f1ae : add ecx, ebx ; jmp r9
0x000000000042db52 : add ecx, ebx ; jmp rcx
0x00000000004a3341 : add ecx, edi ; call qword ptr [rax]
0x000000000049991e : add ecx, esi ; jmp rcx
0x0000000000470237 : add edi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049e4af : add edi, dword ptr [rbp + 0x10] ; call r12
0x0000000000463d77 : add edi, dword ptr [rcx] ; retf 0xf48
0x00000000004a3345 : add edi, ecx ; call qword ptr [rax + 0x10fff904]
0x00000000004a3385 : add edi, ecx ; call qword ptr [rax]
0x00000000004101c6 : add edi, edi ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000042f1ab : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004bd9f9 : add edi, esi ; call qword ptr [rax + 0x10fffe03]
0x00000000004bd9fd : add edi, esi ; call qword ptr [rax]
0x00000000004bdf71 : add edi, esi ; call rdi
0x00000000004bda19 : add edi, esi ; jmp qword ptr [rax + 0x10fffe03]
0x0000000000471d9c : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000475a65 : add edx, eax ; jmp 0x475a7a
0x0000000000478cd2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452113 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x00000000004439d0 : add edx, ebx ; loopne 0x443a34 ; pop rbp ; ret
0x00000000004bebca : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c1c92 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044cb97 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c8a73 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000434c03 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043e8cc : add esi, ebx ; ret
0x000000000043dac0 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042f1a8 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000462998 : add esi, esi ; ret 0x7420
0x0000000000400a70 : add esp, 0x10 ; pop rbp ; ret
0x00000000004872f7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040fc21 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dc19 : add esp, 0x10 ; pop rbx ; ret
0x000000000041fa77 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dc01 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000472cc2 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x0000000000472ca4 : add esp, 0x140 ; pop rbx ; ret
0x000000000047622d : add esp, 0x18 ; jmp r11
0x000000000043f3cd : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416c01 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410aa7 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043e8a0 : add esp, 0x18 ; ret
0x00000000004439b0 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000451993 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00000000004876cc : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000444ef1 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414f0f : add esp, 0x20 ; pop rbx ; ret
0x000000000047a759 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040dbb8 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041476e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487621 : add esp, 0x28 ; ret
0x000000000047659c : add esp, 0x30 ; jmp r11
0x000000000046a4c2 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000477d39 : add esp, 0x30 ; pop rbx ; ret
0x00000000004766ae : add esp, 0x30 ; ret
0x000000000043e260 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000477dc6 : add esp, 0x38 ; ret
0x0000000000400a37 : add esp, 0x40 ; pop rbp ; ret
0x0000000000477c4c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046a432 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000477e58 : add esp, 0x48 ; ret
0x0000000000477bda : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000487774 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000465fec : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043eb50 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000477f42 : add esp, 0x68 ; ret
0x0000000000441c2d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f951 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046a14b : add esp, 0x80 ; pop rbx ; ret
0x0000000000414327 : add esp, 0x80 ; ret
0x000000000041f536 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046a249 : add esp, 0x90 ; pop rbx ; ret
0x000000000046a267 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x0000000000412e6d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004011bf : add esp, 0x98 ; ret
0x000000000044f049 : add esp, 0xd0 ; ret
0x000000000040f437 : add esp, 0xd8 ; ret
0x0000000000477b15 : add esp, 8 ; jmp rax
0x0000000000410e53 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041e3d8 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043f32a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004179f4 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ebe0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041ea13 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487657 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041d1de : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000405a01 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401893 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412ab8 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000422e69 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473591 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004ba14b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x00000000004c6042 : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c72c1 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000044642d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x0000000000422d4a : add qword ptr [rax], rax ; ret
0x00000000004c72aa : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000047eb5e : add r11b, bpl ; retf 0x1f0f
0x0000000000425c8c : add r11b, sil ; ret
0x0000000000434ce2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434c72 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434c02 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045ef1d : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004953c0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000455596 : add r8b, bpl ; push rbx ; ret 0xfffa
0x0000000000474666 : add r8b, bpl ; ret
0x000000000046071e : add r8b, bpl ; retf
0x000000000042f1ad : add r9, r11 ; jmp r9
0x00000000004b9f09 : add r9b, bl ; retf -0x156f
0x000000000044ae6b : add r9b, byte ptr [r8 + 0x39] ; int 0xf
0x0000000000449483 : add r9b, byte ptr [r8 + 0x39] ; ret
0x00000000004494a0 : add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000496b72 : add rax, -0x7cb80000 ; ret 0xe910
0x00000000004780a9 : add rax, -8 ; ret
0x000000000043d794 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465e30 : add rax, 1 ; ret
0x0000000000465e27 : add rax, 2 ; ret
0x0000000000465e40 : add rax, 3 ; ret
0x000000000044ece8 : add rax, qword ptr [0] ; ret
0x0000000000470dba : add rax, qword ptr [r12] ; call rax
0x0000000000471254 : add rax, qword ptr [r15] ; call rax
0x00000000004483ea : add rax, qword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf -0x1f7d
0x000000000047e1f0 : add rax, qword ptr [rbx] ; call rax
0x0000000000477e53 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000004755a8 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044ece7 : add rax, qword ptr fs:[0] ; ret
0x000000000049a89c : add rax, r12 ; jmp rax
0x000000000049b161 : add rax, r14 ; jmp rax
0x000000000049ad26 : add rax, r9 ; jmp rax
0x0000000000425409 : add rax, rcx ; ret
0x0000000000425406 : add rax, rdi ; add rax, rcx ; ret
0x0000000000425643 : add rax, rdi ; ret
0x0000000000423015 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047b46c : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x0000000000470db6 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042db51 : add rcx, r11 ; jmp rcx
0x000000000049991d : add rcx, r14 ; jmp rcx
0x00000000004996e9 : add rcx, rax ; jmp rcx
0x0000000000470236 : add rdi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049e4ae : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042f1aa : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000471d9b : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452112 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000478cd1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000475a64 : add rdx, rax ; jmp 0x475a7b
0x0000000000400a6f : add rsp, 0x10 ; pop rbp ; ret
0x00000000004872f6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040fc20 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dc18 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043dc00 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000472ca3 : add rsp, 0x140 ; pop rbx ; ret
0x000000000047622c : add rsp, 0x18 ; jmp r11
0x000000000043f3cc : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410aa6 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043e89f : add rsp, 0x18 ; ret
0x00000000004439af : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000451992 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00000000004876cb : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000444ef0 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414f0e : add rsp, 0x20 ; pop rbx ; ret
0x000000000047a758 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041476d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487620 : add rsp, 0x28 ; ret
0x000000000047659b : add rsp, 0x30 ; jmp r11
0x000000000046a4c1 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000477d38 : add rsp, 0x30 ; pop rbx ; ret
0x00000000004766ad : add rsp, 0x30 ; ret
0x000000000043e25f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000477dc5 : add rsp, 0x38 ; ret
0x0000000000400a36 : add rsp, 0x40 ; pop rbp ; ret
0x0000000000477c4b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046a431 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000477e57 : add rsp, 0x48 ; ret
0x0000000000477bd9 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000487773 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x0000000000465feb : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043eb4f : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000477f41 : add rsp, 0x68 ; ret
0x0000000000441c2c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046a14a : add rsp, 0x80 ; pop rbx ; ret
0x0000000000414326 : add rsp, 0x80 ; ret
0x000000000046a248 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000412e6c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004011be : add rsp, 0x98 ; ret
0x000000000044f048 : add rsp, 0xd0 ; ret
0x000000000040f436 : add rsp, 0xd8 ; ret
0x0000000000477b14 : add rsp, 8 ; jmp rax
0x0000000000410e52 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041e3d7 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043f329 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004179f3 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ebdf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041ea12 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487656 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041d1dd : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401892 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412ab7 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000422e68 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042b87e : add sil, sil ; ret 0x7404
0x0000000000487b5a : add word ptr [rdx + rax*2], 1 ; ret
0x000000000049a1e3 : and ah, byte ptr [rbx] ; add byte ptr [rax], cl ; ret
0x00000000004912e5 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000487b58 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000487d64 : and al, 0 ; ret
0x000000000048c0bf : and al, 0x10 ; add byte ptr [rbp - 0x36], dh ; jmp 0x48c09a
0x000000000043eb7d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049baa8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004467d3 : and al, 0x10 ; call r12
0x000000000041ae5d : and al, 0x10 ; call rax
0x0000000000464649 : and al, 0x10 ; call rbx
0x0000000000400c65 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x000000000043fb11 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000446ac7 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044742a : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000048761b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049c145 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x000000000044fc46 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000418a66 : and al, 0x14 ; pop r12 ; ret
0x000000000041d1db : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044b01c : and al, 0x18 ; call r14
0x0000000000400cc2 : and al, 0x18 ; call rax
0x0000000000464644 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000041ae58 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x00000000004440f8 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000447810 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047a820 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x00000000004467ce : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000464722 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418a32 : and al, 0x1c ; je 0x418a43 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418a31 : and al, 0x1c ; je 0x418a44 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446acc : and al, 0x20 ; call rax
0x00000000004661a7 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000450263 : and al, 0x20 ; mov rdi, r12 ; call r15
0x00000000004b8c84 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000477dc0 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x000000000048920b : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000446f47 : and al, 0x28 ; call r12
0x0000000000447c72 : and al, 0x28 ; call r14
0x00000000004465d4 : and al, 0x28 ; call r15
0x000000000044742f : and al, 0x28 ; call rax
0x0000000000446ffb : and al, 0x28 ; call rbx
0x00000000004664c2 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046624f : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041e053 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048f29f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044a85c : and al, 0x30 ; call r14
0x0000000000472c6f : and al, 0x30 ; call r9
0x0000000000448e7a : and al, 0x30 ; call rbx
0x000000000048773f : and al, 0x30 ; je 0x487753 ; mov edi, 0x6ca140 ; call rax
0x000000000040e0f9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000046608d : and al, 0x30 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004492ba : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000446671 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000446ff6 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000041a45d : and al, 0x30 ; mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000004818af : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048c442 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000477f6e : and al, 0x38 ; add rsp, 0x68 ; ret
0x0000000000472c6a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000448e75 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004114a6 : and al, 0x38 ; mov rsi, r13 ; call 0x41d747
0x0000000000477c49 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000477bd7 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004481fa : and al, 0x40 ; call r15
0x00000000004661ac : and al, 0x40 ; call rbx
0x00000000004485a1 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000047622b : and al, 0x48 ; add esp, 0x18 ; jmp r11
0x000000000043f3cb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043e89e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000047659a : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x00000000004766ac : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000041d663 : and al, 0x48 ; call rax
0x000000000046f0d4 : and al, 0x48 ; lea edi, dword ptr [rax + 0x6ca1e0] ; call rdx
0x000000000044176d : and al, 0x48 ; mov edx, eax ; mov eax, r12d ; syscall
0x0000000000446f42 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004465cf : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004481f5 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004668b2 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049d5e4 : and al, 0x49 ; mov esi, dword ptr [rsi + rbp*8 + 0x10] ; call rbx
0x000000000044a08b : and al, 0x49 ; mov esp, esi ; jmp 0x44a061
0x000000000044b017 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041c19d : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418a61 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004663c0 : and al, 0x60 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041d96b : and al, 0x68 ; call rax
0x000000000041ecab : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004c48ec : and al, 0x6e ; add byte ptr [rax], al ; xor byte ptr [rax], al ; cli ; call rsi
0x00000000004114de : and al, 0x74 ; ret 0x8b4c
0x000000000047230a : and al, 0x75 ; ret
0x000000000047afde : and al, 0x78 ; call r12
0x000000000047b4ad : and al, 0x78 ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x0000000000447c6d : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044a857 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048adff : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047bc84 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000446751 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041b666 : and al, 0x89 ; ret 0xb48b
0x000000000049bb23 : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000043ead5 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000046a579 : and al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043e979 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043e9d9 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043ea39 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000046a3e9 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000049b66b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000477def : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400c69 : and al, 0xc ; call r12
0x0000000000400cbd : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000048835d : and al, 0xd5 ; add bl, dl ; add byte ptr [r8 + 1], cl ; retf -0x74b8
0x000000000047b25a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040c17b : and al, 0xe8 ; call qword ptr [rbx]
0x00000000004088ab : and al, 0xe8 ; call rbx
0x0000000000409a04 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000000000409a1a : and al, 0xe8 ; nop ; ret 0xffff
0x00000000004099bb : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x0000000000409a3c : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409a52 : and al, 0xe8 ; pop rax ; ret 0xffff
0x000000000040995c : and al, 0xe8 ; ret
0x0000000000405b98 : and al, 0xe8 ; ret 0xffa7
0x0000000000409a63 : and al, 0xe8 ; ret 0xffff
0x00000000004091e0 : and al, 0xe8 ; retf -0x36
0x000000000040cfe0 : and al, 0xe8 ; retf -0x74
0x00000000004090d4 : and al, 0xe8 ; salc ; retf
0x0000000000409200 : and al, 0xe8 ; stosb byte ptr [rdi], al ; retf -1
0x0000000000409913 : and al, 0xe8 ; xchg eax, edi ; ret
0x00000000004085d5 : and al, 0xe9 ; retf
0x0000000000477c80 : and al, 0xe9 ; retf 0x76
0x0000000000491088 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049c505 : and al, 0xf ; ret 0x8348
0x000000000042b986 : and al, 0xf8 ; jne 0x42b862 ; ret
0x0000000000491041 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491047 : and al, 0xf8 ; ret
0x0000000000490ffb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000491001 : and al, 0xfc ; ret
0x000000000044edb7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044edbb : and al, 0xfe ; ret
0x0000000000469766 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044f1cc : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x0000000000488e8f : and al, 8 ; add byte ptr [rbp - 0x36], dh ; jmp 0x488e6a
0x000000000043dc16 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047a2d2 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409251 : and al, 8 ; call 0x405cb4
0x0000000000409250 : and al, 8 ; call 0x405cb5
0x000000000043fa28 : and al, 8 ; call rbx
0x0000000000487699 : and al, 8 ; je 0x4876ad ; mov edi, 0x6ca140 ; call rax
0x000000000041a605 : and al, 8 ; jmp 0x419e4e
0x000000000043ebe1 : and al, 8 ; jmp 0x43eb58
0x000000000043efeb : and al, 8 ; mov eax, 0x101 ; syscall
0x000000000043f0a2 : and al, 8 ; mov eax, 3 ; syscall
0x0000000000477980 : and al, 8 ; mov edi, 0x6ca140 ; call rax
0x000000000041af14 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x00000000004091c0 : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405cb8
0x00000000004091bf : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405cb9
0x000000000040e2b6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004417b2 : and al, 8 ; xor eax, eax ; syscall
0x00000000004bfd35 : and al, byte ptr [rax] ; add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rsi]
0x00000000004a00d8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049148e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000410b46 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000004073be : and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000049e383 : and al, byte ptr [rax] ; jne 0x49e36d ; pop rbx ; ret
0x000000000049fff1 : and al, byte ptr [rax] ; jne 0x4a0007 ; jmp 0x4a0021
0x000000000049d754 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x0000000000422e1a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004664a7 : and al, ch ; ret
0x000000000045cafe : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000461dfb : and bl, ch ; retf -0x6f9a
0x000000000040dc5f : and bl, dh ; ret
0x0000000000466bde : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000419a03 : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000414b34 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049dfde : and byte ptr [rax + 0x39], cl ; ret
0x0000000000419a99 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000410317 : and byte ptr [rax + 0x39], cl ; retf -0x428b
0x0000000000451f6e : and byte ptr [rax + 1], cl ; ret
0x0000000000422ee8 : and byte ptr [rax + 9], cl ; retf -0x76b8
0x000000000042300d : and byte ptr [rax + 9], cl ; retf 0xf48
0x0000000000464f2e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048ede0 : and byte ptr [rax + rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000040ea20 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004661a8 : and byte ptr [rax - 0x73], cl ; je 0x4661d7 ; call rbx
0x00000000004765c6 : and byte ptr [rax - 0x75], cl ; jg 0x4765fa ; call r11
0x0000000000476bb6 : and byte ptr [rax - 0x75], cl ; jg 0x476bea ; call r11
0x0000000000476f52 : and byte ptr [rax - 0x75], cl ; jg 0x476f86 ; call r11
0x000000000041b373 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000045ca2c : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000040ed63 : and byte ptr [rax - 0x77], cl ; ret
0x00000000004690f4 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000445524 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x0000000000451a46 : and byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045a30d : and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000044e6c4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44e6d8 ; call rax
0x000000000049c798 : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x00000000004453be : and byte ptr [rax - 0x7d], cl ; ret
0x000000000049bb86 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000419a04 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412332 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004624aa : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x000000000049bb59 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043daa3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004916de : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000469a9c : and byte ptr [rax], ch ; add byte ptr es:[rax + 0x39], cl ; retf
0x00000000004663a2 : and byte ptr [rbp - 0x73], cl ; jl 0x466335 ; add al, 0xe8 ; ret
0x00000000004bd3d0 : and byte ptr [rbp - 3], bh ; inc dword ptr [rax] ; jg 0x4bd3db ; jmp rax
0x00000000004c737e : and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004baa28 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000405c08 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466bdf : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000444ef3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bed0d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bf2e5 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000004c889d : and byte ptr [rbx + 0xaa20204], al ; ret
0x0000000000454ab5 : and byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000045fc5e : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x0000000000454ca0 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x00000000004625e9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000414b35 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c3bc6 : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450264 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000451995 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000491085 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000004454ac : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004bfe20 : and byte ptr [rcx - 0xb], dh ; call qword ptr [rdx]
0x0000000000445499 : and byte ptr [rdi], cl ; test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043b2f0 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000044eb16 : and byte ptr [rdx + 0x4a], 0 ; mov eax, ecx ; syscall
0x000000000041813f : and byte ptr [rip + 0x5cbe004a], bl ; ret
0x000000000042dbea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c3c95 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bd3b0 : and byte ptr [rsi - 3], ch ; inc dword ptr [rax] ; jo 0x4bd3bb ; jmp rax
0x0000000000465e22 : and ch, 0xf ; je 0x465e49 ; add rax, 2 ; ret
0x0000000000475f71 : and ch, byte ptr [rbp] ; jne 0x475fb8 ; ret
0x000000000049d8aa : and ch, dh ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x0000000000465e0d : and cl, 0xf ; je 0x465e35 ; ret
0x000000000041a586 : and cl, bpl ; ret
0x000000000047e133 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000455595 : and cl, byte ptr [rbx] ; call 0x4017f5
0x00000000004257cd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000041a587 : and cl, ch ; ret
0x0000000000425db7 : and dh, dh ; ret 0x7504
0x000000000045cafd : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a2cbc : and dl, al ; clc ; push qword ptr [rax + 0x40fff8c2] ; ret
0x00000000004bfbe5 : and dword ptr [rax], eax ; add byte ptr [rax], bl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rax]
0x000000000049745e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000456f19 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004ba7a2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000415a9c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000048e44c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000004b7859 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004ba7a1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044eceb : and eax, 0 ; ret
0x000000000047c076 : and eax, 0x2d0 ; ret
0x000000000040ea71 : and eax, 0x30 ; call rax
0x000000000040ea29 : and eax, 0x30 ; call rdx
0x0000000000475f73 : and eax, 0x38754000 ; ret
0x000000000043da0d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043da2d : and eax, 0x3fc00 ; ret
0x000000000043d9ec : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004708f0 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000043e9fb : and eax, 0x50 ; add byte ptr [rax], al ; ret
0x000000000047377f : and eax, 0x6894800 ; ret
0x000000000043da60 : and eax, 0x7ff80000 ; ret
0x0000000000474063 : and eax, 0x89485300 ; ret
0x000000000041a766 : and eax, 0x950f4100 ; ret
0x0000000000441e97 : and eax, 0xc ; cmp eax, 4 ; je 0x441ea8 ; ret
0x0000000000441fe8 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000400d7f : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000443ae6 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x000000000047813c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004bfe1d : and eax, dword ptr [rax] ; add byte ptr [rax], ah ; jno 0x4bfe1e ; call qword ptr [rdx]
0x00000000004bfe35 : and eax, dword ptr [rax] ; add byte ptr [rax], ch ; jno 0x4bfe36 ; jmp qword ptr [rax]
0x00000000004972b5 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000491369 : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x491389
0x00000000004173f9 : and ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000415a9d : and ebp, edi ; pop rbx ; ret
0x0000000000441e32 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x441e45 ; ret
0x00000000004b8f54 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x000000000042f165 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042e898 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000419b1b : and ecx, dword ptr [rax + 0x39] ; ret
0x00000000004554f8 : and ecx, dword ptr [rbx] ; call 0x4017f5
0x000000000041f36c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000040ead4 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; xchg eax, esp ; retf 0x2b
0x000000000041684c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000004c4f71 : and edx, edi ; jmp rdi
0x000000000049105e : and esi, 0xe0837fff ; jg 0x491077 ; ret 0x5488
0x00000000004bd97c : and esi, edx ; std ; call qword ptr [rsi]
0x000000000043e02e : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000474062 : and rax, 0x89485300 ; ret
0x000000000042c25a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000425640 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000425650 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000425660 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000425630 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000042557f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c453 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000422eb6 : bsf eax, edx ; ret
0x0000000000423012 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042c570 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000422f02 : bsf rax, rdx ; ret
0x0000000000464ff7 : bsr eax, eax ; add rax, rdi ; ret
0x000000000046527b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000465189 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000465085 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000464ff6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000046527a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000465188 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000465084 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047b367 : call 0x1009eb8e
0x000000000047bcca : call 0x1009f4f1
0x00000000004bf718 : call 0x124bec7c
0x00000000004c34f8 : call 0x124c2db7
0x00000000004c7818 : call 0x134c7428
0x00000000004c7848 : call 0x134c7458
0x00000000004c7878 : call 0x134c7488
0x00000000004c0f68 : call 0x174c05b3
0x0000000000451e25 : call 0x1f54e917
0x000000000044a948 : call 0x2072c98
0x00000000004c7558 : call 0x214c7160
0x000000000042bb94 : call 0x24b746ed
0x0000000000472f4a : call 0x400357
0x000000000046cba9 : call 0x400358
0x0000000000473b1f : call 0x40059d
0x00000000004554fb : call 0x4017f2
0x00000000004099bc : call 0x405cb2
0x000000000044a9ee : call 0x406cde
0x00000000004119c1 : call 0x40dca2
0x000000000041a665 : call 0x417152
0x000000000041b6b2 : call 0x418172
0x00000000004412c9 : call 0x41d582
0x0000000000408694 : call 0x41d586
0x00000000004114ab : call 0x41d742
0x000000000041f880 : call 0x41e4c6
0x000000000046931e : call 0x425df2
0x000000000045c048 : call 0x425df7
0x000000000041edf4 : call 0x42b852
0x0000000000400721 : call 0x43d976
0x00000000004452c1 : call 0x441dc2
0x0000000000405331 : call 0x441df2
0x000000000045d308 : call 0x459dc2
0x0000000000456359 : call 0x462dd2
0x0000000000457db6 : call 0x462e96
0x0000000000459b15 : call 0x465ef6
0x000000000046e0fb : call 0x46ab52
0x000000000047771c : call 0x473336
0x000000000048c4fc : call 0x4787c2
0x000000000047ab57 : call 0x4911aca7
0x00000000004ba19a : call 0x4c15cb55
0x000000000043426a : call 0x4fc25268
0x0000000000434269 : call 0x4fc25269
0x000000000047ccb3 : call 0x7cd515c3
0x0000000000411474 : call 0xffffffff854118ad
0x000000000047aecb : call 0xffffffff8a09d7f2
0x000000000047b032 : call 0xffffffff8a09d959
0x000000000047b21f : call 0xffffffff8a09db46
0x000000000047b84b : call 0xffffffff8a09e172
0x000000000047b9a8 : call 0xffffffff8a09e2cf
0x000000000047bb76 : call 0xffffffff8a09e49d
0x00000000004ba0fa : call 0xffffffffab596bf0
0x00000000004b82c3 : call 0xffffffffaf0e2139
0x000000000047ab4a : call 0xffffffffc270f392
0x000000000041b788 : call 0xffffffffc27aff99
0x0000000000458f3c : call 0xffffffffc27ed746
0x000000000041c068 : call 0xffffffffc2cb0881
0x000000000046895d : call 0xffffffffc37fd26a
0x000000000048551a : call 0xffffffffc381a124
0x000000000046628c : call 0xffffffffc3a2a3f2
0x000000000044f1c5 : call 0xffffffffc3f40116
0x000000000046728c : call 0xffffffffc40dbac5
0x0000000000426357 : call 0xffffffffc412eca8
0x0000000000422e27 : call 0xffffffffc43ab778
0x000000000048b089 : call 0xffffffffc781f896
0x0000000000472b1b : call 0xffffffffca8c3a70
0x0000000000479b04 : call 0xffffffffca942659
0x000000000047f614 : call 0xffffffffca948169
0x00000000004013bd : call 0xffffffffcb45170e
0x0000000000479b11 : call 0xffffffffce9c266b
0x000000000047f621 : call 0xffffffffce9c817b
0x00000000004c0758 : call 0xffffffffd34bfd2f
0x00000000004c5648 : call 0xffffffffe54c50a1
0x00000000004c64f8 : call 0xffffffffe74c600a
0x0000000000452115 : call qword ptr [r10 + rax*8]
0x00000000004a2993 : call qword ptr [rax + 0x10fff809]
0x00000000004a299b : call qword ptr [rax + 0x10fff80c]
0x00000000004a29a3 : call qword ptr [rax + 0x10fff80f]
0x00000000004a29ab : call qword ptr [rax + 0x10fff812]
0x00000000004a29b3 : call qword ptr [rax + 0x10fff815]
0x00000000004a29bb : call qword ptr [rax + 0x10fff818]
0x00000000004a29c3 : call qword ptr [rax + 0x10fff81b]
0x00000000004a3353 : call qword ptr [rax + 0x10fff8f1]
0x00000000004a3317 : call qword ptr [rax + 0x10fff8f2]
0x00000000004a335b : call qword ptr [rax + 0x10fff8f4]
0x00000000004a331f : call qword ptr [rax + 0x10fff8f5]
0x00000000004a3363 : call qword ptr [rax + 0x10fff8f7]
0x00000000004a3327 : call qword ptr [rax + 0x10fff8f8]
0x00000000004a336b : call qword ptr [rax + 0x10fff8fa]
0x00000000004a332f : call qword ptr [rax + 0x10fff8fb]
0x00000000004a3373 : call qword ptr [rax + 0x10fff8fd]
0x00000000004a3337 : call qword ptr [rax + 0x10fff8fe]
0x00000000004a337b : call qword ptr [rax + 0x10fff900]
0x00000000004a333f : call qword ptr [rax + 0x10fff901]
0x00000000004a3383 : call qword ptr [rax + 0x10fff903]
0x00000000004a3347 : call qword ptr [rax + 0x10fff904]
0x00000000004bd9fb : call qword ptr [rax + 0x10fffe03]
0x000000000047732e : call qword ptr [rax + 0x1ba]
0x00000000004a2cb7 : call qword ptr [rax + 0x20fff8c1]
0x00000000004a2ebf : call qword ptr [rax + 0x20fff919]
0x00000000004a3097 : call qword ptr [rax + 0x20fff91d]
0x00000000004a2def : call qword ptr [rax + 0x40fff8dd]
0x000000000047e8ee : call qword ptr [rax + 0x4bc2e0b9]
0x0000000000410387 : call qword ptr [rax + 0x80]
0x00000000004a2e73 : call qword ptr [rax - 0x1f00072d]
0x00000000004a2e1f : call qword ptr [rax - 0x1f000734]
0x00000000004a2a5b : call qword ptr [rax - 0x1f000783]
0x00000000004a2977 : call qword ptr [rax - 0x2f000811]
0x00000000004a2967 : call qword ptr [rax - 0x2f000816]
0x00000000004a2957 : call qword ptr [rax - 0x2f00081b]
0x000000000040f54e : call qword ptr [rax]
0x0000000000400b88 : call qword ptr [rbx + 0x10]
0x0000000000401618 : call qword ptr [rbx*8 + 0x6c8ed8]
0x000000000047dad8 : call qword ptr [rbx]
0x00000000004a2c03 : call qword ptr [rcx + 0x31fff8c3]
0x0000000000499e0e : call qword ptr [rcx]
0x00000000004c1e3b : call qword ptr [rdi]
0x00000000004a2f6b : call qword ptr [rdx + 0x22fff91b]
0x0000000000452116 : call qword ptr [rdx + rax*8]
0x00000000004a2bb3 : call qword ptr [rdx]
0x00000000004bd4e7 : call qword ptr [rip - 0x7f00023a]
0x00000000004a2f07 : call qword ptr [rsi + 0x26fff918]
0x0000000000492002 : call qword ptr [rsi]
0x00000000004765cc : call r11
0x0000000000400c6b : call r12
0x000000000040e080 : call r14
0x00000000004035f1 : call r15
0x0000000000461f9b : call r8
0x0000000000472c71 : call r9
0x00000000004a2a6b : call rax
0x0000000000402c9d : call rbx
0x00000000004a2c0b : call rcx
0x00000000004035f2 : call rdi
0x000000000040ea2e : call rdx
0x000000000040e081 : call rsi
0x0000000000400c6c : call rsp
0x0000000000442b20 : cdq ; add byte ptr [rdi - 0x76b6ff94], cl ; retf
0x000000000044e884 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049ad25 : cdq ; add rax, r9 ; jmp rax
0x00000000004ba000 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000041d453 : cdq ; ret
0x00000000004bd415 : cdq ; std ; call rax
0x00000000004c6781 : cdq ; std ; call rcx
0x0000000000400708 : cdq ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000004c6d78 : cdqe ; jmp qword ptr [rsi]
0x00000000004853be : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041b663 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x000000000045864a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000404a10 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf -5
0x000000000045d3fd : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000041e19c : clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x000000000040d61c : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043d6bc : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047c47c : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000046d2ea : clc ; add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x0000000000425408 : clc ; add rax, rcx ; ret
0x00000000004a2992 : clc ; call qword ptr [rax + 0x10fff809]
0x00000000004a299a : clc ; call qword ptr [rax + 0x10fff80c]
0x00000000004a29a2 : clc ; call qword ptr [rax + 0x10fff80f]
0x00000000004a29aa : clc ; call qword ptr [rax + 0x10fff812]
0x00000000004a29b2 : clc ; call qword ptr [rax + 0x10fff815]
0x00000000004a29ba : clc ; call qword ptr [rax + 0x10fff818]
0x00000000004a29c2 : clc ; call qword ptr [rax + 0x10fff81b]
0x00000000004a3352 : clc ; call qword ptr [rax + 0x10fff8f1]
0x00000000004a3316 : clc ; call qword ptr [rax + 0x10fff8f2]
0x00000000004a335a : clc ; call qword ptr [rax + 0x10fff8f4]
0x00000000004a331e : clc ; call qword ptr [rax + 0x10fff8f5]
0x00000000004a3362 : clc ; call qword ptr [rax + 0x10fff8f7]
0x00000000004a3326 : clc ; call qword ptr [rax + 0x10fff8f8]
0x00000000004a336a : clc ; call qword ptr [rax + 0x10fff8fa]
0x00000000004a332e : clc ; call qword ptr [rax + 0x10fff8fb]
0x00000000004a3372 : clc ; call qword ptr [rax + 0x10fff8fd]
0x00000000004a3336 : clc ; call qword ptr [rax + 0x10fff8fe]
0x00000000004a337a : clc ; call qword ptr [rax + 0x10fff900]
0x00000000004a2cb6 : clc ; call qword ptr [rax + 0x20fff8c1]
0x00000000004a2dee : clc ; call qword ptr [rax + 0x40fff8dd]
0x00000000004a2e72 : clc ; call qword ptr [rax - 0x1f00072d]
0x00000000004a2e1e : clc ; call qword ptr [rax - 0x1f000734]
0x00000000004a2a5a : clc ; call qword ptr [rax - 0x1f000783]
0x00000000004a2942 : clc ; call qword ptr [rax]
0x00000000004c382a : clc ; call qword ptr [rbx]
0x00000000004a2c02 : clc ; call qword ptr [rcx + 0x31fff8c3]
0x00000000004c2d4a : clc ; call qword ptr [rcx]
0x00000000004c344a : clc ; call qword ptr [rdi]
0x00000000004a2bb2 : clc ; call qword ptr [rdx]
0x00000000004a2c46 : clc ; call qword ptr [rsi]
0x00000000004a2a6a : clc ; call rax
0x00000000004a2c0a : clc ; call rcx
0x00000000004c1fea : clc ; call rsp
0x00000000004a3329 : clc ; clc ; call qword ptr [rax]
0x000000000042f109 : clc ; cmp rcx, rax ; jne 0x42f13b ; xor eax, eax ; ret
0x000000000042f108 : clc ; cmp rcx, rax ; jne 0x42f13c ; xor eax, eax ; ret
0x0000000000473cd0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004208b0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412466 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000040178b : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000045475b : clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000455d82 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000479f3d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a2c0e : clc ; dec dword ptr [rsi - 0x3b] ; clc ; jmp rsi
0x00000000004a2c7e : clc ; dec ebx ; ret 0xfff8
0x00000000004a2daa : clc ; inc dword ptr [rax + 0x10fff8eb] ; fdivp st(0) ; call rax
0x00000000004a2a56 : clc ; inc dword ptr [rax + 0x7c] ; clc ; call qword ptr [rax - 0x1f000783]
0x00000000004a293e : clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a2dca : clc ; inc dword ptr [rax - 0x15] ; clc ; call rax
0x00000000004a2dc6 : clc ; inc dword ptr [rax - 0x17] ; clc ; inc dword ptr [rax - 0x15] ; clc ; call rax
0x00000000004a2d5a : clc ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a2df2 : clc ; inc dword ptr [rax - 0x21] ; clc ; call qword ptr [rax]
0x00000000004a2e6e : clc ; inc dword ptr [rax - 0x2e] ; clc ; call qword ptr [rax - 0x1f00072d]
0x00000000004a2e7e : clc ; inc dword ptr [rax - 0x2f000729] ; fdivr st(0) ; jmp qword ptr [rax]
0x00000000004a2e2a : clc ; inc dword ptr [rax - 0x2f000730] ; sar eax, 1 ; jmp qword ptr [rax]
0x00000000004a2e1a : clc ; inc dword ptr [rax - 0x35] ; clc ; call qword ptr [rax - 0x1f000734]
0x00000000004a2e4e : clc ; inc dword ptr [rax - 0x3a] ; clc ; call qword ptr [rax]
0x00000000004a2cc2 : clc ; inc dword ptr [rax - 0x3d] ; clc ; jmp rax
0x00000000004a2d06 : clc ; inc dword ptr [rax - 0x7f000716] ; in al, dx ; clc ; call qword ptr [rax]
0x00000000004a2a8e : clc ; inc dword ptr [rax] ; cmp al, 0xf8 ; call qword ptr [rax]
0x00000000004a294a : clc ; inc dword ptr [rax] ; div edi ; call qword ptr [rax]
0x00000000004a2cd2 : clc ; inc dword ptr [rax] ; loope 0x4a2cd4 ; jmp rax
0x00000000004a2b6e : clc ; inc dword ptr [rax] ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x000000000044db29 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a2bd2 : clc ; inc dword ptr [rcx] ; mov esp, 0xbcd1fff8 ; clc ; call rcx
0x00000000004a2bfe : clc ; inc dword ptr [rcx] ; ret
0x00000000004a2abe : clc ; inc eax ; push rsp ; clc ; call rax
0x00000000004a2a76 : clc ; inc eax ; xchg al, bh ; call qword ptr [rax]
0x00000000004a2c36 : clc ; inc esi ; sar eax, -1 ; push rsi ; ret 0xfff8
0x000000000044930e : clc ; jg 0x44929d ; ret 0x5c77
0x00000000004a2b62 : clc ; jmp qword ptr [rax - 0x3f00075f]
0x00000000004a2a6e : clc ; jmp qword ptr [rax]
0x000000000047da28 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004c358a : clc ; jmp qword ptr [rsi]
0x00000000004a2b6a : clc ; jmp rax
0x00000000004c31ca : clc ; jmp rbx
0x00000000004a2bf6 : clc ; jmp rcx
0x00000000004a2bb6 : clc ; jmp rdx
0x00000000004a2c12 : clc ; jmp rsi
0x00000000004c271a : clc ; jmp rsp
0x000000000042b987 : clc ; jne 0x42b861 ; ret
0x000000000049bcab : clc ; leave ; ret
0x00000000004a2c76 : clc ; ljmp ptr [rbx + 0x3bfff8c1] ; ret 0xfff8
0x00000000004c3528 : clc ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004b8c62 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000430be7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431557 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433ff7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431757 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433f67 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431957 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433ed7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430c03 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434e4c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049bd48 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000043e909 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000491042 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004bfd38 : clc ; outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rsi]
0x00000000004a2cbe : clc ; push qword ptr [rax + 0x40fff8c2] ; ret
0x00000000004a2a26 : clc ; push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004a2aba : clc ; push qword ptr [rax - 0x3f0007ae] ; push rsp ; clc ; call rax
0x00000000004a2a72 : clc ; push qword ptr [rax - 0x7b] ; clc ; inc eax ; xchg al, bh ; call qword ptr [rax]
0x00000000004a2a1e : clc ; push qword ptr [rax] ; clc ; call rax
0x00000000004a2a3e : clc ; push qword ptr [rax] ; jb 0x4a2a40 ; call rax
0x00000000004a2d76 : clc ; push qword ptr [rax] ; loop 0x4a2d78 ; call qword ptr [rax]
0x00000000004a2bc2 : clc ; push qword ptr [rax] ; mov esp, 0xbd20fff8 ; clc ; call qword ptr [rax]
0x0000000000410b4a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415af0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442151 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415a98 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004a2bfa : clc ; push qword ptr [rcx - 0x3e] ; clc ; inc dword ptr [rcx] ; ret
0x0000000000414f75 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046a22c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a2c42 : clc ; push qword ptr [rsi - 0x3d] ; clc ; call qword ptr [rsi]
0x00000000004a2dfa : clc ; push rax ; loop 0x4a2dfc ; jmp rax
0x00000000004a2d96 : clc ; push rax ; loope 0x4a2d98 ; call rax
0x00000000004a2cf2 : clc ; push rax ; loopne 0x4a2cf4 ; call rax
0x00000000004159c4 : clc ; ret
0x000000000041d4d4 : clc ; ret 0x2a
0x000000000042a424 : clc ; rol ch, 1 ; jns 0x42a405 ; retf -0x152d
0x000000000042a574 : clc ; rol ch, 1 ; jns 0x42a555 ; retf -0x152d
0x000000000042a6c4 : clc ; rol ch, 1 ; jns 0x42a6a5 ; retf -0x152d
0x000000000042a814 : clc ; rol ch, 1 ; jns 0x42a7f5 ; retf -0x152d
0x000000000042a964 : clc ; rol ch, 1 ; jns 0x42a945 ; retf -0x152d
0x000000000042aab4 : clc ; rol ch, 1 ; jns 0x42aa95 ; retf -0x152d
0x000000000042ac04 : clc ; rol ch, 1 ; jns 0x42abe5 ; retf -0x152d
0x000000000042ad54 : clc ; rol ch, 1 ; jns 0x42ad35 ; retf -0x152d
0x000000000042aea4 : clc ; rol ch, 1 ; jns 0x42ae85 ; retf -0x152d
0x000000000042aff4 : clc ; rol ch, 1 ; jns 0x42afd5 ; retf -0x152d
0x000000000042b144 : clc ; rol ch, 1 ; jns 0x42b125 ; retf -0x152d
0x000000000042b294 : clc ; rol ch, 1 ; jns 0x42b275 ; retf -0x152d
0x000000000042b3e4 : clc ; rol ch, 1 ; jns 0x42b3c5 ; retf -0x152d
0x000000000042b534 : clc ; rol ch, 1 ; jns 0x42b515 ; retf -0x152d
0x000000000042b684 : clc ; rol ch, 1 ; jns 0x42b665 ; retf -0x152d
0x00000000004959e4 : clc ; rol ch, 1 ; jns 0x4959c5 ; retf -0x152d
0x0000000000495b64 : clc ; rol ch, 1 ; jns 0x495b45 ; retf -0x152d
0x0000000000495ce4 : clc ; rol ch, 1 ; jns 0x495cc5 ; retf -0x152d
0x0000000000495e64 : clc ; rol ch, 1 ; jns 0x495e45 ; retf -0x152d
0x0000000000495fe4 : clc ; rol ch, 1 ; jns 0x495fc5 ; retf -0x152d
0x0000000000496164 : clc ; rol ch, 1 ; jns 0x496145 ; retf -0x152d
0x00000000004962e4 : clc ; rol ch, 1 ; jns 0x4962c5 ; retf -0x152d
0x0000000000496464 : clc ; rol ch, 1 ; jns 0x496445 ; retf -0x152d
0x00000000004965e4 : clc ; rol ch, 1 ; jns 0x4965c5 ; retf -0x152d
0x0000000000496764 : clc ; rol ch, 1 ; jns 0x496745 ; retf -0x152d
0x00000000004968e4 : clc ; rol ch, 1 ; jns 0x4968c5 ; retf -0x152d
0x0000000000496a64 : clc ; rol ch, 1 ; jns 0x496a45 ; retf -0x152d
0x0000000000496be4 : clc ; rol ch, 1 ; jns 0x496bc5 ; retf -0x152d
0x0000000000496d64 : clc ; rol ch, 1 ; jns 0x496d45 ; retf -0x152d
0x0000000000496ee4 : clc ; rol ch, 1 ; jns 0x496ec5 ; retf -0x152d
0x000000000047869a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047790d : clc ; std ; jbe 0x47791c ; ret
0x000000000044e515 : clc ; syscall
0x000000000046da78 : cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043da0f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043da2f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c7802 : cld ; call qword ptr [rax]
0x00000000004c781a : cld ; call qword ptr [rdx]
0x00000000004a3371 : cld ; clc ; call qword ptr [rax + 0x10fff8fd]
0x000000000048032f : cld ; cmove rsi, r9 ; jmp 0x4802fe
0x000000000045c04b : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x0000000000470a4e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043dabe : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043d9ee : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c755a : cld ; jmp qword ptr [rax]
0x00000000004b99e5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4b99b4 ; retf
0x0000000000431372 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431575 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431775 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431975 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434e5e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000403996 : cld ; mov eax, 3 ; syscall
0x0000000000431ea8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000430fa6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434186 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431186 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434106 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431366 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434086 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430dc6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434206 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000490ffc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000425dd8 : cld ; ret
0x000000000041d4c8 : cld ; ret 0x2a
0x000000000047a1e0 : cld ; scasb al, byte ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004b8103 : cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000417ee0 : cld ; sub eax, dword ptr ss:[rax] ; test rax, rax ; je 0x417ef4 ; call rax
0x00000000004b8116 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000041f369 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041f549 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x0000000000466af6 : cli ; add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf -0x72bf
0x000000000047c049 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000041400f : cli ; add ch, al ; pop rdx ; retf
0x0000000000466b3a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004583bf : cli ; add ch, byte ptr [rcx] ; retf -0x2e77
0x0000000000488d03 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000488d2c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000045bc0c : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000410528 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043d75c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000448acf : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000004740e6 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000474953 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043d281 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000434e7c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047aebc : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004ba0f9 : cli ; call 0xffffffffab596bf1
0x00000000004c589a : cli ; call rax
0x00000000004c5cb2 : cli ; call rdx
0x00000000004c48f2 : cli ; call rsi
0x00000000004a332d : cli ; clc ; call qword ptr [rax + 0x10fff8fb]
0x00000000004a336d : cli ; clc ; call qword ptr [rax]
0x0000000000480c34 : cli ; dec dword ptr [rdi] ; retf -0x7277
0x0000000000431e6b : cli ; jg 0x431e7e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000434e37 : cli ; jg 0x434e4a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043d241 : cli ; jg 0x43d253 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043d3c6 : cli ; jg 0x43d3d8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c4d9a : cli ; jmp qword ptr [rax]
0x00000000004c62aa : cli ; jmp qword ptr [rdx]
0x00000000004c4f72 : cli ; jmp rdi
0x00000000004c4a2a : cli ; jmp rdx
0x00000000004c5f92 : cli ; jmp rsi
0x00000000004c564a : cli ; jmp rsp
0x0000000000431778 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004257e8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047abf2 : cli ; or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x000000000047a9a6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x00000000004896b8 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004ba581 : cli ; push 0x6e ; ja 0x4ba50e ; ret 0x48f
0x0000000000446249 : cli ; push rax ; add byte ptr [rax - 0x7f], cl ; ret 0x50e0
0x00000000004b9025 : cli ; ret 0xac65
0x000000000041a552 : cli ; retf
0x00000000004452c2 : cli ; retf -1
0x0000000000441dbb : cli ; setae al ; ret
0x00000000004b8ed0 : cli ; test dl, bh ; retf -0x2081
0x0000000000422f59 : cli ; test rdx, rdx ; je 0x422f79 ; bsf rax, rdx ; ret
0x0000000000464e88 : cli ; test rdx, rdx ; je 0x464eb9 ; bsf rax, rdx ; ret
0x00000000004b7c6a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c8a74 : cmc ; add al, byte ptr [rax] ; ret
0x0000000000495618 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004432ac : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041d380 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004be592 : cmc ; call qword ptr [rax]
0x00000000004be4da : cmc ; call qword ptr [rbx]
0x00000000004bf71a : cmc ; call qword ptr [rcx]
0x00000000004be5aa : cmc ; call qword ptr [rdx]
0x00000000004bfd3a : cmc ; call qword ptr [rsi]
0x00000000004c075a : cmc ; call rdx
0x00000000004a3321 : cmc ; clc ; call qword ptr [rax]
0x0000000000486617 : cmc ; jmp 0x4865e6
0x00000000004bfbea : cmc ; jmp qword ptr [rax]
0x00000000004bf54a : cmc ; jmp qword ptr [rcx]
0x00000000004bed52 : cmc ; jmp qword ptr [rsi]
0x00000000004ba9a9 : cmc ; mov ch, 0xab ; ret
0x000000000043410a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430ffe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043c7d3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b7857 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047a1ed : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043c7d7 : cmc ; sub eax, edx ; ret
0x00000000004b9fe5 : cmc ; xlatb ; ret 0x4e27
0x000000000049c0a7 : cmova eax, edx ; ret
0x00000000004669a1 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000416f49 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000416f48 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043e89b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000004645b1 : cmove eax, ecx ; ret
0x000000000043eb80 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000004208b3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425362 : cmove eax, edx ; ret
0x0000000000480331 : cmove esi, ecx ; jmp 0x4802fc
0x00000000004645b0 : cmove r8, rcx ; ret
0x000000000043e89a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046a900 : cmove rax, r9 ; ret
0x00000000004208b2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425361 : cmove rax, rdx ; ret
0x0000000000480330 : cmove rsi, r9 ; jmp 0x4802fd
0x0000000000414a8b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414a89 ; ret
0x00000000004631ab : cmovg eax, ecx ; test rdx, rdx ; jne 0x4631a9 ; ret
0x0000000000400546 : cmovle eax, ecx ; jmp 0x400519
0x0000000000413523 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000420933 : cmovne eax, edx ; ret
0x0000000000420932 : cmovne rax, rdx ; ret
0x0000000000443253 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x0000000000443c20 : cmovns eax, dword ptr [rbx - 0x76b30f1a] ; imul eax ; ret
0x00000000004253bd : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf -0x7cb8
0x0000000000455d4d : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x000000000044631c : cmovs eax, edx ; ret
0x0000000000419952 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049bfe8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000489330 : cmovs edi, dword ptr [rcx] ; retf 0xf48
0x000000000048032e : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x4802ff
0x000000000043fa71 : cmp al, 0x24 ; call rbx
0x000000000049d5e3 : cmp al, 0x24 ; mov rsi, qword ptr [r14 + rbp*8 + 0x10] ; call rbx
0x000000000049b9fd : cmp al, 0x31 ; or byte ptr [rbp + 0x1d], dh ; mov qword ptr [rax], rdx ; ret
0x000000000049b99d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x000000000040e0fd : cmp al, 0x33 ; call rax
0x00000000004b8c60 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b7b63 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004ba64b : cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004a2a91 : cmp al, 0xf8 ; call qword ptr [rax]
0x000000000048a06b : cmp al, 9 ; ja 0x488c70 ; jmp 0x48a049
0x000000000048d2a3 : cmp al, 9 ; ja 0x48be90 ; jmp 0x48d281
0x00000000004909eb : cmp al, 9 ; ja 0x48ecf0 ; jmp 0x4909c9
0x00000000004c15ad : cmp al, byte ptr [rax] ; add al, al ; ret
0x00000000004c1535 : cmp al, byte ptr [rax] ; add byte ptr [rax], bl ; ret
0x000000000043cc96 : cmp al, byte ptr [rsi - 1] ; jne 0x43ccbc ; xor eax, eax ; ret
0x0000000000446a9f : cmp al, ch ; retf
0x0000000000425636 : cmp al, dh ; ret
0x0000000000425635 : cmp al, r14b ; ret
0x000000000049c2b2 : cmp bh, 0x30 ; jne 0x49c2e1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049c302 : cmp bh, 0x30 ; jne 0x49c331 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049c2d9 : cmp bh, 0x50 ; jne 0x49c2d2 ; xor eax, eax ; ret
0x000000000049c329 : cmp bh, 0x50 ; jne 0x49c322 ; xor eax, eax ; ret
0x00000000004a2cd0 : cmp bh, bl ; clc ; inc dword ptr [rax] ; loope 0x4a2cd6 ; jmp rax
0x00000000004c8349 : cmp bh, ch ; call rcx
0x0000000000452853 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004c6dc1 : cmp bl, bh ; jmp qword ptr [rdx]
0x000000000043fa42 : cmp bl, bl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000486899 : cmp bl, ch ; ret 0x8148
0x000000000042c093 : cmp bl, dh ; ret
0x0000000000468a75 : cmp byte ptr [r14], r12b ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf0913d1
0x00000000004101cb : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000045d5e6 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401383 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x000000000042619f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000425677 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000043fa24 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000041635e : cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x00000000004101cc : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004591aa : cmp byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000004828a7 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000425666 : cmp byte ptr [rax], ah ; ret
0x0000000000414f43 : cmp byte ptr [rax], al ; je 0x414f54 ; ret
0x000000000049b90f : cmp byte ptr [rax], al ; je 0x49b94b ; add rsp, 0x18 ; ret
0x0000000000420930 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000425656 : cmp byte ptr [rax], dl ; ret
0x0000000000425655 : cmp byte ptr [rax], r10b ; ret
0x0000000000425665 : cmp byte ptr [rax], r12b ; ret
0x000000000042092f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c20d4 : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c647d : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c64dd : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c641d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043e262 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000472c6b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x00000000004a2bc0 : cmp byte ptr [rbx - 0x43cf0008], 0xf8 ; jmp qword ptr [rax]
0x00000000004790c9 : cmp byte ptr [rbx - 0x7ad7dbbc], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x000000000049c2a5 : cmp byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x0000000000464087 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000405b94 : cmp byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; ret 0xffa7
0x00000000004114a7 : cmp byte ptr [rcx + rcx*4 - 0x12], cl ; call 0x41d746
0x000000000049b9fc : cmp byte ptr [rcx + rsi], 8 ; jne 0x49ba28 ; mov qword ptr [rax], rdx ; ret
0x00000000004765a6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000414f08 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042e5dd : cmp byte ptr [rdi], dl ; ret
0x000000000042f0f0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f0d9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f0c2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042db7e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049b99c : cmp byte ptr [rdx + rsi], 8 ; jne 0x49b9c5 ; mov rax, qword ptr [rax] ; ret
0x000000000046a8fc : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000468a76 : cmp byte ptr [rsi], ah ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf0913d0
0x0000000000449183 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004bd3d9 : cmp ch, 0xff ; adc byte ptr [rbp - 3], ah ; call rax
0x000000000045cdcf : cmp ch, cl ; retf
0x000000000040d85d : cmp ch, cl ; retf -5
0x00000000004c3b49 : cmp cl, bh ; call rdi
0x000000000041a280 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000048158b : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004731be : cmp cl, byte ptr [rax - 0x77] ; retf
0x000000000046a8ff : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x000000000042f7a1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042f8f1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042fa41 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042fb91 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042fce1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042fe31 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042ff81 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x00000000004300d1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000430221 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000430371 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x00000000004304c1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000430611 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000430761 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x00000000004308b1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000430a01 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000004324ea : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043266a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004327ea : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043296a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x0000000000432aea : cmp cl, byte ptr [rdi] ; retf 0xf05
0x0000000000432c6a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x0000000000432dea : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000432f6a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x00000000004330ea : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000043326a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x00000000004333ea : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043356a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004336ea : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043386a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004339ea : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004baa26 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000488dc6 : cmp cl, ch ; ret
0x000000000046a8ce : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46a88a ; xor eax, eax ; ret
0x000000000046da73 : cmp dh, byte ptr [rcx] ; rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000049c2d8 : cmp dil, 0x50 ; jne 0x49c2d3 ; xor eax, eax ; ret
0x000000000049c328 : cmp dil, 0x50 ; jne 0x49c323 ; xor eax, eax ; ret
0x0000000000434e7b : cmp dl, 1 ; jb 0x434e8d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043d280 : cmp dl, 1 ; jb 0x43d28e ; mov byte ptr [rdi], cl ; ret
0x000000000043d3fa : cmp dl, 1 ; jb 0x43d408 ; mov byte ptr [rdi], cl ; ret
0x0000000000464058 : cmp dword ptr [rax + 0x30], 0 ; je 0x464066 ; ret
0x00000000004c14bd : cmp dword ptr [rax], eax ; add al, al ; sal bh, 0xff ; retf 2
0x0000000000433c1c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004500ce : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000414f41 : cmp dword ptr [rdi + 0x38], 0 ; je 0x414f56 ; ret
0x0000000000442140 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000049c0a4 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x00000000004693ea : cmp dword ptr [rsi], esp ; add byte ptr [rax + 1], cl ; retf
0x000000000048c0bd : cmp dword ptr [rsp + 0x10], 0 ; jne 0x48c094 ; jmp 0x48c09c
0x0000000000488e8d : cmp dword ptr [rsp + 8], 0 ; jne 0x488e64 ; jmp 0x488e6c
0x000000000043ead3 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047a5b9 : cmp eax, 0x251d86 ; call rax
0x000000000047a47c : cmp eax, 0x251ec3 ; jmp rax
0x00000000004a33c5 : cmp eax, 0x3f60fff9 ; stc ; jmp rax
0x00000000004b7f4b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000040124d : cmp eax, 0xb8004a09 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004a2a69 : cmp eax, 0xf882d0ff ; jmp qword ptr [rax]
0x000000000047790c : cmp eax, 0xfd ; jbe 0x47791d ; ret
0x0000000000473ccf : cmp eax, 0xff ; cmove rax, rdx ; ret
0x0000000000414f74 : cmp eax, 0xff ; je 0x414f89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415a97 : cmp eax, 0xff ; je 0x415aa8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000046426a : cmp eax, 0xff ; je 0x46427b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004642ae : cmp eax, 0xff ; je 0x4642bf ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410b49 : cmp eax, 0xff ; jne 0x410b56 ; pop rbx ; ret
0x0000000000415aef : cmp eax, 0xff ; jne 0x415ae0 ; pop rbx ; ret
0x0000000000442150 : cmp eax, 0xff ; jne 0x442150 ; xor eax, eax ; leave ; ret
0x000000000040dc59 : cmp eax, 0xfffff000 ; ja 0x40dc88 ; ret
0x000000000043e8c6 : cmp eax, 0xfffff000 ; ja 0x43e8d8 ; ret
0x000000000043e915 : cmp eax, 0xfffff000 ; ja 0x43e928 ; ret
0x000000000043eaa4 : cmp eax, 0xfffff000 ; ja 0x43eae8 ; ret
0x000000000044f0e1 : cmp eax, 0xfffff000 ; ja 0x44f0f8 ; ret
0x0000000000469f78 : cmp eax, 0xfffff000 ; ja 0x469f90 ; pop rbx ; ret
0x000000000046a306 : cmp eax, 0xfffff000 ; ja 0x46a318 ; ret
0x000000000046a35b : cmp eax, 0xfffff000 ; ja 0x46a370 ; ret
0x000000000043db0b : cmp eax, 2 ; je 0x43db1f ; xor eax, eax ; ret
0x0000000000441e9a : cmp eax, 4 ; je 0x441ea5 ; ret
0x0000000000412f75 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x412f88 ; movzx eax, byte ptr [rax] ; ret
0x0000000000440811 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000473d18 : cmp eax, dword ptr [rsi + rdx] ; jae 0x473cc8 ; xor eax, eax ; ret
0x00000000004b9e17 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x0000000000416849 : cmp eax, ecx ; jae 0x416877 ; movzx eax, byte ptr [rax] ; ret
0x000000000043ccb3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004a2c7c : cmp eax, edx ; clc ; dec ebx ; ret 0xfff8
0x0000000000477ae4 : cmp eax, esi ; je 0x477af4 ; ret
0x0000000000441e36 : cmp ebx, 0xa ; je 0x441e41 ; ret
0x000000000044391e : cmp ebx, eax ; setne dl ; jmp 0x44390a
0x000000000041d353 : cmp ebx, ecx ; jb 0x41d339 ; mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x0000000000470db1 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000049faac : cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; retf -0x826
0x000000000046cd8e : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x00000000004473c9 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004669a0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x00000000004645ae : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042f10b : cmp ecx, eax ; jne 0x42f139 ; xor eax, eax ; ret
0x00000000004735f6 : cmp ecx, edx ; jne 0x4735d5 ; ret
0x00000000004c27a9 : cmp edi, eax ; call qword ptr [rax]
0x000000000049cbdd : cmp edi, eax ; jae 0x49cba7 ; mov rdx, rcx ; jmp 0x49cbbf
0x0000000000459b85 : cmp edi, ecx ; ja 0x459b70 ; mov eax, r8d ; ret
0x000000000046a50e : cmp edi, edx ; ja 0x46a53d ; ret
0x000000000047c048 : cmp edx, 0 ; mov eax, edx ; jle 0x47c060 ; ret
0x0000000000442062 : cmp edx, eax ; jne 0x442045 ; ret
0x0000000000473608 : cmp edx, eax ; jne 0x4735b2 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000425da8 : cmp edx, ecx ; jne 0x425d95 ; ret
0x0000000000441dba : cmp edx, edi ; setae al ; ret
0x0000000000466636 : cmp edx, esi ; je 0x466647 ; test edx, edx ; jne 0x466639 ; ret
0x0000000000416889 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x000000000044cb95 : cmp esi, 3 ; je 0x44cba6 ; pop rbx ; ret
0x00000000004b9fe4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000046430a : cmp esi, ecx ; jb 0x464307 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415b2a : cmp esi, ecx ; jne 0x415b27 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000464057 : cmp qword ptr [rax + 0x30], 0 ; je 0x464067 ; ret
0x0000000000414f40 : cmp qword ptr [rdi + 0x38], 0 ; je 0x414f57 ; ret
0x000000000049c0a3 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000048c0bc : cmp qword ptr [rsp + 0x10], 0 ; jne 0x48c095 ; jmp 0x48c09d
0x0000000000488e8c : cmp qword ptr [rsp + 8], 0 ; jne 0x488e65 ; jmp 0x488e6d
0x000000000042c092 : cmp r11b, r14b ; ret
0x0000000000441e35 : cmp r11d, 0xa ; je 0x441e42 ; ret
0x000000000048032d : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x480300
0x0000000000473d17 : cmp r8, qword ptr [rsi + rdx] ; jae 0x473cc9 ; xor eax, eax ; ret
0x000000000040dc58 : cmp rax, -0x1000 ; ja 0x40dc89 ; ret
0x000000000043e8c5 : cmp rax, -0x1000 ; ja 0x43e8d9 ; ret
0x000000000043e914 : cmp rax, -0x1000 ; ja 0x43e929 ; ret
0x000000000043eaa3 : cmp rax, -0x1000 ; ja 0x43eae9 ; ret
0x000000000044f0e0 : cmp rax, -0x1000 ; ja 0x44f0f9 ; ret
0x0000000000469f77 : cmp rax, -0x1000 ; ja 0x469f91 ; pop rbx ; ret
0x000000000046a305 : cmp rax, -0x1000 ; ja 0x46a319 ; ret
0x000000000046a35a : cmp rax, -0x1000 ; ja 0x46a371 ; ret
0x000000000047790b : cmp rax, 0xfd ; jbe 0x47791e ; ret
0x0000000000473cce : cmp rax, 0xff ; cmove rax, rdx ; ret
0x0000000000412f74 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x412f89 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416848 : cmp rax, rcx ; jae 0x416878 ; movzx eax, byte ptr [rax] ; ret
0x0000000000477ae3 : cmp rax, rsi ; je 0x477af5 ; ret
0x00000000004645ad : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042f10a : cmp rcx, rax ; jne 0x42f13a ; xor eax, eax ; ret
0x00000000004735f5 : cmp rcx, rdx ; jne 0x4735d6 ; ret
0x000000000049cbdc : cmp rdi, r8 ; jae 0x49cba8 ; mov rdx, rcx ; jmp 0x49cbc0
0x000000000046a50d : cmp rdi, rdx ; ja 0x46a53e ; ret
0x0000000000473607 : cmp rdx, r8 ; jne 0x4735b3 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000442061 : cmp rdx, rax ; jne 0x442046 ; ret
0x0000000000425da7 : cmp rdx, rcx ; jne 0x425d96 ; ret
0x0000000000425da6 : cmp rdx, rcx ; jne 0x425d97 ; ret
0x0000000000441db9 : cmp rdx, rdi ; setae al ; ret
0x0000000000464309 : cmp rsi, rcx ; jb 0x464308 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415b29 : cmp rsi, rcx ; jne 0x415b28 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000495c17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495f17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496e17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c812d : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov al, 0x35 ; std ; call rdx
0x000000000041c006 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425115 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000496b17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042eb89 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x00000000004b8016 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b7fe2 ; mov ecx, 0x5b92ac50 ; retf
0x000000000041595a : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004296b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496817 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496517 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ba131 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x0000000000443f96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000049fef2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x22
0x0000000000409a06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004c812c : cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov al, 0x35 ; std ; call rdx
0x00000000004b7aff : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x0000000000405215 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x000000000049bb24 : cwde ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000412e6f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004708ef : cwde ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004c0ee8 : cwde ; idiv bh ; ret
0x000000000041cc66 : cwde ; insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf -0x76b4
0x000000000041b859 : cwde ; insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x00000000004c6d79 : cwde ; jmp qword ptr [rsi]
0x0000000000441a44 : cwde ; mov eax, 3 ; syscall
0x0000000000414c9c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000047f333 : cwde ; ret
0x00000000004389b1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000048da05 : dec byte ptr [r8 - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x00000000004389b2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004796d6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000045c75c : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000048da06 : dec byte ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x0000000000464d3d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e2ba : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047dc2d : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000482783 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000477909 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x477920 ; ret
0x000000000041a89c : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x00000000004104e9 : dec dword ptr [rax + 0x29] ; ret
0x0000000000438af2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473201 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045ddc6 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000418f9d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041cdfd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000418685 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480454 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000048524d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000046fef5 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x0000000000473e5a : dec dword ptr [rax + 0x63] ; ret
0x000000000045deee : dec dword ptr [rax + 0x63] ; retf
0x0000000000469f6c : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x0000000000461b7b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00000000004622cf : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465279 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000473cd1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004208b1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000458ccb : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412467 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000041054c : dec dword ptr [rax + 1] ; ret
0x000000000047d197 : dec dword ptr [rax + 1] ; ret 0x3948
0x000000000045cd16 : dec dword ptr [rax - 0x39] ; ret
0x000000000045c04c : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004116d7 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x00000000004803be : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043e2cc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004bd4bf : dec dword ptr [rax - 0x3d] ; std ; push rax ; ret 0xfffd
0x000000000049a631 : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000418f73 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041cdd2 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x0000000000468dce : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x000000000047839d : dec dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; retf 0x4df0
0x0000000000473ec5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004101c8 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481588 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x000000000049faa9 : dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; retf -0x826
0x000000000049a9fd : dec dword ptr [rax - 0x75] ; je 0x49aa2e ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000043f7ad : dec dword ptr [rax - 0x75] ; jge 0x43f7b7 ; call rbx
0x000000000043fa60 : dec dword ptr [rax - 0x75] ; jge 0x43fa6a ; call rbx
0x00000000004415f8 : dec dword ptr [rax - 0x75] ; jge 0x441602 ; call rbx
0x00000000004789c7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041b35f : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000413f51 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000477d6c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004835c2 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x0000000000487d97 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000425f18 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000049fab5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf7da
0x000000000045e95d : dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf 0x72
0x000000000049e4aa : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040178c : dec dword ptr [rax - 0x77] ; ret
0x000000000046a4fe : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000048360f : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041d1c1 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044ef62 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045dd8a : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000465bb6 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000482e99 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x0000000000454997 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045f556 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000481ecd : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x000000000042082e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046aac3 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402bb8 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x000000000047303b : dec dword ptr [rax - 0x77] ; retf
0x0000000000455b01 : dec dword ptr [rax - 0x77] ; retf -0x76b8
0x000000000044775e : dec dword ptr [rax - 0x77] ; retf -0x7bc0
0x000000000047cdd5 : dec dword ptr [rax - 0x77] ; retf 0x1b8
0x0000000000477cd1 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000487108 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000046344e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf -2
0x0000000000483a04 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; test bl, bh ; retf -1
0x000000000049d11b : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rbx*8 + 0x48], 0x89 ; ret
0x00000000004853bb : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000047790a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x47791f ; ret
0x0000000000453411 : dec dword ptr [rax - 0x7d] ; jge 0x45344e ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040417c : dec dword ptr [rax - 0x7d] ; ret
0x0000000000418f4f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000004482f2 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004702ff : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000004702ed : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000456774 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000004698d6 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x000000000047038b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x0000000000484db2 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x000000000049c637 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000452856 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000433c20 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046c120 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000047dc2e : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000047849c : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x000000000043fc6e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000041be69 : dec dword ptr [rbx + 0x2ad9003d] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041ac9f : dec dword ptr [rbx + 0x2aeb5e15] ; add dh, dh ; ret 0xf02
0x0000000000477dec : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000468496 : dec dword ptr [rbx + 0x50bf1443] ; ret 0x6c
0x0000000000447526 : dec dword ptr [rbx + 0x79c98508] ; jrcxz 0x44751f ; retf
0x0000000000483c56 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x0000000000454c54 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046d323 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x0000000000454863 : dec dword ptr [rcx + 0x39] ; ret
0x000000000041bdd3 : dec dword ptr [rcx + 0x39] ; ret 0x4874
0x000000000046c152 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x00000000004547e1 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000471a2a : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x0000000000468da6 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045a38c : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x0000000000451e22 : dec dword ptr [rcx + rcx*4 - 0x18] ; jmp 0x451df7
0x00000000004524b9 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x00000000004674fe : dec dword ptr [rcx - 0x50f0b73f] ; retf
0x00000000004804cf : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000043f5e5 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043fa6e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000043f678 : dec dword ptr [rcx - 0x75] ; jge 0x43f682 ; call rbx
0x000000000043f79f : dec dword ptr [rcx - 0x75] ; jge 0x43f7a9 ; call rbx
0x000000000043f8e2 : dec dword ptr [rcx - 0x75] ; jge 0x43f8ec ; call rbx
0x000000000043fa52 : dec dword ptr [rcx - 0x75] ; jge 0x43fa5c ; call rbx
0x0000000000441270 : dec dword ptr [rcx - 0x75] ; jge 0x44127a ; call rbx
0x0000000000441398 : dec dword ptr [rcx - 0x75] ; jge 0x4413a2 ; call rbx
0x00000000004414db : dec dword ptr [rcx - 0x75] ; jge 0x4414e5 ; call rbx
0x00000000004415dc : dec dword ptr [rcx - 0x75] ; jge 0x4415e6 ; call rbx
0x000000000047c43c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453453 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000445798 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044dff7 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x0000000000455a83 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041a89d : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485517 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381a127
0x000000000043e9f9 : dec dword ptr [rdi] ; and eax, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000483936 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x00000000004861ef : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000413522 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000467d99 : dec dword ptr [rdi] ; mov bh, 5 ; mov edi, 0x89002644 ; ret 0xe883
0x000000000044631b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000404667 : dec dword ptr [rdi] ; retf
0x0000000000480c35 : dec dword ptr [rdi] ; retf -0x7277
0x000000000043f4ec : dec dword ptr [rdi] ; sub ebp, 0x45 ; add byte ptr [rax], al ; ret
0x0000000000410601 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000448ab4 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x77000000], ch ; retf -0x1d7f
0x000000000048a8c7 : dec dword ptr [rdi] ; test byte ptr [rsi + rax + 0x63480000], al ; retf -0x7cb8
0x000000000043cb40 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046ff8c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000041688b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000048510f : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000041a6d3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x24e9
0x0000000000479f3e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000458c7b : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043e1bd : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000046a565 : dec dword ptr [rdi] ; xor dword ptr [rbp + rdx*4 - 3], 0xffffffff ; ret
0x000000000043e965 : dec dword ptr [rdi] ; xor dword ptr [rcx + rdx*2], 0 ; ret
0x00000000004a2c0f : dec dword ptr [rsi - 0x3b] ; clc ; jmp rsi
0x00000000004a2c7f : dec ebx ; ret 0xfff8
0x0000000000479a5d : dec ecx ; ret
0x0000000000438af1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000461d06 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x00000000004482f1 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046d322 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000040dc34 : div byte ptr [rbp + 0x31] ; mov eax, 0xba ; syscall
0x0000000000464d82 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047a1ec : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000459b95 : div ecx ; add eax, r8d ; ret
0x000000000043dac1 : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004a294d : div edi ; call qword ptr [rax]
0x00000000004627e6 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a1eb : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043ccb4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004389ae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000438aee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004789cb : enter -0x74b8, 0x14 ; ret
0x000000000046cf04 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46ced8
0x000000000044213e : enter -0x7cb8, 0x7c ; retf 0x1f8
0x000000000043f6c4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004acb3c : enter 0, 0 ; retf
0x00000000004b0b90 : enter 0, 0 ; retf 0
0x00000000004adce8 : enter 0x10, 0 ; retf
0x00000000004483ef : enter 0x1388, -0x77 ; retf -0x1f7d
0x000000000041684a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000479d5e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000421f4d : enter 0x31c3, -0x40 ; ret
0x00000000004c1563 : enter 0x380e, 0x41 ; ret
0x000000000041863d : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041a865 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000040095d : enter 0x4bda, 0 ; call rax
0x000000000046a886 : enter 0x4f75, -0xd ; ret
0x00000000004ba79c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004ad4e8 : enter 0xa, 0 ; retf
0x00000000004ad8e8 : enter 0xd, 0 ; retf
0x000000000042ec36 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000420981 : enter 0xf66, -0x15 ; ret
0x000000000042540b : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf -0x7cb8
0x00000000004b0d90 : enter 1, 0 ; retf 1
0x00000000004ae0a0 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0f90 : enter 2, 0 ; retf 2
0x00000000004b1190 : enter 3, 0 ; retf 3
0x00000000004b1390 : enter 4, 0 ; retf 4
0x00000000004b1590 : enter 5, 0 ; retf 5
0x00000000004b1790 : enter 6, 0 ; retf 6
0x00000000004b1990 : enter 7, 0 ; retf 7
0x00000000004b1b90 : enter 8, 0 ; retf 8
0x00000000004b1d90 : enter 9, 0 ; retf 9
0x000000000049b9b3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000414be7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004150e3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f439 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000442146 : fadd dword ptr [rax] ; leave ; ret
0x000000000041bfcf : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000411a40 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000405599 : fadd dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004439b2 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c8a71 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000004111b7 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x0000000000401786 : fadd qword ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c62a4 : fadd qword ptr [rdi - 0x1c780000] ; cli ; jmp qword ptr [rdx]
0x00000000004c22a4 : fadd qword ptr [rdi] ; add byte ptr [rax + 0x1d], bl ; clc ; call qword ptr [rax]
0x000000000047aec9 : fadd st(1) ; call 0xffffffff8a09d7f4
0x000000000047b030 : fadd st(1) ; call 0xffffffff8a09d95b
0x000000000047b849 : fadd st(1) ; call 0xffffffff8a09e174
0x000000000047b9a6 : fadd st(1) ; call 0xffffffff8a09e2d1
0x00000000004770b5 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042e781 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049e214 : fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004b9dd8 : fcmovb st(0), st(3) ; ret
0x000000000044e7fe : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x000000000049b9b9 : fcomi st(3) ; ret
0x000000000044e4b1 : fcomp dword ptr [rax + 0x4a] ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x0000000000468347 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fa8a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fb6f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043f32f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041d576 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bab59 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000041a54d : fcomp dword ptr [rsi] ; add al, bpl ; cli ; retf
0x00000000004b8dc0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004c2d48 : fdiv dword ptr [rdi - 8] ; call qword ptr [rcx]
0x00000000004c6111 : fdiv st(2), st(0) ; call rsi
0x000000000043f8d3 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043f8e0 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x43f8ee ; call rbx
0x00000000004a2d91 : fdivp st(0) ; call qword ptr [rax]
0x00000000004a2db1 : fdivp st(0) ; call rax
0x000000000043f70a : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000041d1bf : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004a2e85 : fdivr st(0) ; jmp qword ptr [rax]
0x00000000004c6019 : fdivr st(2) ; jmp rdi
0x00000000004b8115 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000043ccb8 : fdivr st(7) ; ret
0x000000000043ead2 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x0000000000463a64 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x000000000048932d : fiadd dword ptr [rbx + 0x39480fe2] ; retf 0xf48
0x00000000004a35e1 : fiadd dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d9
0x000000000043f44c : fiadd dword ptr [rcx - 0x7d] ; retf 0x3140
0x000000000040f720 : fiadd word ptr [rax] ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000043fe29 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004ba9a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000049e440 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000004438c5 : fidivr dword ptr [rax + 1] ; ret
0x0000000000417135 : fild dword ptr [rbx + rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043d6df : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000044205d : fild qword ptr [rdx + 0x39480028] ; ret 0xda75
0x00000000004004a4 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000459b88 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000489cc5 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000004320f0 : fimul dword ptr [rax + 0x39] ; retf 0x6a77
0x000000000045bc09 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000412505 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x000000000047abf6 : fimul dword ptr [rax - 0x77] ; retf
0x00000000004105f0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000048a3ce : fimul dword ptr [rax - 0x7d] ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf -0x7cb8
0x0000000000404e78 : fimul dword ptr [rax - 0x7d] ; ret
0x000000000041bb37 : fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x0000000000425f42 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000040095e : fimul dword ptr [rbx] ; call rax
0x000000000048c8dc : fimul dword ptr [rcx + 1] ; ror byte ptr [rcx + 0x39], cl ; retf
0x000000000048a4e2 : fimul word ptr [rax + 0x29] ; ret
0x00000000004117ce : fimul word ptr [rax - 0x77] ; ret
0x000000000045963f : fimul word ptr [rax - 0x77] ; retf
0x000000000047285a : fimul word ptr [rax - 0x7d] ; ret
0x0000000000479bcc : fimul word ptr [rbp + 0x11] ; retf
0x0000000000479b8e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x479be8
0x000000000047f69e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47f6f8
0x000000000044f230 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000041161f : fimul word ptr [rcx + rcx*4 - 0x19] ; mov eax, r9d ; syscall
0x00000000004c19d9 : fincstp ; jmp qword ptr [rbx]
0x00000000004003d4 : fistp qword ptr [rax + 1] ; syscall
0x0000000000414c55 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414dc5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000417588 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000004677c2 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000049e211 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000473829 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000049e43d : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x000000000048d3b3 : fisttp dword ptr [rax - 0x77] ; jl 0x48d3e4 ; sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000478c31 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046cd28 : fisttp dword ptr [rax - 0x7d] ; in al, dx ; or byte ptr [rbx + rcx*4 + 0x2d], al ; ret 0x25
0x000000000049ad21 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000478c4b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000468775 : fisttp dword ptr [rdi] ; retf 0x3948
0x0000000000440309 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041d99e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x00000000004476f7 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000048da09 : fisttp qword ptr [rax - 0x77] ; retf
0x000000000041c0c9 : fisttp word ptr [rax + 9] ; ret 0x8948
0x000000000049d120 : fisttp word ptr [rax - 0x77] ; ret
0x0000000000455465 : fisttp word ptr [rax - 0x77] ; retf -0x76b4
0x000000000045371a : fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x0000000000478ccf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000451d24 : fisttp word ptr [rbp - 0x77] ; imul eax ; ret
0x000000000042a9ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042eb51 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e851 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045aea1 : fisubr word ptr [rbx] ; add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x0000000000431f3c : fisubr word ptr [rcx] ; ret 0xfec5
0x0000000000425b1d : fld dword ptr [rbx + 0x294807e1] ; retf -0x7ab8
0x00000000004a35e9 : fld dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43d9
0x000000000046877a : fld dword ptr [rcx + 0xf] ; retf
0x00000000004054a5 : fld dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000047ce02 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400cca : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b8e01 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004413a3 : fld st(1) ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000049108a : fld xword ptr [rsp - 0x18] ; ret
0x000000000041be6d : fldcw word ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044edb9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000425569 : fldenv dword ptr [rsi + 0xf] ; je 0x4255c6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c397 : fldenv dword ptr [rsi + 0xf] ; je 0x42c3f4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ebd1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425461 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000479c34 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418c0f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047de11 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047e136 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000043cf87 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000048e717 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000457ea1 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004112b1 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000400a1b : fmul dword ptr [rax - 0x77] ; ret 0x2ce8
0x0000000000483c59 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047c853 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000468fac : fmul dword ptr [rax - 0x7d] ; ret
0x00000000004013f6 : fmul dword ptr [rbx + rcx*4 + 0xd] ; ret 0x2c8d
0x000000000041193a : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045a59e : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000499eb5 : fmul dword ptr [rcx + 9] ; ret 0x6de9
0x000000000049a145 : fmul dword ptr [rcx + 9] ; ret 0x8de9
0x000000000049cbdb : fmul dword ptr [rcx + rdi - 0x39] ; jae 0x49cba9 ; mov rdx, rcx ; jmp 0x49cbc1
0x000000000045c5fb : fmul dword ptr [rdi] ; ret
0x000000000040161b : fmul dword ptr [rsi - 0x7cb7ff94] ; ret
0x000000000048a3e7 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x0000000000489a6c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000420d09 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004267bf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004a314c : fmul qword ptr [rip + 0xd6cfff9] ; stc ; call qword ptr [rdx]
0x000000000048e612 : fmul st(0) ; ret
0x000000000048e590 : fmulp st(1) ; ret
0x00000000004ba64a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf -0x51ce
0x000000000040dc05 : fpatan ; ret
0x00000000004c7e01 : frndint ; call qword ptr [rax]
0x000000000042e951 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b8ae7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b8e60 : fstp st(0) ; ret 0xde5d
0x00000000004b802b : fstp st(3), st(0) ; retf -0x147d
0x000000000040dc88 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042ec51 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000437824 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004ba418 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000047c072 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x000000000043d0cb : fsub qword ptr [rsi + 0xf] ; jmp 0x43d097
0x000000000042ea51 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000420a9c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000043f6c2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004411cb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000004415ca : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440c38 : fsubp st(0) ; ret 0xffe8
0x0000000000440b38 : fsubp st(0) ; ret 0xffe9
0x0000000000440730 : fsubp st(0) ; retf -0x13
0x00000000004bab38 : fucom st(5) ; loop 0x4bab91 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047e5b5 : fucomi st(1) ; ret
0x000000000041ed08 : fucomp st(0) ; retf
0x000000000044d3b7 : fucompi st(0) ; ret
0x000000000049fab8 : fucompi st(0) ; ret 0xf7da
0x0000000000418e68 : fucompi st(0) ; ret 0xfff1
0x00000000004624af : fucompi st(0) ; retf
0x0000000000418130 : fucompi st(0) ; retf -0x6b
0x000000000045e960 : fucompi st(0) ; retf 0x72
0x0000000000444f92 : fucompi st(3) ; ret
0x00000000004677c6 : fucompp ; ret 0xfffe
0x00000000004ba17e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a3214 : hlt ; adc al, 0xf9 ; push qword ptr [rsp + rdx - 7] ; jmp rsp
0x0000000000494419 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e1c0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000495319 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000441c2b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bdfb2 : hlt ; call qword ptr [rax]
0x00000000004bddd2 : hlt ; call qword ptr [rdx]
0x00000000004a331d : hlt ; clc ; call qword ptr [rax + 0x10fff8f5]
0x00000000004a335d : hlt ; clc ; call qword ptr [rax]
0x00000000004c14bc : hlt ; cmp dword ptr [rax], eax ; add al, al ; sal bh, 0xff ; retf 2
0x000000000044a08e : hlt ; jmp 0x44a05e
0x000000000048a06f : hlt ; jmp 0x48a076
0x00000000004b8ee8 : hlt ; jmp 0x4b8ebd
0x000000000043408a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004311ee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043e02f : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043c7c3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004bf1f1 : hlt ; ret
0x0000000000441388 : hlt ; sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b9023 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043c7c7 : hlt ; sub eax, edx ; ret
0x00000000004c6dbc : hlt ; xchg eax, edx ; add byte ptr [rax], al ; jo 0x4c6e01 ; sti ; jmp qword ptr [rdx]
0x00000000004a3361 : idiv al ; call qword ptr [rax + 0x10fff8f7]
0x00000000004c0eea : idiv bh ; ret
0x000000000043e17d : idiv byte ptr [rax + 2] ; syscall
0x000000000044c1df : idiv byte ptr [rdi + 0x4a5788] ; mov eax, ecx ; syscall
0x00000000004016d6 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446316 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004a3325 : idiv eax ; call qword ptr [rax + 0x10fff8f8]
0x00000000004a3365 : idiv eax ; call qword ptr [rax]
0x00000000004a298e : idiv edi ; adc byte ptr [rax], cl ; clc ; call qword ptr [rax + 0x10fff809]
0x000000000049b0ff : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004a293a : idiv edi ; jo 0x4a2947 ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a2956 : idiv edi ; nop ; in eax, -9 ; call rax
0x000000000049f6db : idiv edi ; nop dword ptr [rax] ; ret
0x000000000049f698 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a2952 : idiv edi ; push rax ; in al, -9 ; call qword ptr [rax - 0x2f00081b]
0x00000000004a0098 : idiv edi ; ret
0x00000000004c14c2 : idiv edi ; retf 2
0x00000000004695be : imul byte ptr [rsi] ; add byte ptr [rax + 0x39], cl ; retf
0x000000000044130d : imul eax ; insd dword ptr [rdi], dx ; ret 0xfffd
0x0000000000443c27 : imul eax ; ret
0x000000000046aaf8 : imul eax ; ret 0xfff8
0x0000000000409faf : imul eax ; retf
0x00000000004411e5 : imul eax ; xchg eax, ebp ; ret
0x000000000044aaed : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043b321 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000004246e7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x00000000004240e7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000004469cb : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000443919 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x000000000049faaf : imul ebx, dword ptr [rax], -0x18 ; retf -0x826
0x000000000047c43f : imul ecx ; ret
0x00000000004131b4 : imul ecx, dword ptr [rax + 0x63], -0x2f ; mov eax, 2 ; syscall
0x000000000041cb19 : imul ecx, dword ptr [rax - 0x73], 0x39481048 ; retf 0x1373
0x00000000004c39b5 : imul ecx, dword ptr [rdx], 0x4a08070c ; or eax, dword ptr [rdx] ; retf
0x0000000000423de7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004bd520 : imul ecx, edx, -3 ; inc ecx ; retf -3
0x0000000000441611 : imul edi, dword ptr [rdi + 0x1f0ffffd], 0 ; ret
0x00000000004237e7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x00000000004234e7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x00000000004231e7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x00000000004669a4 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x00000000004972b4 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000043a79c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000043406a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000425dab : in al, -0xd ; ret
0x00000000004c4049 : in al, -7 ; jmp rax
0x00000000004a2d5d : in al, -8 ; jmp qword ptr [rax]
0x00000000004a2955 : in al, -9 ; call qword ptr [rax - 0x2f00081b]
0x0000000000403946 : in al, 0x4c ; mov edi, esp ; mov eax, 3 ; syscall
0x00000000004ba461 : in al, 0x4c ; pop rax ; retf
0x0000000000422e1c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043d758 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004855fa : in al, 0xf ; lahf ; ret 0x2941
0x00000000004571f8 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00000000004bdfac : in al, 4 ; add byte ptr [rax], al ; nop ; insd dword ptr [rdi], dx ; hlt ; call qword ptr [rax]
0x00000000004159be : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; clc ; ret
0x00000000004452bc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; cli ; retf -1
0x000000000040520f : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x0000000000451023 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000045121c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf -0xf5
0x000000000041beec : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x25e
0x000000000041431c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x2da
0x0000000000473e15 : in al, dx ; add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004226d0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004a2d0d : in al, dx ; clc ; call qword ptr [rax]
0x0000000000491089 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004418a4 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x00000000004311ea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043446a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000464bb7 : in al, dx ; or al, ch ; ret 1
0x000000000041c217 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046cd2b : in al, dx ; or byte ptr [rbx + rcx*4 + 0x2d], al ; ret 0x25
0x000000000047dedf : in al, dx ; push -0x37fa74b8 ; ret 0x24
0x00000000004ba64d : in al, dx ; retf -0x51ce
0x00000000004bd5a0 : in al, dx ; sar ebp, cl ; ljmp ptr [rsp + rdx*8] ; std ; call rsp
0x000000000049c199 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004c4311 : in al, dx ; stc ; call qword ptr [rsi]
0x00000000004ba57e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4ba511 ; ret 0x48f
0x00000000004ba57d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4ba512 ; ret 0x48f
0x00000000004b8cda : in eax, -0x1b ; retf 0x2a91
0x00000000004bab39 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000459f6b : in eax, -0x21 ; loopne 0x459efc ; ret 0xe680
0x00000000004bd990 : in eax, -0x2b ; std ; call rdx
0x00000000004340ea : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042b8ca : in eax, -0xd ; ret
0x0000000000468494 : in eax, -1 ; dec dword ptr [rbx + 0x50bf1443] ; ret 0x6c
0x00000000004ba001 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a2959 : in eax, -9 ; call rax
0x000000000043e248 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004b8c83 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000466afa : in eax, 0x29 ; retf -0x72bf
0x0000000000425e6a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000451882 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b7f19 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000465e23 : in eax, 0xf ; je 0x465e48 ; add rax, 2 ; ret
0x000000000043f4ef : in eax, dx ; add byte ptr [r8], r8b ; ret
0x000000000045bcc3 : in eax, dx ; add byte ptr es:[rax + 0x63], cl ; retf -0x76b8
0x000000000048a3d1 : in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf -0x7cb8
0x000000000041edf3 : in eax, dx ; call 0x42b853
0x000000000049e25f : in eax, dx ; jne 0x49e241 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043cfe2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004b8245 : in eax, dx ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b82b6 ; salc ; retf
0x0000000000430ffa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004344ea : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000494e20 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004783db : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047dae2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000049e442 : in eax, dx ; pop rbx ; ret
0x0000000000414a92 : in eax, dx ; ret
0x000000000041d4ef : in eax, dx ; ret 0x2a
0x00000000004b8a58 : in eax, dx ; retf
0x000000000043d132 : in eax, dx ; sub rax, 1 ; ret
0x000000000049c2dd : in eax, dx ; xor eax, eax ; ret
0x000000000043d3f8 : inc bl ; cmp dl, 1 ; jb 0x43d40a ; mov byte ptr [rdi], cl ; ret
0x0000000000431ec6 : inc bl ; jb 0x431ed6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000425dd1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000414f02 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000045d7ca : inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x000000000044cb96 : inc byte ptr [rbx] ; je 0x44cba5 ; pop rbx ; ret
0x00000000004bc4e1 : inc byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a2dab : inc dword ptr [rax + 0x10fff8eb] ; fdivp st(0) ; call rax
0x00000000004a2ecb : inc dword ptr [rax + 0x18] ; stc ; call rsi
0x00000000004a30a3 : inc dword ptr [rax + 0x1c] ; stc ; call rax
0x000000000049a987 : inc dword ptr [rax + 0x63491ffa] ; ret 0x8b48
0x00000000004bd3ab : inc dword ptr [rax + 0x6c] ; std ; jmp qword ptr [rax]
0x00000000004bd3cb : inc dword ptr [rax + 0x7b] ; std ; jmp qword ptr [rax]
0x00000000004a2a57 : inc dword ptr [rax + 0x7c] ; clc ; call qword ptr [rax - 0x1f000783]
0x00000000004a293f : inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a2dcb : inc dword ptr [rax - 0x15] ; clc ; call rax
0x00000000004a2dc7 : inc dword ptr [rax - 0x17] ; clc ; inc dword ptr [rax - 0x15] ; clc ; call rax
0x00000000004a2d5b : inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004bd4c7 : inc dword ptr [rax - 0x1f00023e] ; ret 0xfffd
0x00000000004a2df3 : inc dword ptr [rax - 0x21] ; clc ; call qword ptr [rax]
0x00000000004a2e6f : inc dword ptr [rax - 0x2e] ; clc ; call qword ptr [rax - 0x1f00072d]
0x00000000004bd427 : inc dword ptr [rax - 0x2f0002bc] ; std ; jmp qword ptr [rax]
0x00000000004a2e7f : inc dword ptr [rax - 0x2f000729] ; fdivr st(0) ; jmp qword ptr [rax]
0x00000000004a2e2b : inc dword ptr [rax - 0x2f000730] ; sar eax, 1 ; jmp qword ptr [rax]
0x00000000004a2e1b : inc dword ptr [rax - 0x35] ; clc ; call qword ptr [rax - 0x1f000734]
0x00000000004a2e4f : inc dword ptr [rax - 0x3a] ; clc ; call qword ptr [rax]
0x00000000004a2cc3 : inc dword ptr [rax - 0x3d] ; clc ; jmp rax
0x0000000000452b2a : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x0000000000454cdc : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004bd9f7 : inc dword ptr [rax - 0x6f0001fd] ; add edi, esi ; call qword ptr [rax]
0x00000000004a2d07 : inc dword ptr [rax - 0x7f000716] ; in al, dx ; clc ; call qword ptr [rax]
0x000000000045f8a3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000452f9c : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; retf -6
0x000000000042f167 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a2a8f : inc dword ptr [rax] ; cmp al, 0xf8 ; call qword ptr [rax]
0x00000000004a294b : inc dword ptr [rax] ; div edi ; call qword ptr [rax]
0x00000000004a3437 : inc dword ptr [rax] ; ja 0x4a3438 ; jmp qword ptr [rax]
0x00000000004a3413 : inc dword ptr [rax] ; jbe 0x4a3414 ; jmp qword ptr [rax]
0x00000000004bd3d3 : inc dword ptr [rax] ; jg 0x4bd3d8 ; jmp rax
0x00000000004a348f : inc dword ptr [rax] ; jl 0x4a3490 ; call qword ptr [rax]
0x00000000004a33d3 : inc dword ptr [rax] ; jne 0x4a33d4 ; call qword ptr [rax]
0x00000000004a3467 : inc dword ptr [rax] ; jnp 0x4a3468 ; call qword ptr [rax]
0x00000000004bd3b3 : inc dword ptr [rax] ; jo 0x4bd3b8 ; jmp rax
0x00000000004a2cd3 : inc dword ptr [rax] ; loope 0x4a2cd3 ; jmp rax
0x00000000004a2b6f : inc dword ptr [rax] ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004a2ebb : inc dword ptr [rax] ; sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x0000000000460156 : inc dword ptr [rbp + 0x29] ; retf
0x000000000047c645 : inc dword ptr [rbp + 0x31] ; dec dword ptr [rax - 0x77] ; retf
0x0000000000470a4f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000472c60 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045aa70 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45aaf5 ; ret
0x000000000045fc97 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d61a : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049c774 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044db27 : inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000457d7f : inc dword ptr [rbx - 0x7af00008] ; retf -3
0x0000000000467e0c : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x00000000004076d2 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000040a752 : inc dword ptr [rbx - 0x7bf0fe08] ; retf
0x000000000043dabf : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043d9ef : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004437b4 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf -0x1540
0x000000000045d969 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000045d7c7 : inc dword ptr [rcx + 1] ; inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x00000000004a303f : inc dword ptr [rcx + rbx - 7] ; call rsp
0x0000000000477080 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000047e0b3 : inc dword ptr [rcx + rdi + 0x4d] ; mov eax, 0x89459673 ; retf
0x000000000047f217 : inc dword ptr [rcx - 0x43] ; ret
0x0000000000486614 : inc dword ptr [rcx - 0x77] ; cmc ; jmp 0x4865e9
0x000000000044db2a : inc dword ptr [rcx - 0x77] ; ret
0x0000000000413a55 : inc dword ptr [rcx - 0x7f] ; retf 0
0x0000000000413bf5 : inc dword ptr [rcx - 0x80] ; retf -0x1680
0x0000000000413baa : inc dword ptr [rcx - 0x80] ; retf 0x4d80
0x00000000004a2bd3 : inc dword ptr [rcx] ; mov esp, 0xbcd1fff8 ; clc ; call rcx
0x00000000004c8a6e : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004a2bff : inc dword ptr [rcx] ; ret
0x000000000048a919 : inc dword ptr [rdi + rcx + 0x44] ; retf -0x8bf
0x000000000047f520 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a2f77 : inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a2f67 : inc dword ptr [rdx] ; sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x000000000042b1cd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a2ed3 : inc dword ptr [rsi + 0x1e] ; stc ; call rsi
0x000000000049c249 : inc dword ptr [rsi*2 + 0x8b810] ; add byte ptr [rax], al ; ret
0x00000000004a2f03 : inc dword ptr [rsi] ; sbb ecx, edi ; call qword ptr [rsi + 0x26fff918]
0x00000000004a342f : inc eax ; jbe 0x4a3430 ; jmp rax
0x00000000004a3403 : inc eax ; jne 0x4a3404 ; call rax
0x00000000004a345b : inc eax ; jp 0x4a345c ; call rax
0x00000000004a2abf : inc eax ; push rsp ; clc ; call rax
0x00000000004bd4a7 : inc eax ; ret 0xfffd
0x00000000004bd437 : inc eax ; std ; call qword ptr [rax]
0x00000000004a2a77 : inc eax ; xchg al, bh ; call qword ptr [rax]
0x00000000004645bc : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043ccb9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412b28 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000004770bb : inc ebx ; sub eax, edx ; ret
0x00000000004bd523 : inc ecx ; retf -3
0x000000000045fa52 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004a2f57 : inc edx ; sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x0000000000480a26 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000483a56 : inc esi ; add dh, byte ptr [rax] ; jmp 0x4804f3
0x00000000004a2c37 : inc esi ; sar eax, -1 ; push rsi ; ret 0xfff8
0x0000000000402c9b : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x000000000041cc67 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf -0x76b4
0x00000000004878f6 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x0000000000401461 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000442b83 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000040161d : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004704f5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000442ac9 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x0000000000442af6 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x000000000041b85a : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8349
0x000000000047a5f6 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047b471 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x000000000049108b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044edba : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004bfd34 : insb byte ptr [rdi], dx ; and al, byte ptr [rax] ; add al, bh ; outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rsi]
0x0000000000475f72 : insb byte ptr [rdi], dx ; and eax, 0x38754000 ; ret
0x00000000004bfe34 : insb byte ptr [rdi], dx ; and eax, dword ptr [rax] ; add byte ptr [rax], ch ; jno 0x4bfe37 ; jmp qword ptr [rax]
0x00000000004bfbe9 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rax]
0x00000000004c1534 : insb byte ptr [rdi], dx ; cmp al, byte ptr [rax] ; add byte ptr [rax], bl ; ret
0x00000000004bab3e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c5a34 : insb byte ptr [rdi], dx ; jg 0x4c5a3e ; add byte ptr [rax], ch ; mov edi, edx ; call rsi
0x00000000004783a0 : insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004b9f06 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x00000000004bd3ad : insb byte ptr [rdi], dx ; std ; jmp qword ptr [rax]
0x00000000004946a0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004955a0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462271 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bdfb1 : insd dword ptr [rdi], dx ; hlt ; call qword ptr [rax]
0x00000000004bab3f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000043e86f : insd dword ptr [rdi], dx ; push rdx ; add byte ptr [rax], al ; ret
0x00000000004b8eed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x000000000044130f : insd dword ptr [rdi], dx ; ret 0xfffd
0x00000000004b9dff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478283 : int 0x48
0x00000000004ba45b : int 0x66
0x0000000000443d7f : int 0x7a
0x00000000004b9fc7 : int 0x80
0x00000000004c14e1 : int 0xa
0x000000000044ae6f : int 0xf
0x00000000004880cf : int 0xfc
0x000000000041b6ab : int1 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x418179
0x0000000000425c81 : int1 ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000459b96 : int1 ; add eax, r8d ; ret
0x00000000004440fc : int1 ; call rbx
0x00000000004a3315 : int1 ; clc ; call qword ptr [rax + 0x10fff8f2]
0x00000000004a3355 : int1 ; clc ; call qword ptr [rax]
0x00000000004735f4 : int1 ; cmp rcx, rdx ; jne 0x4735d7 ; ret
0x000000000043d37b : int1 ; jl 0x43d3cc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d39c : int1 ; jl 0x43d3ed ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d3af : int1 ; jl 0x43d400 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d484 : int1 ; jl 0x43d4d5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d4dc : int1 ; jl 0x43d52d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043d579 : int1 ; jl 0x43d5ca ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000480333 : int1 ; jmp 0x4802fa
0x0000000000480332 : int1 ; jmp 0x4802fb
0x000000000049991f : int1 ; jmp rcx
0x00000000004b9dc4 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x0000000000433edb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004317bf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043c793 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004702f5 : int1 ; or byte ptr [rax + 0x39], cl ; retf -0x7bf1
0x000000000043dac2 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004ba516 : int1 ; ret 0x5803
0x000000000043c797 : int1 ; sub eax, edx ; ret
0x00000000004c0759 : iretd ; cmc ; call rdx
0x000000000041a48d : iretd ; mov eax, 3 ; syscall
0x000000000041a461 : iretd ; mov eax, r8d ; syscall
0x000000000040dc5e : ja 0x40dc83 ; ret
0x0000000000425d32 : ja 0x425d43 ; ret
0x000000000042b858 : ja 0x42b852 ; ret 0x7401
0x00000000004352a3 : ja 0x4352a7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043a8e7 : ja 0x43a8ed ; ret
0x000000000043a903 : ja 0x43a90d ; mov dword ptr [rdi], ecx ; ret
0x000000000043a944 : ja 0x43a953 ; mov qword ptr [rdi], rcx ; ret
0x000000000043a9c9 : ja 0x43a9dd ; ret
0x000000000043aa1f : ja 0x43aa37 ; ret
0x000000000043aaa1 : ja 0x43aabd ; ret
0x000000000043af07 : ja 0x43af11 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043af23 : ja 0x43af31 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043af74 : ja 0x43af87 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b059 : ja 0x43b071 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b0cf : ja 0x43b0eb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b151 : ja 0x43b171 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043e02d : ja 0x43e059 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043e8cb : ja 0x43e8d3 ; ret
0x000000000043e91a : ja 0x43e923 ; ret
0x000000000043eaa9 : ja 0x43eae3 ; ret
0x000000000043eb4d : ja 0x43eb97 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044f0e6 : ja 0x44f0f3 ; ret
0x0000000000459b87 : ja 0x459b6e ; mov eax, r8d ; ret
0x0000000000469f7d : ja 0x469f8b ; pop rbx ; ret
0x000000000046a30b : ja 0x46a313 ; ret
0x000000000046a360 : ja 0x46a36b ; ret
0x000000000046a510 : ja 0x46a53b ; ret
0x00000000004765c5 : ja 0x4765ef ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000476bb5 : ja 0x476bdf ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000476f51 : ja 0x476f7b ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x00000000004786fe : ja 0x478750 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004842f4 : ja 0x484281 ; ret 0x348
0x0000000000486c6b : ja 0x486bf8 ; ret 0x348
0x000000000048a06d : ja 0x488c6e ; jmp 0x48a047
0x000000000048d2a5 : ja 0x48be8e ; jmp 0x48d27f
0x00000000004909ed : ja 0x48ecee ; jmp 0x4909c7
0x00000000004a3439 : ja 0x4a3436 ; jmp qword ptr [rax]
0x00000000004ba584 : ja 0x4ba50b ; ret 0x48f
0x00000000004c2d49 : ja 0x4c2d45 ; call qword ptr [rcx]
0x0000000000412f78 : jae 0x412f85 ; movzx eax, byte ptr [rax] ; ret
0x000000000041684b : jae 0x416875 ; movzx eax, byte ptr [rax] ; ret
0x000000000043f709 : jae 0x43f6f0 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044369c : jae 0x443629 ; retf -0x72b8
0x00000000004438c4 : jae 0x4438a7 ; mov eax, 1 ; ret
0x000000000043e86d : jae 0x443ae6 ; ret
0x0000000000473d1b : jae 0x473cc5 ; xor eax, eax ; ret
0x000000000049cbdf : jae 0x49cba5 ; mov rdx, rcx ; jmp 0x49cbbd
0x00000000004b8b42 : jae 0x4b8b24 ; jo 0x4b8bc0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004b99de : jae 0x4b99b9 ; push rsi ; pop rdx ; je 0x4b99ae ; ret 0xacfc
0x00000000004be7c9 : jae 0x4be7e1 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c44f7 : jae 0x4c4505 ; ret
0x000000000041d355 : jb 0x41d337 ; mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x000000000042f7ca : jb 0x42f7da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f91a : jb 0x42f92a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fa6a : jb 0x42fa7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fbba : jb 0x42fbca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fd0a : jb 0x42fd1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fe5a : jb 0x42fe6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ffaa : jb 0x42ffba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004300fa : jb 0x43010a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043024a : jb 0x43025a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043039a : jb 0x4303aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004304ea : jb 0x4304fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043063a : jb 0x43064a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043078a : jb 0x43079a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004308da : jb 0x4308ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a2a : jb 0x430a3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431dc1 : jb 0x431daa ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000431e24 : jb 0x431e0d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x0000000000431ec8 : jb 0x431ed4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000434e7e : jb 0x434e8a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043d267 : jb 0x43d277 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043d273 : jb 0x43d289 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043d283 : jb 0x43d28b ; mov byte ptr [rdi], cl ; ret
0x000000000043d3e5 : jb 0x43d3f4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043d3f0 : jb 0x43d403 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043d3fd : jb 0x43d405 ; mov byte ptr [rdi], cl ; ret
0x000000000046430c : jb 0x464305 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004a2a41 : jb 0x4a2a3d ; call rax
0x00000000004ba198 : jb 0x4ba1f2 ; call 0x4c15cb57
0x0000000000401468 : jbe 0x40147c ; syscall
0x0000000000414c9b : jbe 0x414c3b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000425676 : jbe 0x4256b5 ; add rax, rdi ; ret
0x0000000000425686 : jbe 0x4256b7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000425696 : jbe 0x4256b7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004256a6 : jbe 0x4256b7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042b8c3 : jbe 0x42b8de ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x42b8b9 ; ret
0x000000000045a352 : jbe 0x45a2df ; ret 0x8166
0x000000000046383a : jbe 0x4637b0 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047790f : jbe 0x47791a ; ret
0x000000000049d3d6 : jbe 0x49d3e8 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a2c44 : jbe 0x4a2c0c ; clc ; call qword ptr [rsi]
0x00000000004a3415 : jbe 0x4a3412 ; jmp qword ptr [rax]
0x00000000004a342d : jbe 0x4a342e ; inc eax ; jbe 0x4a3432 ; jmp rax
0x00000000004a3431 : jbe 0x4a342e ; jmp rax
0x00000000004a3435 : jbe 0x4a3436 ; inc dword ptr [rax] ; ja 0x4a343a ; jmp qword ptr [rax]
0x00000000004ba41c : jbe 0x4ba3ef ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004ba41b : jbe 0x4ba3f0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4bdac8 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400c64 : je 0x400c92 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x00000000004016d3 : je 0x4016e7 ; xor esi, esi ; mov edi, 1 ; call rax
0x0000000000402219 : je 0x40222d ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402465 : je 0x402479 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402d44 : je 0x402d54 ; mov edi, 0x6cb060 ; call rax
0x0000000000402f93 : je 0x402fad ; mov edi, 0x6cafe0 ; call rax
0x0000000000403187 : je 0x4031a1 ; mov edi, 0x6cafe0 ; call rax
0x00000000004035a2 : je 0x4035b2 ; mov edi, 0x6cb0a0 ; call rax
0x00000000004035ea : je 0x4035fc ; mov edi, 0x6cb0a0 ; call r15
0x00000000004036ea : je 0x4036fa ; mov edi, 0x6cb0a0 ; call rax
0x000000000040f90e : je 0x40f91d ; mov eax, edx ; pop rbx ; ret
0x0000000000410b17 : je 0x410b28 ; call 0x41d584
0x0000000000412b04 : je 0x412b40 ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000041408b : je 0x414031 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414c63 : je 0x414c1d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414dd3 : je 0x414d8d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414f45 : je 0x414f52 ; ret
0x0000000000414f77 : je 0x414f86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415a9a : je 0x415aa5 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004178cd : je 0x417a8c ; mov rdx, rax ; jmp 0x4178f8
0x0000000000417e0a : je 0x417e11 ; pop rbx ; ret
0x0000000000417ee7 : je 0x417eed ; call rax
0x0000000000418a34 : je 0x418a41 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a45c : je 0x41a48b ; xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x000000000041d662 : je 0x41d68b ; call rax
0x000000000041e052 : je 0x41e07e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041e5e8 : je 0x41e5ee ; call rax
0x00000000004205f9 : je 0x420602 ; ret
0x0000000000420882 : je 0x420897 ; mov eax, 0x16 ; ret
0x00000000004208d1 : je 0x4208e3 ; lea rax, qword ptr [rip + 0x1a966] ; ret
0x0000000000422003 : je 0x421fcd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000422cd5 : je 0x422cdd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000422d44 : je 0x422d56 ; lea rax, qword ptr [rip + 0x14853] ; ret
0x0000000000422eb4 : je 0x422ebe ; bsf eax, edx ; ret
0x0000000000422eb4 : je 0x422ebf ; bsf eax, edx ; ret
0x0000000000422f5d : je 0x422f75 ; bsf rax, rdx ; ret
0x0000000000422f5d : je 0x422f76 ; bsf rax, rdx ; ret
0x0000000000422efc : je 0x422f89 ; bsf rax, rdx ; ret
0x0000000000424c2b : je 0x424c56 ; sub byte ptr [rax - 0x77], cl ; retf
0x000000000042556c : je 0x4255c3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004256de : je 0x4256f1 ; lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000425cc0 : je 0x425cd2 ; lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000426274 : je 0x426286 ; lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000428743 : je 0x42870d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042a2d3 : je 0x42a29d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042c39a : je 0x42c3f1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c451 : je 0x42c469 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000042eec7 : je 0x42eed1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d9fd : je 0x43d9c6 ; movzx eax, dl ; pop rbx ; ret
0x000000000043d9d5 : je 0x43d9c8 ; movzx eax, cl ; pop rbx ; ret
0x000000000043d9fd : je 0x43d9c8 ; movzx eax, dl ; pop rbx ; ret
0x000000000043db0e : je 0x43db1c ; xor eax, eax ; ret
0x000000000043db09 : je 0x43db29 ; cmp eax, 2 ; je 0x43db21 ; xor eax, eax ; ret
0x000000000043db5d : je 0x43db43 ; ret
0x000000000043dc48 : je 0x43dc58 ; mov edi, 0x6cc0a0 ; call rax
0x000000000043dc60 : je 0x43dc70 ; mov edi, 0x6cc0a0 ; call rax
0x000000000043dfc0 : je 0x43dfa1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043e968 : je 0x43e9bf ; add byte ptr [rax], al ; ret
0x000000000043f38a : je 0x43f391 ; ret
0x00000000004406d0 : je 0x4406e2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000441e39 : je 0x441e3e ; ret
0x0000000000441e9d : je 0x441ea2 ; ret
0x00000000004435d3 : je 0x4435e3 ; mov edi, 0x6ca140 ; call rax
0x0000000000443761 : je 0x443771 ; mov edi, 0x6ca140 ; call rax
0x00000000004438e8 : je 0x4438f2 ; ret
0x0000000000443904 : je 0x443919 ; mov dword ptr [rip + 0x28568c], edx ; pop rbx ; ret
0x00000000004440f7 : je 0x444123 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000004481f4 : je 0x448223 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044cb98 : je 0x44cba3 ; pop rbx ; ret
0x000000000044cb93 : je 0x44cba8 ; cmp esi, 3 ; je 0x44cba8 ; pop rbx ; ret
0x000000000044d120 : je 0x44d130 ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d14f : je 0x44d167 ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d250 : je 0x44d256 ; call rax
0x000000000044d2af : je 0x44d2bf ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d428 : je 0x44d43f ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d708 : je 0x44d718 ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d80c : je 0x44d812 ; call rax
0x000000000044e6cb : je 0x44e6d1 ; call rax
0x000000000044ec8b : je 0x44ec93 ; ret
0x0000000000450262 : je 0x45028f ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000004512d6 : je 0x4512ec ; call 0x41d584
0x00000000004625e8 : je 0x462612 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463276 : je 0x4632c6 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463275 : je 0x4632c7 ; add esp, 0x20 ; pop rbx ; ret
0x000000000046405c : je 0x464062 ; ret
0x000000000046408a : je 0x4640ec ; pop rbp ; pop r12 ; ret
0x000000000046412f : je 0x464191 ; pop rbp ; pop r12 ; ret
0x000000000046426d : je 0x464278 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004642b1 : je 0x4642bc ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464e8c : je 0x464eb5 ; bsf rax, rdx ; ret
0x0000000000464e8c : je 0x464eb6 ; bsf rax, rdx ; ret
0x0000000000464e1c : je 0x464ec9 ; bsf rax, rdx ; ret
0x0000000000465e09 : je 0x465e29 ; mov cl, dl ; and cl, 0xf ; je 0x465e39 ; ret
0x0000000000465e10 : je 0x465e32 ; ret
0x0000000000465e25 : je 0x465e46 ; add rax, 2 ; ret
0x00000000004661ab : je 0x4661d4 ; call rbx
0x0000000000466253 : je 0x46627c ; call rbx
0x00000000004663a0 : je 0x4663cf ; and byte ptr [rbp - 0x73], cl ; jl 0x466337 ; add al, 0xe8 ; ret
0x0000000000466638 : je 0x466645 ; test edx, edx ; jne 0x466637 ; ret
0x0000000000466637 : je 0x466646 ; test edx, edx ; jne 0x466638 ; ret
0x000000000046a022 : je 0x46a040 ; xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf -0x7cb8
0x000000000046a895 : je 0x46a884 ; ret
0x000000000046d37a : je 0x46d304 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470484 : je 0x470494 ; mov edi, 0x6ca100 ; call rax
0x0000000000474478 : je 0x474488 ; mov edi, 0x6ca140 ; call rax
0x00000000004744a0 : je 0x4744b0 ; mov edi, 0x6ca140 ; call rax
0x0000000000474516 : je 0x474526 ; mov edi, 0x6ca140 ; call rax
0x0000000000475a3b : je 0x475a4f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000475a5e : je 0x475aaa ; shl rdx, 5 ; add rdx, rax ; jmp 0x475a81
0x000000000047602c : je 0x476051 ; pop rbx ; mov edi, 0x6ca140 ; jmp rax
0x0000000000475fe3 : je 0x476057 ; mov edi, 0x6ca140 ; call rax
0x0000000000476047 : je 0x4760b0 ; pop rbx ; ret
0x0000000000476184 : je 0x47618b ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047637f : je 0x476386 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047799e : je 0x477969 ; mov edi, 0x6ca140 ; call rax
0x000000000047797f : je 0x4779ad ; or byte ptr [rdi + 0x6ca140], bh ; call rax
0x0000000000477ae6 : je 0x477af2 ; ret
0x0000000000477afc : je 0x477b0c ; mov edi, 0x6ca140 ; call rax
0x0000000000479f4a : je 0x479f55 ; mov eax, edx ; pop rbx ; ret
0x000000000047a842 : je 0x47a856 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b4ac : je 0x47b4db ; js 0x47b501 ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047df18 : je 0x47df28 ; mov edi, 0x6ca140 ; call rax
0x000000000047df44 : je 0x47df54 ; mov edi, 0x6ca140 ; call rax
0x000000000047e1ea : je 0x47e1fe ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000486f1b : je 0x486ea8 ; ret 0x348
0x000000000048769b : je 0x4876ab ; mov edi, 0x6ca140 ; call rax
0x00000000004876c2 : je 0x4876d2 ; mov edi, 0x6ca140 ; call rax
0x0000000000487741 : je 0x487751 ; mov edi, 0x6ca140 ; call rax
0x000000000048776a : je 0x48777a ; mov edi, 0x6ca140 ; call rax
0x00000000004938a3 : je 0x49386d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000495853 : je 0x49581d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000499685 : je 0x499663 ; ret
0x000000000049aa00 : je 0x49aa2b ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000049b928 : je 0x49b912 ; add rsp, 0x18 ; ret
0x000000000049b911 : je 0x49b949 ; add rsp, 0x18 ; ret
0x000000000049b9b8 : je 0x49b998 ; ret
0x000000000049ba18 : je 0x49b9f7 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000049d7f3 : je 0x49d804 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d809 ; ret
0x000000000049d9ad : je 0x49da0f ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049de28 : je 0x49de33 ; ret
0x000000000049e08a : je 0x49e09a ; mov edi, 0x6ca100 ; call rax
0x000000000049e14b : je 0x49e15b ; mov edi, 0x6ca100 ; call rax
0x000000000049feae : je 0x49feb9 ; call rax
0x00000000004a3218 : je 0x4a3231 ; stc ; jmp rsp
0x00000000004a33d1 : je 0x4a33d2 ; inc dword ptr [rax] ; jne 0x4a33d6 ; call qword ptr [rax]
0x00000000004b7f4c : je 0x4b7f7a ; push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004b8ca8 : je 0x4b8c73 ; xor al, 0xd8 ; ret
0x00000000004b8ee7 : je 0x4b8ee4 ; jmp 0x4b8ebe
0x00000000004b99e2 : je 0x4b99aa ; ret 0xacfc
0x00000000004be7c2 : je 0x4be7d0 ; ret
0x00000000004c1530 : je 0x4c153b ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, byte ptr [rax] ; add byte ptr [rax], bl ; ret
0x00000000004c383c : je 0x4c38a2 ; add byte ptr [rax], al ; adc bl, bl ; clc ; call qword ptr [rax]
0x00000000004c4f6d : je 0x4c4f75 ; add al, al ; and edx, edi ; jmp rdi
0x0000000000411ac2 : jg 0x411b3b ; mov eax, 3 ; syscall
0x0000000000412b08 : jg 0x412b7e ; xor eax, eax ; syscall
0x0000000000425d42 : jg 0x425d94 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000425da0 : jg 0x425dec ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x0000000000425e67 : jg 0x425e80 ; jne 0x425e57 ; mov rax, rdi ; ret
0x000000000042b8c7 : jg 0x42b8de ; jne 0x42b8b5 ; ret
0x00000000004313a9 : jg 0x4313fc ; ret
0x00000000004313f0 : jg 0x431440 ; mov ebx, 0x4f7f0ff3 ; retf
0x00000000004313f5 : jg 0x431448 ; retf
0x000000000043142f : jg 0x43147a ; ret
0x000000000043146f : jg 0x4314ba ; retf
0x00000000004315a9 : jg 0x4315fc ; ret 0x894c
0x00000000004315f0 : jg 0x431640 ; mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x00000000004315f5 : jg 0x431648 ; retf -0x76b4
0x000000000043162f : jg 0x43167a ; ret 0x894c
0x000000000043166b : jg 0x4316b6 ; retf -0x76b4
0x0000000000431dc0 : jg 0x431e3c ; loopne 0x431d91 ; jp 0x431e4d ; jp 0x431dc0 ; ret
0x0000000000431e6c : jg 0x431e7d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000433eb8 : jg 0x433f09 ; loope 0x433eb7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433f2f : jg 0x433f7a ; ret 0xff2
0x0000000000433f48 : jg 0x433f99 ; loop 0x433f47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433fbf : jg 0x43400a ; ret
0x0000000000433fd8 : jg 0x434029 ; jrcxz 0x433fd7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434068 : jg 0x4340b9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004340e8 : jg 0x434139 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434168 : jg 0x4341b9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004341e8 : jg 0x434239 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434268 : jg 0x4342b9 ; call 0x4fc2526a
0x00000000004342e8 : jg 0x434339 ; jmp 0x4fc252ea
0x0000000000434345 : jg 0x434395 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043434f : jg 0x43439a ; retf 0xff2
0x00000000004343c5 : jg 0x434415 ; mov ebx, 0x46f00ff2 ; retf
0x00000000004343cf : jg 0x43441a ; retf
0x0000000000434468 : jg 0x4344b9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004344e8 : jg 0x434539 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434578 : jg 0x4345c9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004345f8 : jg 0x434649 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043466c : jg 0x434677 ; ret
0x00000000004346c6 : jg 0x4346d9 ; ret
0x00000000004346c1 : jg 0x434711 ; psllq mm1, qword ptr [rdi] ; jg 0x4346de ; ret
0x0000000000434736 : jg 0x434749 ; ret
0x00000000004347a6 : jg 0x4347b9 ; ret
0x00000000004347a1 : jg 0x4347f1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000434816 : jg 0x434829 ; ret
0x0000000000434811 : jg 0x434861 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434886 : jg 0x434899 ; ret
0x0000000000434881 : jg 0x4348d1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004348f6 : jg 0x434909 ; ret
0x00000000004348f1 : jg 0x434941 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434966 : jg 0x434979 ; ret
0x0000000000434961 : jg 0x4349b1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004349d6 : jg 0x4349e9 ; ret
0x00000000004349d1 : jg 0x434a21 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434a46 : jg 0x434a59 ; ret
0x0000000000434ab6 : jg 0x434ac9 ; ret
0x0000000000434b26 : jg 0x434b39 ; ret
0x0000000000434b21 : jg 0x434b71 ; add eax, 0xf7f0ff3 ; ret
0x0000000000434b96 : jg 0x434ba9 ; ret
0x0000000000434b91 : jg 0x434be1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434c06 : jg 0x434c19 ; ret
0x0000000000434c01 : jg 0x434c51 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434c76 : jg 0x434c89 ; ret
0x0000000000434c71 : jg 0x434cc1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434ce6 : jg 0x434cf9 ; ret
0x0000000000434ce1 : jg 0x434d31 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434e24 : jg 0x434e35 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000434e38 : jg 0x434e49 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004352aa : jg 0x4352a6 ; ret
0x000000000043a9b6 : jg 0x43a9c1 ; ret
0x000000000043a9c6 : jg 0x43a9d4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043a9da : jg 0x43a9e9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043a9f9 : jg 0x43aa07 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aa09 : jg 0x43aa17 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043aa19 : jg 0x43aa2a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043aa3a : jg 0x43aa49 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043aa5a : jg 0x43aa69 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043aa7a : jg 0x43aa89 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043aa9a : jg 0x43aaac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043aadd : jg 0x43aaef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043aafd : jg 0x43ab0f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043ab1b : jg 0x43ab2b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043ab3b : jg 0x43ab4b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043ab5b : jg 0x43ab6b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043ab7b : jg 0x43ab8b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b046 : jg 0x43b055 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b056 : jg 0x43b068 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b089 : jg 0x43b09b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b0a9 : jg 0x43b0bb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b1cf : jg 0x43b22f ; or eax, 0x1c478d48 ; ret
0x000000000043d242 : jg 0x43d252 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043d2e3 : jg 0x43d334 ; loopne 0x43d338 ; sub eax, edx ; vzeroupper ; ret
0x000000000043d3c7 : jg 0x43d3d7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043d3bd : jg 0x43d3dd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043d990 : jg 0x43d9cd ; ret 0x2b77
0x000000000044930f : jg 0x44929c ; ret 0x5c77
0x000000000044db25 : jg 0x44db2a ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004765c9 : jg 0x4765f7 ; call r11
0x0000000000476bb9 : jg 0x476be7 ; call r11
0x0000000000476f55 : jg 0x476f83 ; call r11
0x000000000047e951 : jg 0x47e957 ; add byte ptr [rcx], bh ; ret
0x0000000000491064 : jg 0x491071 ; ret 0x5488
0x00000000004bd3d5 : jg 0x4bd3d6 ; jmp rax
0x00000000004c3e11 : jg 0x4c3e0e ; call rdx
0x00000000004c5a35 : jg 0x4c5a3d ; add byte ptr [rax], ch ; mov edi, edx ; call rsi
0x000000000040e07e : jge 0x40e083 ; call r14
0x000000000043ecbf : jge 0x43ecb1 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043f67b : jge 0x43f67f ; call rbx
0x000000000043f7a2 : jge 0x43f7a6 ; call rbx
0x000000000043f7b0 : jge 0x43f7b4 ; call rbx
0x000000000043f8e5 : jge 0x43f8e9 ; call rbx
0x000000000043fa55 : jge 0x43fa59 ; call rbx
0x000000000043fa63 : jge 0x43fa67 ; call rbx
0x000000000043feb6 : jge 0x43fe81 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441273 : jge 0x441277 ; call rbx
0x000000000044139b : jge 0x44139f ; call rbx
0x00000000004414de : jge 0x4414e2 ; call rbx
0x00000000004415df : jge 0x4415e3 ; call rbx
0x00000000004415fb : jge 0x4415ff ; call rbx
0x0000000000441956 : jge 0x441907 ; mov eax, 3 ; syscall
0x0000000000441a43 : jge 0x4419e4 ; mov eax, 3 ; syscall
0x0000000000453414 : jge 0x45344b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000465fe6 : jge 0x465feb ; call r12
0x000000000049bcaa : jge 0x49bca7 ; leave ; ret
0x000000000049bd47 : jge 0x49bd4a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049bddb : jge 0x49bdd8 ; leave ; ret
0x000000000049be27 : jge 0x49be2a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049bef0 : jge 0x49bef3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049bf7f : jge 0x49bf7c ; leave ; ret
0x000000000049bfd0 : jge 0x49bfd3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049e4b0 : jge 0x49e4c5 ; call r12
0x00000000004a2a5d : jge 0x4a2a59 ; jmp rax
0x00000000004a34c9 : jge 0x4a34c6 ; call rax
0x00000000004b7faa : jge 0x4b7f8b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004b98f4 : jge 0x4b9965 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bd3d1 : jge 0x4bd3d6 ; inc dword ptr [rax] ; jg 0x4bd3da ; jmp rax
0x00000000004c3d11 : jge 0x4c3d0e ; call rdi
0x00000000004c5895 : jge 0x4c589d ; add byte ptr [rax], cl ; jle 0x4c589b ; call rax
0x0000000000400c68 : jl 0x400c92 ; or al, 0x41 ; call rsp
0x0000000000400cbc : jl 0x400cea ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004114a5 : jl 0x4114d3 ; cmp byte ptr [rcx + rcx*4 - 0x12], cl ; call 0x41d748
0x0000000000413e3b : jl 0x413e86 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004165b6 : jl 0x4165e9 ; add al, ch ; ret 0x6a
0x000000000041aab5 : jl 0x41aae0 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041abec : jl 0x41ac17 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000434da4 : jl 0x434df3 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000434de0 : jl 0x434e2f ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000434fde : jl 0x43502d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435145 : jl 0x435194 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004352a7 : jl 0x4352f6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043d37c : jl 0x43d3cb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d39d : jl 0x43d3ec ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d3b0 : jl 0x43d3ff ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d485 : jl 0x43d4d4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043d4dd : jl 0x43d52c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043d57a : jl 0x43d5c9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043ead4 : jl 0x43eb00 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043ead4 : jl 0x43eb01 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043efea : jl 0x43f018 ; or byte ptr [rax + 0x101], bh ; syscall
0x000000000043f0a1 : jl 0x43f0cf ; or byte ptr [rax + 3], bh ; syscall
0x000000000043fb10 : jl 0x43fb3e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000446ac6 : jl 0x446af4 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447429 : jl 0x447457 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044780f : jl 0x44783d ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000004481f9 : jl 0x448223 ; call r15
0x00000000004485a0 : jl 0x4485ce ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004492b9 : jl 0x4492e7 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044a1c5 : jl 0x44a1f3 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044c778 : jl 0x44c7a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044f262 : jl 0x44f28d ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000451f6c : jl 0x451f97 ; and byte ptr [rax + 1], cl ; ret
0x0000000000458648 : jl 0x458612 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045a30b : jl 0x45a336 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000045c20c : jl 0x45c237 ; and byte ptr [rax + 1], cl ; ret
0x0000000000463fd5 : jl 0x463f71 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004663a5 : jl 0x466332 ; add al, 0xe8 ; ret
0x0000000000472c69 : jl 0x472c98 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047afdd : jl 0x47b007 ; js 0x47b026 ; call rsp
0x000000000047b2f2 : jl 0x47b31c ; js 0x47b33b ; call rsp
0x000000000047b4b1 : jl 0x47b4db ; js 0x47b4fa ; call rsp
0x000000000047b6b9 : jl 0x47b6e3 ; js 0x47b702 ; call rsp
0x000000000047ccb7 : jl 0x47cc83 ; adc byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000488e8e : jl 0x488eb9 ; or byte ptr [rax], al ; jne 0x488e63 ; jmp 0x488e6b
0x000000000048c0be : jl 0x48c0e9 ; adc byte ptr [rax], al ; jne 0x48c093 ; jmp 0x48c09b
0x000000000048d3b6 : jl 0x48d3e1 ; sbb byte ptr [rax + 0x63], cl ; retf
0x000000000049d4f2 : jl 0x49d4cf ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a2a59 : jl 0x4a2a59 ; call qword ptr [rax - 0x1f000783]
0x00000000004a2a58 : jl 0x4a2a5a ; call qword ptr [rax - 0x1f000783]
0x00000000004a3491 : jl 0x4a348e ; call qword ptr [rax]
0x00000000004a34a9 : jl 0x4a34a6 ; call rax
0x00000000004a34b1 : jl 0x4a34ae ; call qword ptr [rax]
0x00000000004a34ad : jl 0x4a34ae ; push rax ; jl 0x4a34b2 ; call qword ptr [rax]
0x00000000004b9af2 : jl 0x4b9b51 ; leave ; retf
0x00000000004bf544 : jl 0x4bf567 ; add byte ptr [rax], al ; mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x00000000004c2d44 : jl 0x4c2d9f ; add byte ptr [rax], al ; fdiv dword ptr [rdi - 8] ; call qword ptr [rcx]
0x00000000004c3b44 : jl 0x4c3bad ; add byte ptr [rax], al ; sub byte ptr [rax], bh ; stc ; call rdi
0x00000000004c4044 : jl 0x4c40b2 ; add byte ptr [rax], al ; sbb ah, ah ; stc ; jmp rax
0x00000000004c5644 : jl 0x4c56c8 ; add byte ptr [rax], al ; call 0xffffffffe54c50a5
0x00000000004c7844 : jl 0x4c77ea ; add byte ptr [rax], al ; call 0x134c745c
0x00000000004c8344 : jl 0x4c82f5 ; add byte ptr [rax], al ; sbb byte ptr [rdx], bh ; std ; call rcx
0x0000000000422efe : jle 0x422f07 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000422efe : jle 0x422f08 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000043226c : jle 0x43229c ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000044cbe2 : jle 0x44cbf5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000047c04d : jle 0x47c05b ; ret
0x00000000004b7fa2 : jle 0x4b7f3b ; xlatb ; retf -0x5e15
0x00000000004b9b65 : jle 0x4b9ba0 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004c5899 : jle 0x4c5897 ; call rax
0x0000000000420bdd : jmp 0x100c3529
0x0000000000420c86 : jmp 0x100c35d2
0x0000000000420dc6 : jmp 0x100c3712
0x0000000000420f06 : jmp 0x100c3852
0x0000000000421046 : jmp 0x100c3992
0x0000000000421186 : jmp 0x100c3ad2
0x00000000004212c6 : jmp 0x100c3c12
0x0000000000421406 : jmp 0x100c3d52
0x0000000000421546 : jmp 0x100c3e92
0x0000000000421686 : jmp 0x100c3fd2
0x00000000004217c6 : jmp 0x100c4112
0x0000000000421906 : jmp 0x100c4252
0x0000000000421a46 : jmp 0x100c4392
0x0000000000421b86 : jmp 0x100c44d2
0x0000000000421cc6 : jmp 0x100c4612
0x0000000000421e06 : jmp 0x100c4752
0x0000000000422029 : jmp 0x100c4975
0x00000000004220b6 : jmp 0x100c4a02
0x0000000000422186 : jmp 0x100c4ad2
0x0000000000422256 : jmp 0x100c4ba2
0x0000000000422316 : jmp 0x100c4c62
0x00000000004223e6 : jmp 0x100c4d32
0x00000000004224b6 : jmp 0x100c4e02
0x0000000000422586 : jmp 0x100c4ed2
0x0000000000422656 : jmp 0x100c4fa2
0x0000000000422726 : jmp 0x100c5072
0x00000000004227f6 : jmp 0x100c5142
0x00000000004228c6 : jmp 0x100c5212
0x0000000000422996 : jmp 0x100c52e2
0x0000000000422a66 : jmp 0x100c53b2
0x0000000000422b36 : jmp 0x100c5482
0x0000000000422c06 : jmp 0x100c5552
0x00000000004230ed : jmp 0x100c5a39
0x00000000004231c6 : jmp 0x100c5b12
0x0000000000423346 : jmp 0x100c5c92
0x00000000004234c6 : jmp 0x100c5e12
0x0000000000423646 : jmp 0x100c5f92
0x00000000004237c6 : jmp 0x100c6112
0x0000000000423946 : jmp 0x100c6292
0x0000000000423ac6 : jmp 0x100c6412
0x0000000000423c46 : jmp 0x100c6592
0x0000000000423dc6 : jmp 0x100c6712
0x0000000000423f46 : jmp 0x100c6892
0x00000000004240c6 : jmp 0x100c6a12
0x0000000000424246 : jmp 0x100c6b92
0x00000000004243c6 : jmp 0x100c6d12
0x0000000000424546 : jmp 0x100c6e92
0x00000000004246c6 : jmp 0x100c7012
0x0000000000426577 : jmp 0x100c8ec3
0x00000000004266fc : jmp 0x100c9048
0x000000000042690c : jmp 0x100c9258
0x0000000000426b1c : jmp 0x100c9468
0x0000000000426d2c : jmp 0x100c9678
0x0000000000426f3c : jmp 0x100c9888
0x000000000042714c : jmp 0x100c9a98
0x000000000042735c : jmp 0x100c9ca8
0x000000000042756c : jmp 0x100c9eb8
0x000000000042777c : jmp 0x100ca0c8
0x000000000042798c : jmp 0x100ca2d8
0x0000000000427b9c : jmp 0x100ca4e8
0x0000000000427dac : jmp 0x100ca6f8
0x0000000000427fbc : jmp 0x100ca908
0x00000000004281cc : jmp 0x100cab18
0x00000000004283dc : jmp 0x100cad28
0x00000000004287af : jmp 0x100cb0fb
0x0000000000428918 : jmp 0x100cb264
0x0000000000428ab8 : jmp 0x100cb404
0x0000000000428c58 : jmp 0x100cb5a4
0x0000000000428df8 : jmp 0x100cb744
0x0000000000428f98 : jmp 0x100cb8e4
0x0000000000429138 : jmp 0x100cba84
0x00000000004292d8 : jmp 0x100cbc24
0x0000000000429478 : jmp 0x100cbdc4
0x0000000000429618 : jmp 0x100cbf64
0x00000000004297b8 : jmp 0x100cc104
0x0000000000429958 : jmp 0x100cc2a4
0x0000000000429af8 : jmp 0x100cc444
0x0000000000429c98 : jmp 0x100cc5e4
0x0000000000429e38 : jmp 0x100cc784
0x0000000000429fd8 : jmp 0x100cc924
0x000000000042a325 : jmp 0x100ccc71
0x000000000042a42e : jmp 0x100ccd7a
0x000000000042a57e : jmp 0x100cceca
0x000000000042a6ce : jmp 0x100cd01a
0x000000000042a81e : jmp 0x100cd16a
0x000000000042a96e : jmp 0x100cd2ba
0x000000000042aabe : jmp 0x100cd40a
0x000000000042ac0e : jmp 0x100cd55a
0x000000000042ad5e : jmp 0x100cd6aa
0x000000000042aeae : jmp 0x100cd7fa
0x000000000042affe : jmp 0x100cd94a
0x000000000042b14e : jmp 0x100cda9a
0x000000000042b29e : jmp 0x100cdbea
0x000000000042b3ee : jmp 0x100cdd3a
0x000000000042b53e : jmp 0x100cde8a
0x000000000042b68e : jmp 0x100cdfda
0x000000000042c6cd : jmp 0x100cf019
0x000000000042c776 : jmp 0x100cf0c2
0x000000000042c896 : jmp 0x100cf1e2
0x000000000042c9b6 : jmp 0x100cf302
0x000000000042cad6 : jmp 0x100cf422
0x000000000042cbf6 : jmp 0x100cf542
0x000000000042cd16 : jmp 0x100cf662
0x000000000042ce36 : jmp 0x100cf782
0x000000000042cf56 : jmp 0x100cf8a2
0x000000000042d076 : jmp 0x100cf9c2
0x000000000042d196 : jmp 0x100cfae2
0x000000000042d2b6 : jmp 0x100cfc02
0x000000000042d3d6 : jmp 0x100cfd22
0x000000000042d4f6 : jmp 0x100cfe42
0x000000000042d616 : jmp 0x100cff62
0x000000000042d736 : jmp 0x100d0082
0x00000000004355d7 : jmp 0x100d7f23
0x000000000043575c : jmp 0x100d80a8
0x000000000043595c : jmp 0x100d82a8
0x0000000000435b5c : jmp 0x100d84a8
0x0000000000435d5c : jmp 0x100d86a8
0x0000000000435f5c : jmp 0x100d88a8
0x000000000043615c : jmp 0x100d8aa8
0x000000000043635c : jmp 0x100d8ca8
0x000000000043655c : jmp 0x100d8ea8
0x000000000043675c : jmp 0x100d90a8
0x000000000043695c : jmp 0x100d92a8
0x0000000000436b5c : jmp 0x100d94a8
0x0000000000436d5c : jmp 0x100d96a8
0x0000000000436f5c : jmp 0x100d98a8
0x000000000043715c : jmp 0x100d9aa8
0x000000000043735c : jmp 0x100d9ca8
0x00000000004912c7 : jmp 0x10133c13
0x000000000049146c : jmp 0x10133db8
0x00000000004916bc : jmp 0x10134008
0x000000000049190c : jmp 0x10134258
0x0000000000491b5c : jmp 0x101344a8
0x0000000000491dac : jmp 0x101346f8
0x0000000000491ffc : jmp 0x10134948
0x000000000049224c : jmp 0x10134b98
0x000000000049249c : jmp 0x10134de8
0x00000000004926ec : jmp 0x10135038
0x000000000049293c : jmp 0x10135288
0x0000000000492b8c : jmp 0x101354d8
0x0000000000492ddc : jmp 0x10135728
0x000000000049302c : jmp 0x10135978
0x000000000049327c : jmp 0x10135bc8
0x00000000004934cc : jmp 0x10135e18
0x000000000049390f : jmp 0x1013625b
0x0000000000493aa8 : jmp 0x101363f4
0x0000000000493c88 : jmp 0x101365d4
0x0000000000493e68 : jmp 0x101367b4
0x0000000000494038 : jmp 0x10136984
0x0000000000494218 : jmp 0x10136b64
0x00000000004943f8 : jmp 0x10136d44
0x00000000004945d8 : jmp 0x10136f24
0x00000000004947b8 : jmp 0x10137104
0x0000000000494998 : jmp 0x101372e4
0x0000000000494b78 : jmp 0x101374c4
0x0000000000494d58 : jmp 0x101376a4
0x0000000000494f38 : jmp 0x10137884
0x0000000000495118 : jmp 0x10137a64
0x00000000004952f8 : jmp 0x10137c44
0x00000000004954d8 : jmp 0x10137e24
0x00000000004958a5 : jmp 0x101381f1
0x00000000004959ee : jmp 0x1013833a
0x0000000000495b6e : jmp 0x101384ba
0x0000000000495cee : jmp 0x1013863a
0x0000000000495e6e : jmp 0x101387ba
0x0000000000495fee : jmp 0x1013893a
0x000000000049616e : jmp 0x10138aba
0x00000000004962ee : jmp 0x10138c3a
0x000000000049646e : jmp 0x10138dba
0x00000000004965ee : jmp 0x10138f3a
0x000000000049676e : jmp 0x101390ba
0x00000000004968ee : jmp 0x1013923a
0x0000000000496a6e : jmp 0x101393ba
0x0000000000496bee : jmp 0x1013953a
0x0000000000496d6e : jmp 0x101396ba
0x0000000000496eee : jmp 0x1013983a
0x0000000000497297 : jmp 0x10139be3
0x000000000049743c : jmp 0x10139d88
0x000000000049767c : jmp 0x10139fc8
0x00000000004978bc : jmp 0x1013a208
0x0000000000497afc : jmp 0x1013a448
0x0000000000497d3c : jmp 0x1013a688
0x0000000000497f7c : jmp 0x1013a8c8
0x00000000004981bc : jmp 0x1013ab08
0x00000000004983fc : jmp 0x1013ad48
0x000000000049863c : jmp 0x1013af88
0x000000000049887c : jmp 0x1013b1c8
0x0000000000498abc : jmp 0x1013b408
0x0000000000498cfc : jmp 0x1013b648
0x0000000000498f3c : jmp 0x1013b888
0x000000000049917c : jmp 0x1013bac8
0x00000000004993bc : jmp 0x1013bd08
0x0000000000400549 : jmp 0x400516
0x00000000004007bd : jmp 0x400782
0x00000000004010b1 : jmp 0x401011
0x0000000000402142 : jmp 0x402158
0x00000000004116d3 : jmp 0x4115db
0x00000000004167d6 : jmp 0x4167fe
0x00000000004169e5 : jmp 0x4169b2
0x0000000000417f03 : jmp 0x417f50
0x000000000041a607 : jmp 0x419e4c
0x000000000041a618 : jmp 0x41a48b
0x000000000041cc13 : jmp 0x41cc3e
0x000000000041cc93 : jmp 0x41ccbc
0x000000000041f811 : jmp 0x41f7e0
0x0000000000420984 : jmp 0x42094a
0x0000000000420ad8 : jmp 0x420a9d
0x000000000042c4ac : jmp 0x42c472
0x000000000042c5f8 : jmp 0x42c5bd
0x000000000042dfd8 : jmp 0x42dfa6
0x000000000042e056 : jmp 0x42e024
0x000000000042e4e8 : jmp 0x42e4b6
0x000000000042e566 : jmp 0x42e534
0x000000000043cf8e : jmp 0x43cf54
0x000000000043d05f : jmp 0x43d025
0x000000000043d0ce : jmp 0x43d094
0x000000000043ebe3 : jmp 0x43eb56
0x000000000043f483 : jmp 0x43f426
0x000000000044341c : jmp 0x442eff
0x0000000000444f93 : jmp 0x444f59
0x000000000044540e : jmp 0x4453d3
0x0000000000447903 : jmp 0x4478d1
0x000000000044a08f : jmp 0x44a05d
0x000000000044ebcf : jmp 0x44e7f1
0x000000000044fa61 : jmp 0x44fa6b
0x0000000000451e26 : jmp 0x451df3
0x0000000000456253 : jmp 0x45622f
0x0000000000457dbb : jmp 0x457b89
0x0000000000461e04 : jmp 0x461dc9
0x0000000000461e03 : jmp 0x461dca
0x000000000046459b : jmp 0x464561
0x000000000046459a : jmp 0x464562
0x00000000004656ab : jmp 0x465501
0x000000000046976b : jmp 0x469730
0x000000000046a060 : jmp 0x46a026
0x000000000046b35f : jmp 0x46b32d
0x000000000046cf0b : jmp 0x46ced1
0x0000000000473328 : jmp 0x4732f5
0x0000000000478d71 : jmp 0x478d3f
0x0000000000479451 : jmp 0x47941f
0x0000000000479b92 : jmp 0x479be4
0x000000000047a5ee : jmp 0x47a557
0x000000000047ccfc : jmp 0x47cd0e
0x000000000047c065 : jmp 0x47e82b
0x000000000047eb60 : jmp 0x47eb2d
0x000000000047f1fa : jmp 0x47eca5
0x000000000047f6a2 : jmp 0x47f6f4
0x00000000004822e6 : jmp 0x47fa1e
0x00000000004822e6 : jmp 0x47fa1f
0x0000000000480334 : jmp 0x4802f9
0x0000000000483a5a : jmp 0x4804ef
0x0000000000484b5c : jmp 0x48160c
0x0000000000483095 : jmp 0x48305a
0x0000000000484bbb : jmp 0x484b80
0x0000000000484cf9 : jmp 0x484cc6
0x00000000004865d9 : jmp 0x4865a6
0x0000000000486618 : jmp 0x4865e5
0x000000000048689a : jmp 0x48685f
0x000000000048a073 : jmp 0x48a041
0x000000000048a070 : jmp 0x48a075
0x000000000048d2ab : jmp 0x48d279
0x000000000048d2a8 : jmp 0x48d2ad
0x000000000048ffd6 : jmp 0x48ed73
0x00000000004909f3 : jmp 0x4909c1
0x0000000000459603 : jmp 0x49101f53
0x000000000049136e : jmp 0x491384
0x0000000000495aee : jmp 0x495b04
0x00000000004960ee : jmp 0x496104
0x00000000004963ee : jmp 0x496404
0x00000000004966ee : jmp 0x496704
0x00000000004969ee : jmp 0x496a04
0x0000000000496cee : jmp 0x496d04
0x000000000049fff5 : jmp 0x4a001d
0x00000000004b81aa : jmp 0x4b81e9
0x00000000004b8ee9 : jmp 0x4b8ebc
0x00000000004b9b69 : jmp 0x4b9b37
0x00000000004b9ee0 : jmp 0x4b9e74
0x00000000004b9edf : jmp 0x4b9e75
0x00000000004ba0b6 : jmp 0x4ba084
0x00000000004342ea : jmp 0x4fc252e8
0x00000000004342e9 : jmp 0x4fc252e9
0x0000000000448452 : jmp 0xffffffff810f0778
0x0000000000448705 : jmp 0xffffffff810f0a2b
0x00000000004b8157 : jmp 0xffffffff91159b2e
0x0000000000468a7b : jmp 0xffffffffbf0913cb
0x0000000000478701 : jmp 0xffffffffc3571056
0x000000000047ab99 : jmp 0xffffffffca70f3e1
0x000000000041bf9c : jmp 0xffffffffcb7b07a6
0x000000000041c31d : jmp 0xffffffffcb7b0b27
0x000000000041cd03 : jmp 0xffffffffcb7b150d
0x000000000041d328 : jmp 0xffffffffcb7b1b32
0x000000000047ab23 : jmp 0xffffffffcbd0f32d
0x00000000004bda1b : jmp qword ptr [rax + 0x10fffe03]
0x00000000004a32cb : jmp qword ptr [rax + 0x30fff90d]
0x00000000004a2b63 : jmp qword ptr [rax - 0x3f00075f]
0x000000000041c389 : jmp qword ptr [rax]
0x0000000000482cbe : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004c141b : jmp qword ptr [rbx]
0x00000000004bd97b : jmp qword ptr [rcx]
0x00000000004ba7a4 : jmp qword ptr [rdi]
0x000000000049a1db : jmp qword ptr [rdx]
0x000000000047da29 : jmp qword ptr [rsi + 0xf]
0x0000000000457e4d : jmp qword ptr [rsi - 0x70]
0x00000000004a2f0b : jmp qword ptr [rsi]
0x0000000000420bb9 : jmp r10
0x0000000000476231 : jmp r11
0x000000000042f1b0 : jmp r9
0x00000000004a2b6b : jmp rax
0x00000000004bd98f : jmp rbp
0x0000000000476232 : jmp rbx
0x000000000041fb3e : jmp rcx
0x00000000004c4f73 : jmp rdi
0x0000000000420bba : jmp rdx
0x00000000004a2c13 : jmp rsi
0x000000000045f8e2 : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x000000000040dc04 : jne 0x40dbe2 ; ret
0x000000000040dc35 : jne 0x40dc6f ; mov eax, 0xba ; syscall
0x000000000040fb6b : jne 0x40fb81 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410b4c : jne 0x410b53 ; pop rbx ; ret
0x0000000000413315 : jne 0x413322 ; ret
0x0000000000414a91 : jne 0x414a83 ; ret
0x00000000004157a1 : jne 0x4157b8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415af2 : jne 0x415add ; pop rbx ; ret
0x0000000000415b2c : jne 0x415b25 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004163e6 : jne 0x4163db ; ret
0x00000000004167d4 : jne 0x4167e6 ; jmp 0x416800
0x000000000041cc11 : jne 0x41cc26 ; jmp 0x41cc40
0x000000000041cc91 : jne 0x41cca4 ; jmp 0x41ccbe
0x0000000000420b24 : jne 0x420b36 ; lea rax, qword ptr [rip + 3] ; ret
0x0000000000425629 : jne 0x425685 ; xor rax, rax ; ret
0x00000000004255e9 : jne 0x4256a9 ; xor rax, rax ; ret
0x00000000004256ca : jne 0x4256dd ; lea rax, qword ptr [rip + 0x1d] ; ret
0x0000000000425daa : jne 0x425d93 ; ret
0x0000000000425f13 : jne 0x425dff ; mov rax, rdi ; ret
0x0000000000425e69 : jne 0x425e55 ; mov rax, rdi ; ret
0x0000000000426390 : jne 0x4263a2 ; lea rax, qword ptr [rip + 0x67] ; ret
0x00000000004263e3 : jne 0x4263f5 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000042b988 : jne 0x42b860 ; ret
0x000000000042b8c9 : jne 0x42b8b3 ; ret
0x000000000042db1c : jne 0x42db06 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042f10d : jne 0x42f137 ; xor eax, eax ; ret
0x000000000042e701 : jne 0x42f13b ; xor eax, eax ; ret
0x000000000042e729 : jne 0x42f147 ; xor eax, eax ; ret
0x000000000043b335 : jne 0x43b2c6 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b307 : jne 0x43b2c6 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b306 : jne 0x43b2c7 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043ca94 : jne 0x43cca8 ; xor eax, eax ; ret
0x000000000043cc99 : jne 0x43ccb9 ; xor eax, eax ; ret
0x000000000043cb41 : jne 0x43ccbd ; xor eax, eax ; ret
0x000000000043ccb1 : jne 0x43ccbe ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043cdc1 : jne 0x43cdb2 ; ret
0x000000000043ce71 : jne 0x43ce62 ; ret
0x000000000043cfe1 : jne 0x43cfd6 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000043d131 : jne 0x43d126 ; sub rax, 1 ; ret
0x000000000043e957 : jne 0x43e974 ; mov eax, 2 ; syscall
0x000000000043e9b7 : jne 0x43e9d4 ; mov eax, 0 ; syscall
0x000000000043ea17 : jne 0x43ea34 ; mov eax, 1 ; syscall
0x000000000043fe28 : jne 0x43fe10 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000441c2a : jne 0x441c28 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000441c9a : jne 0x441c98 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000441de2 : jne 0x441dd9 ; pop rdx ; pop r10 ; ret
0x0000000000441dd2 : jne 0x441de4 ; nop ; mov eax, 0xca ; syscall
0x0000000000442064 : jne 0x442043 ; ret
0x0000000000442153 : jne 0x44214d ; xor eax, eax ; leave ; ret
0x000000000044540c : jne 0x4453e3 ; jmp 0x4453d5
0x00000000004512d1 : jne 0x4512f1 ; test rdi, rdi ; je 0x4512f1 ; call 0x41d589
0x0000000000451881 : jne 0x45186d ; mov rax, rsi ; ret
0x0000000000451905 : jne 0x4518e5 ; mov rax, rsi ; ret
0x00000000004631b1 : jne 0x4631a3 ; ret
0x0000000000464d83 : jne 0x464d8e ; xor rax, rax ; ret
0x0000000000465f55 : jne 0x465f62 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000004665fb : jne 0x4665b6 ; mov rax, rdx ; ret
0x000000000046663c : jne 0x466633 ; ret
0x000000000046a3c7 : jne 0x46a3e4 ; mov eax, 3 ; syscall
0x000000000046a557 : jne 0x46a574 ; mov eax, 0x14 ; syscall
0x000000000046a8d3 : jne 0x46a885 ; xor eax, eax ; ret
0x000000000046a887 : jne 0x46a8db ; ret
0x000000000046a8cf : jne 0x46a8dd ; test ecx, ecx ; jne 0x46a889 ; xor eax, eax ; ret
0x000000000047360a : jne 0x4735b0 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004735f8 : jne 0x4735d3 ; ret
0x0000000000473717 : jne 0x47372a ; mov rax, qword ptr [rip + 0x258fd0] ; ret
0x0000000000473760 : jne 0x473733 ; ret
0x0000000000475f76 : jne 0x475fb3 ; ret
0x0000000000475f75 : jne 0x475fb4 ; ret
0x0000000000477dc3 : jne 0x477dd6 ; add rsp, 0x38 ; ret
0x0000000000477e65 : jne 0x477e78 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000477f3d : jne 0x477f80 ; xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000477ff5 : jne 0x478008 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047a1c0 : jne 0x47a1d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c064 : jne 0x47c058 ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047d978 : jne 0x47d935 ; nop word ptr [rax + rax] ; call rbx
0x0000000000488e92 : jne 0x488e5f ; jmp 0x488e67
0x000000000048c0c2 : jne 0x48c08f ; jmp 0x48c097
0x00000000004910c0 : jne 0x4910d2 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000491113 : jne 0x491125 ; lea rax, qword ptr [rip + 4] ; ret
0x0000000000499831 : jne 0x49985c ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000049b9a0 : jne 0x49b9c1 ; mov rax, qword ptr [rax] ; ret
0x000000000049ba00 : jne 0x49ba24 ; mov qword ptr [rax], rdx ; ret
0x000000000049bca6 : jne 0x49bc9f ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049bdd7 : jne 0x49bdd0 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049bf7b : jne 0x49bf74 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c24b : jne 0x49c264 ; mov eax, 8 ; ret
0x000000000049c2dc : jne 0x49c2cf ; xor eax, eax ; ret
0x000000000049c2b5 : jne 0x49c2de ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049c32c : jne 0x49c31f ; xor eax, eax ; ret
0x000000000049c305 : jne 0x49c32e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049d7f9 : jne 0x49d803 ; ret
0x000000000049d814 : jne 0x49d823 ; ret
0x000000000049da24 : jne 0x49da33 ; ret
0x000000000049de33 : jne 0x49de42 ; mov eax, 8 ; ret
0x000000000049e215 : jne 0x49e203 ; pop rbx ; ret
0x000000000049e260 : jne 0x49e240 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049e385 : jne 0x49e36b ; pop rbx ; ret
0x000000000049e441 : jne 0x49e434 ; pop rbx ; ret
0x000000000049fff3 : jne 0x4a0005 ; jmp 0x4a001f
0x00000000004a33d5 : jne 0x4a33d2 ; call qword ptr [rax]
0x00000000004a33d9 : jne 0x4a33d6 ; jmp qword ptr [rax]
0x00000000004a3405 : jne 0x4a3402 ; call rax
0x00000000004a3401 : jne 0x4a3402 ; inc eax ; jne 0x4a3406 ; call rax
0x00000000004a3409 : jne 0x4a3406 ; jmp rax
0x00000000004a3411 : jne 0x4a3412 ; inc dword ptr [rax] ; jbe 0x4a3416 ; jmp qword ptr [rax]
0x00000000004b8017 : jne 0x4b7fe1 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004b9fab : jne 0x4b9fd2 ; retf 0x32dd
0x00000000004c1131 : jne 0x4c112b ; call qword ptr [rax]
0x00000000004256eb : jno 0x42574f ; add dword ptr [rax], eax ; ret
0x000000000042e9be : jno 0x42e9cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000434da0 : jno 0x434da9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000434fda : jno 0x434fe3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000435141 : jno 0x435152 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004352a6 : jno 0x43532a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000465f53 : jno 0x465f62 ; jne 0x465f64 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000465f59 : jno 0x465f66 ; ret
0x00000000004785f4 : jno 0x478646 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a2bfc : jno 0x4a2bc5 ; clc ; inc dword ptr [rcx] ; ret
0x00000000004bfe21 : jno 0x4bfe1a ; call qword ptr [rdx]
0x00000000004bfe39 : jno 0x4bfe32 ; jmp qword ptr [rax]
0x00000000004c4c8d : jno 0x4c4c95 ; add byte ptr [rax + 0x14], ah ; cli ; jmp rdx
0x00000000004122ab : jnp 0x41231f ; syscall
0x0000000000465bb4 : jnp 0x465bb6 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000474061 : jnp 0x4740b9 ; and eax, 0x89485300 ; ret
0x00000000004a3469 : jnp 0x4a3466 ; call qword ptr [rax]
0x00000000004a346d : jnp 0x4a346a ; jmp qword ptr [rax]
0x00000000004a3485 : jnp 0x4a3482 ; call rax
0x00000000004a348d : jnp 0x4a348e ; inc dword ptr [rax] ; jl 0x4a3492 ; call qword ptr [rax]
0x00000000004b8242 : jnp 0x4b8290 ; mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b82b9 ; salc ; retf
0x00000000004b89c5 : jnp 0x4b8982 ; ret
0x00000000004b99c2 : jnp 0x4b9a20 ; retf
0x00000000004b9dc9 : jnp 0x4b9e16 ; retf -0x6620
0x00000000004baa29 : jnp 0x4baa6a ; retf
0x00000000004bd3cd : jnp 0x4bd3ce ; jmp qword ptr [rax]
0x00000000004bd3cc : jnp 0x4bd3cf ; jmp qword ptr [rax]
0x00000000004c5645 : jnp 0x4c564d ; add al, ch ; push rcx ; cli ; jmp rsp
0x00000000004007b7 : jns 0x4006ab ; jmp 0x400788
0x000000000042a427 : jns 0x42a402 ; retf -0x152d
0x000000000042a577 : jns 0x42a552 ; retf -0x152d
0x000000000042a6c7 : jns 0x42a6a2 ; retf -0x152d
0x000000000042a817 : jns 0x42a7f2 ; retf -0x152d
0x000000000042a967 : jns 0x42a942 ; retf -0x152d
0x000000000042aab7 : jns 0x42aa92 ; retf -0x152d
0x000000000042ac07 : jns 0x42abe2 ; retf -0x152d
0x000000000042ad57 : jns 0x42ad32 ; retf -0x152d
0x000000000042aea7 : jns 0x42ae82 ; retf -0x152d
0x000000000042aff7 : jns 0x42afd2 ; retf -0x152d
0x000000000042b147 : jns 0x42b122 ; retf -0x152d
0x000000000042b297 : jns 0x42b272 ; retf -0x152d
0x000000000042b3e7 : jns 0x42b3c2 ; retf -0x152d
0x000000000042b537 : jns 0x42b512 ; retf -0x152d
0x000000000042b687 : jns 0x42b662 ; retf -0x152d
0x0000000000434da7 : jns 0x434daa ; ret
0x0000000000434fe1 : jns 0x434fe4 ; ret
0x0000000000435148 : jns 0x435153 ; ret
0x00000000004697dc : jns 0x4697eb ; add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x000000000046eb6c : jns 0x46eb7a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x00000000004959e7 : jns 0x4959c2 ; retf -0x152d
0x0000000000495b67 : jns 0x495b42 ; retf -0x152d
0x0000000000495ce7 : jns 0x495cc2 ; retf -0x152d
0x0000000000495e67 : jns 0x495e42 ; retf -0x152d
0x0000000000495fe7 : jns 0x495fc2 ; retf -0x152d
0x0000000000496167 : jns 0x496142 ; retf -0x152d
0x00000000004962e7 : jns 0x4962c2 ; retf -0x152d
0x0000000000496467 : jns 0x496442 ; retf -0x152d
0x00000000004965e7 : jns 0x4965c2 ; retf -0x152d
0x0000000000496767 : jns 0x496742 ; retf -0x152d
0x00000000004968e7 : jns 0x4968c2 ; retf -0x152d
0x0000000000496a67 : jns 0x496a42 ; retf -0x152d
0x0000000000496be7 : jns 0x496bc2 ; retf -0x152d
0x0000000000496d67 : jns 0x496d42 ; retf -0x152d
0x0000000000496ee7 : jns 0x496ec2 ; retf -0x152d
0x000000000049970e : jns 0x49971b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000049b90e : jns 0x49b951 ; add byte ptr [rax + rsi + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049c38e : jns 0x49c39b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000049dd1e : jns 0x49dd2b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004b7ace : jns 0x4b7a64 ; ret 0xf869
0x00000000004b7acd : jns 0x4b7a65 ; ret 0xf869
0x00000000004b9ede : jns 0x4b9f35 ; jmp 0x4b9e76
0x00000000004bd3c9 : jns 0x4bd3ce ; inc dword ptr [rax + 0x7b] ; std ; jmp qword ptr [rax]
0x000000000043d8ab : jns 0xffffffffe9336295 ; retf
0x0000000000411ac3 : jo 0x411a83 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000413194 : jo 0x4131e5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417188 : jo 0x4171ad ; add byte ptr [rcx + 0xf], cl ; retf -0xcf
0x0000000000419fc2 : jo 0x419fe6 ; add cl, bpl ; retf -2
0x000000000046322a : jo 0x463242 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046674c : jo 0x466760 ; xchg eax, ebp ; ret 0x8b4c
0x0000000000479e9a : jo 0x479e27 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000479e99 : jo 0x479e28 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004a293c : jo 0x4a2945 ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a2a74 : jo 0x4a2a02 ; clc ; inc eax ; xchg al, bh ; call qword ptr [rax]
0x00000000004a2a3d : jo 0x4a2a3d ; push qword ptr [rax] ; jb 0x4a2a41 ; call rax
0x00000000004a2a28 : jo 0x4a2a95 ; clc ; call qword ptr [rax]
0x00000000004b8248 : jo 0x4b82b3 ; salc ; retf
0x00000000004b8b44 : jo 0x4b8bbe ; mov ebp, 0xfb67d10d ; ret
0x00000000004bd3b5 : jo 0x4bd3b6 ; jmp rax
0x00000000004bd3a8 : jo 0x4bd41b ; std ; inc dword ptr [rax + 0x6c] ; std ; jmp qword ptr [rax]
0x00000000004bd434 : jo 0x4bd488 ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004bd974 : jo 0x4bd94d ; std ; ljmp ptr [rsi + rdx*8] ; std ; jmp qword ptr [rcx]
0x00000000004bed50 : jo 0x4bed82 ; cmc ; jmp qword ptr [rsi]
0x00000000004c09c1 : jo 0x4c09c7 ; retf 0xe0a
0x00000000004c6dc0 : jo 0x4c6dfd ; sti ; jmp qword ptr [rdx]
0x0000000000425df5 : jp 0x425def ; ret 0x7401
0x0000000000431dc6 : jp 0x431dba ; ret
0x0000000000431e29 : jp 0x431e1d ; ret
0x0000000000431dbf : jp 0x431e49 ; jb 0x431dac ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000431dc4 : jp 0x431e49 ; jp 0x431dbc ; ret
0x0000000000441302 : jp 0x4412cd ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000464599 : jp 0x4645de ; jmp 0x464563
0x000000000046963a : jp 0x46966e ; add byte ptr es:[rax + 0x39], cl ; retf
0x000000000047ad1e : jp 0x47ad33 ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000487d95 : jp 0x487d9e ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000049d752 : jp 0x49d74b ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a345d : jp 0x4a345a ; call rax
0x00000000004a3459 : jp 0x4a345a ; inc eax ; jp 0x4a345e ; call rax
0x00000000004a3461 : jp 0x4a345e ; jmp rax
0x00000000004a3465 : jp 0x4a3466 ; inc dword ptr [rax] ; jnp 0x4a346a ; call qword ptr [rax]
0x00000000004b8cd3 : jp 0x4b8c8d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000041dce2 : jrcxz 0x41dce8 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000433fda : jrcxz 0x433fd5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433fd9 : jrcxz 0x433fd6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000441e33 : jrcxz 0x441df8 ; cmp r11d, 0xa ; je 0x441e44 ; ret
0x000000000044752c : jrcxz 0x447519 ; retf
0x000000000045aa76 : jrcxz 0x45aaef ; ret
0x000000000045ca88 : jrcxz 0x45ca82 ; ret 0xf40
0x00000000004b7925 : jrcxz 0x4b797f ; ret
0x00000000004b9aed : jrcxz 0x4b9ab0 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004ba649 : jrcxz 0x4ba62d ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004c62a9 : jrcxz 0x4c62a7 ; jmp qword ptr [rdx]
0x000000000040924c : js 0x40926f ; mov qword ptr [rsp + 8], rax ; call 0x405cb9
0x000000000040925f : js 0x40927a ; mov qword ptr [rsp + 8], rax ; call 0x405cb9
0x0000000000409272 : js 0x409285 ; mov qword ptr [rsp + 8], rax ; call 0x405cb9
0x000000000040928a : js 0x4092ad ; mov qword ptr [rsp + 8], rax ; call 0x405cb9
0x000000000040929d : js 0x4092b8 ; mov qword ptr [rsp + 8], rax ; call 0x405cb9
0x00000000004099b6 : js 0x4099d0 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x00000000004099c7 : js 0x4099d9 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x00000000004099dd : js 0x4099ff ; mov qword ptr [rsp], rax ; call 0x405cb8
0x00000000004099ee : js 0x409a08 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x00000000004099ff : js 0x409a11 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000409a15 : js 0x409a37 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000409a26 : js 0x409a40 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000409a37 : js 0x409a49 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000409a4d : js 0x409a6f ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000409a5e : js 0x409a78 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000409a6f : js 0x409a81 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000409a85 : js 0x409aa7 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000409a96 : js 0x409ab0 ; mov qword ptr [rsp], rax ; call 0x405cb8
0x0000000000410b12 : js 0x410b5d ; test rdi, rdi ; je 0x410b2d ; call 0x41d589
0x0000000000441c2f : js 0x441c8f ; pop rbp ; ret
0x0000000000441c9f : js 0x441cff ; pop rbp ; ret
0x0000000000447c6e : js 0x447cbf ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044a858 : js 0x44a8a9 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044b6b8 : js 0x44b709 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000459b13 : js 0x459b35 ; call 0x465ef8
0x0000000000470a52 : js 0x470a5b ; pop rbx ; ret
0x0000000000479e9d : js 0x479eab ; ret
0x000000000047afdf : js 0x47b024 ; call rsp
0x000000000047b2f4 : js 0x47b339 ; call rsp
0x000000000047b473 : js 0x47b4b8 ; call rsp
0x000000000047b4b3 : js 0x47b4f8 ; call rsp
0x000000000047b4ae : js 0x47b4ff ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047b676 : js 0x47b6bb ; call rsp
0x000000000047b6bb : js 0x47b700 ; call rsp
0x000000000049bbd6 : js 0x49bbe3 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049bbe3 : js 0x49bbef ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a2a8d : js 0x4a2a8d ; inc dword ptr [rax] ; cmp al, 0xf8 ; call qword ptr [rax]
0x00000000004b99c1 : js 0x4b9a41 ; pop rdx ; retf
0x00000000004c1fe8 : js 0x4c1fee ; clc ; call rsp
0x00000000004c4a28 : js 0x4c4a32 ; cli ; jmp rdx
0x000000000041f39d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004ba003 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047360b : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042af2d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004b98f2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004ba0f4 : lahf ; push -0x57d3205 ; call 0xffffffffab596bf6
0x00000000004b8100 : lahf ; push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000043fb88 : lahf ; ret
0x00000000004855fc : lahf ; ret 0x2941
0x000000000041d55d : lahf ; ret 0x2a
0x000000000040fbee : lahf ; ret 0x3841
0x000000000043fb8e : lahf ; ret 0x3845
0x00000000004b785d : lahf ; ret 0x871e
0x00000000004837d1 : lahf ; ret 0xb60f
0x0000000000486268 : lahf ; ret 0xd129
0x00000000004862df : lahf ; ret 0xd629
0x00000000004861f1 : lahf ; ret 0xd729
0x000000000043d989 : lahf ; ret 0xea81
0x00000000004109dd : lahf ; retf
0x000000000040eacd : lahf ; retf 0x2b
0x000000000042b5bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000410ff3 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000487a5a : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044c313 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000451132 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000410e3d : lcall ptr [rbx + 0x5d] ; ret
0x0000000000474096 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000041f613 : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000434666 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000413524 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000415b3b : lea eax, dword ptr [r8 - 1] ; ret
0x000000000046a8fb : lea eax, dword ptr [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x0000000000499804 : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000425654 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000425664 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000425634 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000415b3c : lea eax, dword ptr [rax - 1] ; ret
0x00000000004c686d : lea eax, dword ptr [rax] ; add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x000000000046518d : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000043cfe4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000043b05c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000043b071 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000043b08f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000043b0af : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000043b0d2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043b0f1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000043b111 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000043b131 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000043b154 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000043b179 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000043b197 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000043b1b7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000043b1d3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000043b1f3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000043b213 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000043b233 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000043afad : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000043afcd : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000043afef : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000043b00f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000043b02f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000043b049 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000043aef7 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000043af0a : lea eax, dword ptr [rdi + 2] ; ret
0x000000000043af15 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000043af28 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000043af3d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000043af5b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000043af67 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000043af7a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000043af8f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000425689 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000425699 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000425583 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000042c457 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000465089 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000477908 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x477921 ; ret
0x000000000043aee3 : lea eax, dword ptr [rdi] ; ret
0x000000000043a4cd : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000043a4ed : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000043a50f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043a52f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043a54f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000043a3df : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000043a407 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043a41d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000043a435 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043a44b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043a45d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043a47b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000043a387 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043a48d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043a4ad : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000415b2e : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043da5c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000043a3f5 : lea eax, dword ptr [rdx] ; ret
0x0000000000426277 : lea eax, dword ptr [rip + 0x12ad3] ; ret
0x0000000000422d47 : lea eax, dword ptr [rip + 0x14853] ; ret
0x00000000004256e9 : lea eax, dword ptr [rip + 0x15e71] ; ret
0x0000000000425cc3 : lea eax, dword ptr [rip + 0x17647] ; ret
0x00000000004208d4 : lea eax, dword ptr [rip + 0x1a966] ; ret
0x00000000004256cd : lea eax, dword ptr [rip + 0x1d] ; ret
0x0000000000426393 : lea eax, dword ptr [rip + 0x67] ; ret
0x00000000004256e1 : lea eax, dword ptr [rip + 0x8449] ; ret
0x0000000000420b27 : lea eax, dword ptr [rip + 3] ; ret
0x00000000004263e6 : lea eax, dword ptr [rip + 4] ; ret
0x00000000004c4aed : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044bf50 : lea eax, dword ptr [rsp + 0x88] ; call r15
0x000000000047b66f : lea ebx, dword ptr [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8111 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049c0f5 : lea ebx, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000466090 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000004690f2 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0x469103
0x000000000042f207 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043a77e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000045210f : lea ecx, dword ptr [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000463711 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000479b90 : lea ecx, dword ptr [rdx] ; jmp 0x479be6
0x000000000047f6a0 : lea ecx, dword ptr [rdx] ; jmp 0x47f6f6
0x000000000046a677 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000464647 : lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x0000000000464720 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004661a5 : lea ecx, dword ptr [rsp + 0x20] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004664c0 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004663be : lea ecx, dword ptr [rsp + 0x60] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000459b12 : lea edi, dword ptr [rax + 0x18] ; call 0x465ef9
0x000000000046f0d6 : lea edi, dword ptr [rax + 0x6ca1e0] ; call rdx
0x000000000040221c : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000040e0fc : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000425e66 : lea edi, dword ptr [rdi + 0x10] ; jne 0x425e58 ; mov rax, rdi ; ret
0x000000000042b8c6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x42b8b6 ; ret
0x000000000047afdc : lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047b382 : lea edi, dword ptr [rsp + 0x80] ; call r12
0x000000000047b18f : lea edi, dword ptr [rsp + 0x88] ; call r14
0x00000000004163eb : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004648f0 : lea edx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042f2d4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000046449d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000420bb6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000042f6c8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000463651 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000464642 : lea edx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000046624d : lea edx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004668b0 : lea edx, dword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044be76 : lea edx, dword ptr [rsp + 0x80] ; call r12
0x00000000004856bc : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048c4f5 : lea esi, dword ptr [rax*8 + 0x4b75a8] ; call 0x4787c9
0x00000000004663c3 : lea esi, dword ptr [rsp + 0x30] ; call rbx
0x000000000046608b : lea esi, dword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004661aa : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000046aa1d : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f5d1 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000420bb5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000040e0fb : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000044bf4f : lea r8, qword ptr [rsp + 0x88] ; call r15
0x000000000042f206 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000479b8f : lea r9, qword ptr [rdx] ; jmp 0x479be7
0x000000000047f69f : lea r9, qword ptr [rdx] ; jmp 0x47f6f7
0x0000000000464646 : lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000046471f : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000499803 : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000425653 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000425663 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000425633 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000046518c : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000043cfe3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000043b05b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b070 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b08e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b0ae : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b0d1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b0f0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b110 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b130 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b153 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043b178 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b196 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043b1b6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043b1d2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b1f2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b212 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b232 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043afac : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043afcc : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043afee : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043b00e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043b02e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043b048 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043aef6 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000043af09 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000043af14 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000043af27 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000043af3c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000043af5a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000043af66 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000043af79 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000043af8e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000425688 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000425698 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425582 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c456 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000465088 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000043aee2 : lea rax, qword ptr [rdi] ; ret
0x000000000043a4cc : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043a4ec : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043a50e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043a52e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043a54e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043a3de : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043a406 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043a41c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000043a434 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043a44a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043a45c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043a47a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000043a386 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043a48c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043a4ac : lea rax, qword ptr [rdx + 9] ; ret
0x000000000043a3f4 : lea rax, qword ptr [rdx] ; ret
0x0000000000426276 : lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000422d46 : lea rax, qword ptr [rip + 0x14853] ; ret
0x00000000004256e8 : lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000425cc2 : lea rax, qword ptr [rip + 0x17647] ; ret
0x00000000004208d3 : lea rax, qword ptr [rip + 0x1a966] ; ret
0x00000000004256cc : lea rax, qword ptr [rip + 0x1d] ; ret
0x0000000000426392 : lea rax, qword ptr [rip + 0x67] ; ret
0x00000000004256e0 : lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000420b26 : lea rax, qword ptr [rip + 3] ; ret
0x00000000004263e5 : lea rax, qword ptr [rip + 4] ; ret
0x000000000049c0f4 : lea rbx, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043a77d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000046608f : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004690f1 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0x469104
0x000000000046a676 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046f0d5 : lea rdi, qword ptr [rax + 0x6ca1e0] ; call rdx
0x000000000040221b : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000425e65 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x425e59 ; mov rax, rdi ; ret
0x000000000042b8c5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x42b8b7 ; ret
0x000000000047afdb : lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000047b381 : lea rdi, qword ptr [rsp + 0x80] ; call r12
0x000000000047b18e : lea rdi, qword ptr [rsp + 0x88] ; call r14
0x000000000042f2d3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042f6c7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000004668af : lea rdx, qword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044be75 : lea rdx, qword ptr [rsp + 0x80] ; call r12
0x00000000004663c2 : lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046608a : lea rsi, qword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004661a9 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000046aa1c : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004878e6 : leave ; cmove rax, rdx ; ret
0x000000000043cdc0 : leave ; jne 0x43cdb3 ; ret
0x000000000043ce70 : leave ; jne 0x43ce63 ; ret
0x000000000043d130 : leave ; jne 0x43d127 ; sub rax, 1 ; ret
0x00000000004665fa : leave ; jne 0x4665b7 ; mov rax, rdx ; ret
0x000000000046a8d2 : leave ; jne 0x46a886 ; xor eax, eax ; ret
0x00000000004996e4 : leave ; movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, rax ; jmp rcx
0x0000000000444180 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000442148 : leave ; ret
0x000000000041d4a3 : leave ; ret 0x2a
0x00000000004b9af4 : leave ; retf
0x00000000004b73e9 : leave ; retf -0x3335
0x00000000004b82c1 : leave ; retf 0x6ee8
0x00000000004c3489 : leave ; std ; call qword ptr [rbx]
0x00000000004bd51d : leave ; std ; ljmp ptr [rbx - 0x36] ; std ; inc ecx ; retf -3
0x0000000000413f01 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00000000004a314f : ljmp ptr [rbp + rcx - 7] ; call qword ptr [rdx]
0x00000000004a2c77 : ljmp ptr [rbx + 0x3bfff8c1] ; ret 0xfff8
0x00000000004bd51f : ljmp ptr [rbx - 0x36] ; std ; inc ecx ; retf -3
0x00000000004bd9db : ljmp ptr [rdx + rbp*8 - 0x15ab0003] ; std ; jmp rsp
0x00000000004bd977 : ljmp ptr [rsi + rdx*8] ; std ; jmp qword ptr [rcx]
0x00000000004bd5a3 : ljmp ptr [rsp + rdx*8] ; std ; call rsp
0x000000000040fa30 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000479e85 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042df0e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f51f : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422a10 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043c740 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048adfe : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b99e6 : lodsb al, byte ptr [rsi] ; loop 0x4b99b3 ; retf
0x0000000000477adf : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x477af9 ; ret
0x00000000004ba79d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004c7874 : lodsb al, byte ptr [rsi] ; popfq ; add byte ptr [rax], al ; call 0x134c748c
0x00000000004109d0 : lodsb al, byte ptr [rsi] ; retf
0x00000000004b8246 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b82b5 ; salc ; retf
0x00000000004c6d74 : lodsb al, byte ptr [rsi] ; xchg eax, edx ; add byte ptr [rax], al ; cdqe ; jmp qword ptr [rsi]
0x00000000004b801b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046a8d4 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004073bd : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x00000000004c5cb1 : lodsd eax, dword ptr [rsi] ; cli ; call rdx
0x000000000044ec87 : lodsd eax, dword ptr [rsi] ; mov ebp, 0x3740027 ; ret
0x00000000004b9dc5 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x0000000000494a60 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000419c6b : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000400783 : lodsd eax, dword ptr [rsi] ; ret
0x000000000043f384 : lodsd eax, dword ptr [rsi] ; sub byte ptr [rax], al ; test rax, rax ; je 0x43f397 ; ret
0x0000000000417805 : loop 0x4177c8 ; pop rsp ; ret
0x000000000041924c : loop 0x41920f ; pop rsp ; ret
0x000000000041b950 : loop 0x41b913 ; pop rsp ; ret
0x000000000042db1d : loop 0x42db55 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000433f4a : loop 0x433f45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433f49 : loop 0x433f46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045bffb : loop 0x45bf88 ; ret
0x0000000000469325 : loop 0x469378 ; mov edi, eax ; mov rsi, r14 ; call 0x425df9
0x000000000047587e : loop 0x475841 ; ret
0x0000000000475a62 : loop 0x475a6d ; add rdx, rax ; jmp 0x475a7d
0x000000000049b929 : loop 0x49b978 ; add esp, 0x18 ; ret
0x00000000004a298d : loop 0x4a2988 ; call qword ptr [rax]
0x00000000004a2bb8 : loop 0x4a2b79 ; clc ; jmp rdx
0x00000000004a2d59 : loop 0x4a2d59 ; inc dword ptr [rax - 0x1c] ; clc ; jmp qword ptr [rax]
0x00000000004a2d79 : loop 0x4a2d75 ; call qword ptr [rax]
0x00000000004a2dfd : loop 0x4a2df9 ; jmp rax
0x00000000004b99e7 : loop 0x4b99b2 ; retf
0x00000000004bab3a : loop 0x4bab8f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042be62 : loope 0x42beb9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000433eba : loope 0x433eb5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000433eb9 : loope 0x433eb6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043b46b : loope 0x43b475 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043db5e : loope 0x43db55 ; ret
0x00000000004439cf : loope 0x4439da ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000465e0e : loope 0x465e23 ; je 0x465e34 ; ret
0x000000000046a23c : loope 0x46a1c9 ; ret 0xf631
0x00000000004785f7 : loope 0x478649 ; mov dword ptr [rdi], ecx ; ret
0x0000000000478628 : loope 0x47867b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000047869d : loope 0x4786f0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049e386 : loope 0x49e3e5 ; ret
0x00000000004a2bf8 : loope 0x4a2bc4 ; clc ; push qword ptr [rcx - 0x3e] ; clc ; inc dword ptr [rcx] ; ret
0x00000000004a2cd5 : loope 0x4a2cd1 ; jmp rax
0x00000000004a2d99 : loope 0x4a2d95 ; call rax
0x00000000004a2df9 : loope 0x4a2df9 ; push rax ; loop 0x4a2dfd ; jmp rax
0x00000000004b9af1 : loope 0x4b9b73 ; pop rdx ; leave ; retf
0x0000000000400d80 : loopne 0x400d97 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000412919 : loopne 0x412980 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004129c7 : loopne 0x412a2e ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414516 : loopne 0x41457a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416be5 : loopne 0x416c49 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ff4b : loopne 0x41ffad ; pop rbp ; pop r12 ; ret
0x0000000000425b9d : loopne 0x425c01 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000425c32 : loopne 0x425c96 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c11d : loopne 0x42c175 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f721 : loopne 0x42f738 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f720 : loopne 0x42f739 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f871 : loopne 0x42f888 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f870 : loopne 0x42f889 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f9c1 : loopne 0x42f9d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f9c0 : loopne 0x42f9d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fb11 : loopne 0x42fb28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fb10 : loopne 0x42fb29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fc61 : loopne 0x42fc78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fc60 : loopne 0x42fc79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fdb1 : loopne 0x42fdc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fdb0 : loopne 0x42fdc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ff01 : loopne 0x42ff18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ff00 : loopne 0x42ff19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043004f : loopne 0x430066 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043004e : loopne 0x430067 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004301a1 : loopne 0x4301b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004301a0 : loopne 0x4301b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004302f1 : loopne 0x430308 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004302f0 : loopne 0x430309 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430441 : loopne 0x430458 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430440 : loopne 0x430459 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430591 : loopne 0x4305a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430590 : loopne 0x4305a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004306e1 : loopne 0x4306f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004306e0 : loopne 0x4306f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430831 : loopne 0x430848 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430830 : loopne 0x430849 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430981 : loopne 0x430998 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430980 : loopne 0x430999 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431dc2 : loopne 0x431d8f ; jp 0x431e4b ; jp 0x431dbe ; ret
0x000000000043d2e5 : loopne 0x43d336 ; sub eax, edx ; vzeroupper ; ret
0x000000000043d2e4 : loopne 0x43d337 ; sub eax, edx ; vzeroupper ; ret
0x000000000043e9fc : loopne 0x43ea52 ; add byte ptr [rax], al ; ret
0x000000000043f79c : loopne 0x43f783 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x43f7ac ; call rbx
0x0000000000441bba : loopne 0x441c0d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000441e98 : loopne 0x441ead ; cmp eax, 4 ; je 0x441ea7 ; ret
0x0000000000441fe9 : loopne 0x441ffc ; pop rbp ; pop r12 ; ret
0x00000000004439d2 : loopne 0x443a32 ; pop rbp ; ret
0x0000000000451530 : loopne 0x4515af ; mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf -0x76b4
0x0000000000459f6d : loopne 0x459efa ; ret 0xe680
0x000000000046153b : loopne 0x46159f ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004618f3 : loopne 0x461955 ; pop rbp ; pop r12 ; ret
0x000000000046191d : loopne 0x46197f ; pop rbp ; pop r12 ; ret
0x0000000000461fdb : loopne 0x46203d ; pop rbp ; pop r12 ; ret
0x000000000046204d : loopne 0x4620af ; pop rbp ; pop r12 ; ret
0x000000000046361e : loopne 0x4635b7 ; mov eax, 0xffffffff ; ret
0x000000000047813d : loopne 0x478146 ; sub eax, 1 ; ret
0x00000000004a2948 : loopne 0x4a2953 ; clc ; inc dword ptr [rax] ; div edi ; call qword ptr [rax]
0x00000000004a2b6c : loopne 0x4a2b18 ; clc ; inc dword ptr [rax] ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004a2cf5 : loopne 0x4a2cf1 ; call rax
0x00000000004a2d75 : loopne 0x4a2d75 ; push qword ptr [rax] ; loop 0x4a2d79 ; call qword ptr [rax]
0x00000000004a2d95 : loopne 0x4a2d95 ; push rax ; loope 0x4a2d99 ; call rax
0x00000000004a3434 : loopne 0x4a34b3 ; stc ; inc dword ptr [rax] ; ja 0x4a343b ; jmp qword ptr [rax]
0x00000000004a3464 : loopne 0x4a34e7 ; stc ; inc dword ptr [rax] ; jnp 0x4a346b ; call qword ptr [rax]
0x00000000004b8114 : loopne 0x4b80f4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bd3d8 : loopne 0x4bd35d ; std ; call qword ptr [rax]
0x00000000004c34e0 : loopne 0x4c349c ; clc ; call qword ptr [rdi]
0x00000000004b7b2a : mov ah, 0x13 ; ret
0x00000000004a303c : mov ah, 0x19 ; stc ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x000000000043ea28 : mov ah, 0x50 ; add byte ptr [rax], al ; ret
0x00000000004b7fd0 : mov ah, 0xa5 ; ret
0x00000000004bd9ec : mov ah, 0xe9 ; std ; call qword ptr [rax]
0x00000000004b7924 : mov ah, bl ; push rsi ; ret
0x0000000000499836 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000457db8 : mov al, 0 ; add cl, ch ; ret
0x000000000045ec2c : mov al, 0x15 ; add al, r13b ; retf
0x00000000004a2ec8 : mov al, 0x18 ; stc ; inc dword ptr [rax + 0x18] ; stc ; call rsi
0x00000000004a30a0 : mov al, 0x1c ; stc ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004c8130 : mov al, 0x35 ; std ; call rdx
0x00000000004a2abc : mov al, 0x52 ; clc ; inc eax ; push rsp ; clc ; call rax
0x00000000004a3400 : mov al, 0x75 ; stc ; inc eax ; jne 0x4a3407 ; call rax
0x00000000004a3458 : mov al, 0x7a ; stc ; inc eax ; jp 0x4a345f ; call rax
0x00000000004a3484 : mov al, 0x7b ; stc ; call rax
0x00000000004a34a8 : mov al, 0x7c ; stc ; call rax
0x00000000004a34c8 : mov al, 0x7d ; stc ; call rax
0x00000000004a2cc0 : mov al, 0xc2 ; clc ; inc dword ptr [rax - 0x3d] ; clc ; jmp rax
0x00000000004a3304 : mov al, 0xe ; stc ; jmp qword ptr [rax]
0x00000000004b9dd6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000446a75 : mov al, 0xf ; retf -0x2d7b
0x00000000004a3100 : mov al, 0xf ; stc ; jmp qword ptr [rax]
0x00000000004bf0dd : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c5275 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c64f5 : mov al, byte ptr [rax] ; add al, ch ; or bh, bl ; jmp rsi
0x0000000000438c66 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000438c84 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043a3f0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000438c40 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040fa2f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000438c50 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000434c81 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004b9e60 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000044c71b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044c29e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043b308 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000046a026 : mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf -0x7cb8
0x00000000004ba138 : mov bh, 0x4e ; retf -0x6283
0x0000000000467b90 : mov bh, 0x84 ; adc bl, byte ptr [rsi - 0x42] ; add byte ptr [r8 - 0x77], cl ; ret
0x0000000000466a8f : mov bh, 0x8c ; add byte ptr [rsi - 0x42], bl ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004b8e04 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004b73e6 : mov bh, 0xc8 ; leave ; retf -0x3335
0x00000000004c34f9 : mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c34e1 : mov bh, 0xf8 ; call qword ptr [rdi]
0x000000000042082c : mov bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00000000004c20d8 : mov bh, 1 ; ret
0x0000000000467d9b : mov bh, 5 ; mov edi, 0x89002644 ; ret 0xe883
0x00000000004ba513 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004bd3ed : mov bh, ch ; call rax
0x0000000000446248 : mov bh, dl ; push rax ; add byte ptr [rax - 0x7f], cl ; ret 0x50e0
0x000000000043cbfe : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004ba19b : mov bl, 0x29 ; retf -0x40b5
0x00000000004665fc : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047d979 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004b9ee3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004ba180 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004c62a8 : mov bl, ah ; cli ; jmp qword ptr [rdx]
0x00000000004b7b01 : mov bx, 0xf32d ; retf
0x000000000041bfd0 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000041181c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004b138c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000041bfd1 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x000000000041d358 : mov byte ptr [rax + rbx], cl ; pop rbx ; ret
0x000000000041d357 : mov byte ptr [rax + rbx], r9b ; pop rbx ; ret
0x0000000000446968 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000041181d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004c634d : mov byte ptr [rax], al ; add al, al ; out dx, al ; cli ; jmp qword ptr [rdx]
0x000000000047b192 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044bf53 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004c4d98 : mov byte ptr [rax], bl ; cli ; jmp qword ptr [rax]
0x0000000000451532 : mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf -0x76b4
0x00000000004c10a8 : mov byte ptr [rcx], al ; ret
0x00000000004c7ef8 : mov byte ptr [rcx], bl ; std ; jmp rsp
0x000000000043b058 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043a9c8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b0ce : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043aa1e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b150 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043aaa0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043af06 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043a8e6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043af22 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043a902 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043a943 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004ba195 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf -0x40b5
0x0000000000430d4b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000431ecc : mov byte ptr [rdi], cl ; ret
0x000000000043aee0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043a8c0 : mov byte ptr [rdi], dh ; ret
0x0000000000434cf3 : mov byte ptr [rdi], dl ; ret
0x000000000043a419 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000438c69 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043a447 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000438c87 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000483a57 : mov byte ptr [rdx], 0x30 ; jmp 0x4804f2
0x000000000043a3f2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000438c42 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004c6ac8 : mov byte ptr [rdx], ch ; sti ; call rsp
0x00000000004402e4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049a1e0 : mov byte ptr [rip + 0x2322f9], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2ca1f5], 1 ; ret
0x00000000004bf548 : mov byte ptr [rsi - 0xb], dl ; jmp qword ptr [rcx]
0x0000000000451903 : mov byte ptr [rsi], al ; jne 0x4518e7 ; mov rax, rsi ; ret
0x000000000046708a : mov byte ptr [rsi], ch ; ret 0x6c
0x000000000045187f : mov byte ptr [rsi], dl ; jne 0x45186f ; mov rax, rsi ; ret
0x000000000047a087 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b7922 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b8c63 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b98f6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004b9fff : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004ba9aa : mov ch, 0xab ; ret
0x000000000042ea86 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004255eb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400f08 : mov cl, 0x2c ; add dh, dh ; ret 0x7420
0x000000000040eacb : mov cl, 0x35 ; lahf ; retf 0x2b
0x000000000041cc0b : mov cl, 0x35 ; out dx, eax ; retf
0x00000000004681b0 : mov cl, 0x35 ; retf 0x2640
0x00000000004452a0 : mov cl, 0x35 ; retf 0x2879
0x000000000040ead6 : mov cl, 0x35 ; xchg eax, esp ; retf 0x2b
0x000000000044205b : mov cl, 0x3d ; fild qword ptr [rdx + 0x39480028] ; ret 0xda75
0x00000000004ba401 : mov cl, 0x3f ; retf
0x00000000004414cb : mov cl, 0xc0 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004178cf : mov cl, 1 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x4178f6
0x000000000044eb9b : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000413269 : mov cl, byte ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x0000000000428605 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000487b1a : mov cl, byte ptr [rcx + 0x24] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000420bb4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004b9dd2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000431eca : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000465e0b : mov cl, dl ; and cl, 0xf ; je 0x465e37 ; ret
0x00000000004ba08c : mov cs, edi ; ret 0x8b36
0x000000000042aa3e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043a8e0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000049c60f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000411cfe : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415000 : mov dh, 0 ; pop rbx ; ret
0x0000000000412f7b : mov dh, 0 ; ret
0x0000000000434cf1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004257c4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dc00 : mov dh, 0x17 ; test dl, dl ; jne 0x40dbe6 ; ret
0x000000000046168e : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040db35 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x0000000000461cc3 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043c7d1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043c7c1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043c791 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043c7b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043c7a1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000004482f0 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004437b7 : mov dh, 0x4b ; add al, 0x89 ; retf -0x1540
0x000000000049991c : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b8dc2 : mov dh, 0x4e ; ret 0x474c
0x000000000046d085 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462269 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043c7d5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043c7c5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043c795 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043c7a5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045cac7 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045ca4a : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000044775c : mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf -0x7bc0
0x000000000046dba7 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044e4af : mov dh, 0xb2 ; fcomp dword ptr [rax + 0x4a] ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000044ee3d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000049a896 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000047a75d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047a507 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a436 : mov dh, 0xc0 ; ret
0x000000000043d9d8 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043da00 : mov dh, 0xc2 ; pop rbx ; ret
0x0000000000413e3e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ba004 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004996e3 : mov dh, 0xc9 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, rax ; jmp rcx
0x000000000048841c : mov dh, 0xcc ; add r8b, bpl ; retf
0x00000000004257ea : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049ad20 : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000421f61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042db64 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000465fe2 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000414c9e : mov dh, 2 ; pop rbx ; ret
0x0000000000411d11 : mov dh, 2 ; ret
0x000000000042db61 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004257c1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000421f64 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000040f9f4 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043db5c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004a2f74 : mov dl, 0x1a ; stc ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x000000000044e4b0 : mov dl, 0xd8 ; pop rax ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004c3449 : mov dl, 0xf8 ; call qword ptr [rdi]
0x000000000043eeba : mov dl, 2 ; add bl, ch ; retf 0x4890
0x0000000000430dd0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004c0bc8 : mov dl, dh ; cmc ; call qword ptr [rdx]
0x000000000048d4b5 : mov ds, word ptr [rdx + rcx + 0x708d0000] ; retf
0x00000000004ba41e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000047c074 : mov dword ptr [0x2d0], eax ; ret
0x000000000047ad1c : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000418a63 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000469763 : mov dword ptr [r12], 1 ; jmp 0x469738
0x000000000044a088 : mov dword ptr [r12], eax ; mov r12, rsi ; jmp 0x44a064
0x0000000000400d82 : mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000465f57 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000434e76 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000434e61 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000004631e9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463229 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464189 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000004631ed : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464227 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446258 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000044625b : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004155ea : mov dword ptr [rax + 8], 0 ; ret
0x0000000000442506 : mov dword ptr [rax + 8], edx ; ret
0x0000000000425dce : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000047fcc2 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044d2d8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041b8be : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041bfe8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x0000000000469c78 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000400d83 : mov dword ptr [rax], eax ; pop rbx ; ret
0x0000000000463715 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000486898 : mov dword ptr [rax], edi ; jmp 0x486861
0x000000000047a6b5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000483093 : mov dword ptr [rax], edx ; jmp 0x48305c
0x0000000000463655 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047a6a9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000049ba03 : mov dword ptr [rax], edx ; ret
0x00000000004644a1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000400a33 : mov dword ptr [rbp - 0x34], eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000000004418aa : mov dword ptr [rbp - 0x40], esp ; syscall
0x000000000045d302 : mov dword ptr [rbp - 0x470], eax ; call 0x459dc8
0x00000000004418a6 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000456353 : mov dword ptr [rbp - 0x4e0], ecx ; call 0x462dd8
0x00000000004546d8 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000484cf3 : mov dword ptr [rbp - 0x5a0], edx ; jmp 0x484ccc
0x0000000000402a9b : mov dword ptr [rbp - 0x76b7ffd4], eax ; ret 0x8348
0x0000000000471cb1 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x0000000000471e9a : mov dword ptr [rbp - 0xa8], esi ; call rax
0x00000000004591af : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471460 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000490e51 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000411a42 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411a41 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044cbd1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000477d35 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411b17 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046a058 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46a02e
0x0000000000477d6e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000473d6f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412319 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000477cd3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487675 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000416385 : mov dword ptr [rbx + 0x18], edx ; mov rdx, rcx ; jmp 0x416371
0x0000000000414b33 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c0b3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044ee3f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414bae : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000416331 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413192 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463274 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000464088 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411aa7 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000414e65 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044cbe7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000414ffc : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000465bb3 : mov dword ptr [rbx - 5], edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000047d756 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000414f0c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000487d99 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000046418c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000414b36 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000465f58 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000434e77 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000434e62 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000434e51 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044699d : mov dword ptr [rcx], 0x39480000 ; retf
0x000000000046a95c : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000484bb9 : mov dword ptr [rcx], eax ; jmp 0x484b82
0x00000000004c7382 : mov dword ptr [rcx], eax ; ret
0x000000000041771d : mov dword ptr [rcx], edx ; mov rax, rdx ; ret
0x000000000043b06d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b0ab : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043b12d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043aa1b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043aa9d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043a9dd : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043aae0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043ab00 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043aac1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043b193 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043aae3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414ac3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043b175 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b1b3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043aac5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000466bdd : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470445 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470417 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042c091 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414af3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000418640 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049ba61 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043b0ed : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043aa3d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043b08b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043b10d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043a9fb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000434b35 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434978 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434c18 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000434ac5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434908 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043af57 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000434a55 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434898 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a927 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000418643 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043af39 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000434828 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a919 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043afeb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004347b8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a98b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043b00b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000434748 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a99b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043afa9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b02b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004346d8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a969 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414ac7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000478734 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043afc9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043af8b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000479af4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043a95b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000431ec3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x0000000000425dd5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000425dde : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049ba1b : mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000430a95 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430ad3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047869f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000430e1c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434188 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430ffc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434108 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004311ec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434088 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004313bd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433ff9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315bd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433f69 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004317bd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433ed9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000043119d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000430fb5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431199 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431579 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430c4f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000431576 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431776 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431976 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430a99 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000430ad7 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000430c4c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430d48 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430c94 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434208 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000478624 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000047872e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045bc36 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043af25 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043af77 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043af04 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043a8e4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043af55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043a925 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043afa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043a967 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043afc7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043a977 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000425dd3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043d269 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043a988 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043a998 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043a9a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000425ddb : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043a916 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043a958 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043d276 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042be67 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043aef4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043af12 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043af64 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004349e4 : mov dword ptr [rdi], edx ; ret
0x0000000000434e5f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000431eab : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000479c9d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000434e4e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000431e8e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000434e73 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000431ec0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000479cc3 : mov dword ptr [rdi], esi ; ret
0x000000000042f6b2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000040f9f3 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042c11f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ad1d : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043a477 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000438ca7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043a459 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000438c99 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043a50b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043a489 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000438cb9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043a52b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043a4a9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000438cc9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043a4c9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043a54b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000438cd9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043a4e9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043a3db : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000438c2b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416486 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047a0c4 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046a4df : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000041a616 : mov dword ptr [rdx], eax ; jmp 0x41a48d
0x000000000043a404 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000043a432 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000043a384 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004122c1 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc8a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000479c9f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000412b20 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000438bd4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047a695 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004163f2 : mov dword ptr [rdx], eax ; ret
0x0000000000463536 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049e37f : mov dword ptr [rip + 0x22d1fb], ebx ; jne 0x49e371 ; pop rbx ; ret
0x000000000044ec85 : mov dword ptr [rip + 0x27bdad], edx ; je 0x44ec99 ; ret
0x0000000000443906 : mov dword ptr [rip + 0x28568c], edx ; pop rbx ; ret
0x00000000004015ba : mov dword ptr [rip + 0x2c7ad0], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2c99a5], eax ; pop rbp ; pop r12 ; ret
0x0000000000401467 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000049d757 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043d279 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043d26b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046d791 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049ba4b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000473782 : mov dword ptr [rsi], eax ; ret
0x0000000000401464 : mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049c143 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041ae5b : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000418a64 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041ae56 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047b470 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047b673 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047b5c2 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x000000000040924f : mov dword ptr [rsp + 8], eax ; call 0x405cb6
0x000000000043fa26 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041af12 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x000000000047797e : mov dword ptr [rsp + 8], esi ; mov edi, 0x6ca140 ; call rax
0x0000000000491086 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044edb5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000469764 : mov dword ptr [rsp], 1 ; jmp 0x469737
0x00000000004099b9 : mov dword ptr [rsp], eax ; call 0x405cb5
0x000000000043e9d7 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x000000000046a577 : mov dword ptr [rsp], eax ; mov eax, 0x14 ; syscall
0x000000000043ea37 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x000000000043e977 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x000000000046a3e7 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x000000000044a089 : mov dword ptr [rsp], eax ; mov r12, rsi ; jmp 0x44a063
0x000000000044176b : mov dword ptr [rsp], eax ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000041af17 : mov dword ptr [rsp], ecx ; call rdx
0x00000000004091c3 : mov dword ptr [rsp], edx ; call 0x405cb5
0x000000000047c073 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044d2d7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041bfe7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000469c77 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000486897 : mov dword ptr fs:[rax], edi ; jmp 0x486862
0x0000000000483092 : mov dword ptr fs:[rax], edx ; jmp 0x48305d
0x000000000046a52c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000484bb8 : mov dword ptr fs:[rcx], eax ; jmp 0x484b83
0x000000000047a0c3 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00000000004122c0 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc89 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000431eaa : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000430fb0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043a8d0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000043e9b9 : mov eax, 0 ; syscall
0x000000000043daa9 : mov eax, 0x10 ; pop rbx ; ret
0x000000000043ede0 : mov eax, 0x101 ; syscall
0x000000000046a353 : mov eax, 0x106 ; syscall
0x000000000046a559 : mov eax, 0x14 ; syscall
0x000000000046a3a0 : mov eax, 0x15 ; syscall
0x00000000004205f4 : mov eax, 0x16 ; je 0x420607 ; ret
0x0000000000420790 : mov eax, 0x16 ; ret
0x000000000043e860 : mov eax, 0x18 ; syscall
0x0000000000441d43 : mov eax, 0x19 ; syscall
0x000000000043f4e0 : mov eax, 0x1c ; syscall
0x000000000043daa2 : mov eax, 0x20 ; pop rbx ; ret
0x00000000004996a0 : mov eax, 0x26 ; syscall
0x000000000043da9b : mov eax, 0x30 ; pop rbx ; ret
0x000000000046a290 : mov eax, 0x3f ; syscall
0x000000000043da94 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000425c89 : mov eax, 0x434d10 ; ret
0x000000000042535c : mov eax, 0x43ccd0 ; cmove rax, rdx ; ret
0x00000000004b7f1b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000043ea9c : mov eax, 0x48 ; syscall
0x000000000042623a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043ec63 : mov eax, 0x4f ; syscall
0x000000000043da8d : mov eax, 0x60 ; pop rbx ; ret
0x000000000043f2c0 : mov eax, 0x61 ; syscall
0x0000000000441d60 : mov eax, 0x63 ; syscall
0x000000000046a2b0 : mov eax, 0x66 ; syscall
0x000000000046a2d0 : mov eax, 0x68 ; syscall
0x000000000046a2c0 : mov eax, 0x6b ; syscall
0x000000000046a2e0 : mov eax, 0x6c ; syscall
0x0000000000417db3 : mov eax, 0x6c9800 ; ret
0x000000000046f0d7 : mov eax, 0x6ca1e0 ; call rdx
0x000000000043da86 : mov eax, 0x80 ; pop rbx ; ret
0x00000000004746ee : mov eax, 0x83004bbd ; ret
0x000000000047e0b7 : mov eax, 0x89459673 ; retf
0x0000000000410e51 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046c68f : mov eax, 0x9e ; syscall
0x000000000043f4c0 : mov eax, 0xa ; syscall
0x000000000043f4a0 : mov eax, 0xb ; syscall
0x000000000040dc37 : mov eax, 0xba ; syscall
0x00000000004418a8 : mov eax, 0xc065894c ; syscall
0x0000000000466970 : mov eax, 0xc9 ; syscall
0x0000000000441dd5 : mov eax, 0xca ; syscall
0x000000000044f0d9 : mov eax, 0xe ; syscall
0x000000000043e247 : mov eax, 0xe5 ; syscall
0x000000000040dc4e : mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000044ee61 : mov eax, 0xf ; syscall
0x000000000041f616 : mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000400541 : mov eax, 0xffffffff ; cmovle eax, ecx ; jmp 0x40051e
0x00000000004169e0 : mov eax, 0xffffffff ; jmp 0x4169b7
0x0000000000410fef : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000045112e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410e39 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411ab1 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc8c : mov eax, 0xffffffff ; ret
0x0000000000479cbd : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415462 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043dfdb : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000004438c6 : mov eax, 1 ; ret
0x00000000004003d5 : mov eax, 1 ; syscall
0x0000000000465e71 : mov eax, 2 ; ret
0x000000000040042f : mov eax, 2 ; syscall
0x000000000049de23 : mov eax, 3 ; je 0x49de38 ; ret
0x0000000000469cc2 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004122a4 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000465e81 : mov eax, 3 ; ret
0x0000000000400489 : mov eax, 3 ; syscall
0x0000000000465e91 : mov eax, 4 ; ret
0x000000000043e8be : mov eax, 4 ; syscall
0x0000000000465ea1 : mov eax, 5 ; ret
0x000000000043e90d : mov eax, 5 ; syscall
0x0000000000465eb1 : mov eax, 6 ; ret
0x000000000046a2fe : mov eax, 6 ; syscall
0x0000000000465ec1 : mov eax, 7 ; ret
0x000000000043da7f : mov eax, 8 ; pop rbx ; ret
0x000000000049c24d : mov eax, 8 ; ret
0x0000000000441d20 : mov eax, 8 ; syscall
0x000000000043f453 : mov eax, 9 ; movsxd r10, r10d ; syscall
0x000000000043f413 : mov eax, 9 ; syscall
0x000000000046356c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414bec : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410b63 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414dc8 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004150e8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00000000004872f3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000041540c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000004645d4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047e1ed : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000477b51 : mov eax, dword ptr [rax + 8] ; ret
0x000000000047375a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x473739 ; ret
0x000000000044eccf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000454ab2 : mov eax, dword ptr [rax*8 + 0x4b2480] ; jmp rax
0x0000000000454b03 : mov eax, dword ptr [rax*8 + 0x4b2580] ; jmp rax
0x0000000000456bf3 : mov eax, dword ptr [rax*8 + 0x4b2680] ; jmp rax
0x0000000000455726 : mov eax, dword ptr [rax*8 + 0x4b2980] ; jmp rax
0x000000000045f921 : mov eax, dword ptr [rax*8 + 0x4b2e00] ; jmp rax
0x0000000000460c45 : mov eax, dword ptr [rax*8 + 0x4b2f00] ; jmp rax
0x0000000000461129 : mov eax, dword ptr [rax*8 + 0x4b3000] ; jmp rax
0x000000000045f9b7 : mov eax, dword ptr [rax*8 + 0x4b3300] ; jmp rax
0x0000000000499801 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000499711 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x0000000000474099 : mov eax, dword ptr [rax] ; ret
0x000000000043febc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000444ac7 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x00000000004755a5 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471251 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047a6b1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000438ca4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000438cb6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000438cc6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000438cd6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000438ce6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004288aa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042a182 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043a430 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000438c70 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043a381 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000438bd1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043a401 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000438c51 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000046441f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000416400 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000416428 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000049fea8 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x49febf ; call rax
0x00000000004645d1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416731 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000479e98 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x479eb0 ; ret
0x000000000049b9d1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049ba31 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049ba71 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049bad1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049bac1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049ba81 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044d2ec : mov eax, dword ptr [rdi*8 + 0x6caa40] ; ret
0x0000000000477ae1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x477af7 ; ret
0x00000000004163ef : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049d7f5 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d807 ; ret
0x000000000049d810 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49d827 ; ret
0x000000000049da20 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49da37 ; ret
0x000000000043db57 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43db49 ; ret
0x0000000000428606 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000410ae0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000463717 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000410020 : mov eax, dword ptr [rdx] ; ret
0x00000000004163e1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x4163e0 ; ret
0x0000000000487d60 : mov eax, dword ptr [rip + 0x244e9a] ; ret
0x000000000047377b : mov eax, dword ptr [rip + 0x258f67] ; mov qword ptr [rsi], rax ; ret
0x000000000047371a : mov eax, dword ptr [rip + 0x258fd0] ; ret
0x000000000044c1a1 : mov eax, dword ptr [rip + 0x27fed1] ; ret
0x0000000000444e31 : mov eax, dword ptr [rip + 0x287e31] ; ret
0x0000000000416711 : mov eax, dword ptr [rip + 0x2b29a9] ; ret
0x000000000049c2b8 : mov eax, dword ptr [rsi + 0x10] ; ret
0x0000000000499871 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x0000000000499834 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x0000000000499861 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000047360c : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049c2e9 : mov eax, dword ptr [rsi + 8] ; ret
0x0000000000463657 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049baa6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400cc0 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000446aca : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044742d : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e0f7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000477f6c : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000477ded : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043dc14 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474098 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041c355 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000459c50 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041bfd5 : mov eax, eax ; pop rbx ; ret
0x0000000000431fa5 : mov eax, eax ; ret
0x0000000000477082 : mov eax, eax ; sub eax, ecx ; ret
0x000000000041a463 : mov eax, eax ; syscall
0x0000000000412a8a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451e24 : mov eax, ebp ; jmp 0x451df5
0x000000000046282b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000462e79 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462e4c : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f723 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410e56 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000400469 : mov eax, ebp ; syscall
0x0000000000479c33 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004131fd : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474368 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004656a9 : mov eax, ebx ; jmp 0x465503
0x000000000040fa89 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fb6e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f32e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411b1b : mov eax, ebx ; pop rbx ; ret
0x00000000004419a8 : mov eax, ebx ; syscall
0x0000000000479af7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046a885 : mov eax, ecx ; jne 0x46a8dd ; ret
0x000000000046cf03 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46ced9
0x000000000041b8c5 : mov eax, ecx ; ret
0x0000000000469b88 : mov eax, ecx ; sub rsp, 0x98 ; syscall
0x000000000040389b : mov eax, ecx ; syscall
0x0000000000416741 : mov eax, edi ; ret
0x000000000044e514 : mov eax, edi ; syscall
0x000000000048761e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047a823 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041d138 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000471d9f : mov eax, edx ; call rax
0x000000000047c04b : mov eax, edx ; jle 0x47c05d ; ret
0x00000000004625eb : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045ba3a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041dc22 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004179f8 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f910 : mov eax, edx ; pop rbx ; ret
0x0000000000417720 : mov eax, edx ; ret
0x00000000004004a6 : mov eax, edx ; syscall
0x00000000004780f7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046a0a3 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487448 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ebe4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000451884 : mov eax, esi ; ret
0x000000000043d2fb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000043e023 : mov eax, esi ; syscall
0x0000000000414515 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ff4a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004416e4 : mov eax, esp ; syscall
0x00000000004004a5 : mov eax, r10d ; syscall
0x0000000000414514 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004416e3 : mov eax, r12d ; syscall
0x0000000000412509 : mov eax, r13d ; syscall
0x000000000044e513 : mov eax, r15d ; syscall
0x0000000000459c4f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000459b89 : mov eax, r8d ; ret
0x0000000000477081 : mov eax, r8d ; sub eax, ecx ; ret
0x000000000041a462 : mov eax, r8d ; syscall
0x0000000000411623 : mov eax, r9d ; syscall
0x000000000044ec88 : mov ebp, 0x3740027 ; ret
0x00000000004b9e14 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x0000000000467287 : mov ebp, 0x83000001 ; call 0xffffffffc40dbaca
0x00000000004830ce : mov ebp, 0x89000019 ; retf 0x348
0x00000000004adb84 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b73dd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000464ff8 : mov ebp, 0xf80148c0 ; ret
0x000000000046527c : mov ebp, 0xf80148c6 ; ret
0x00000000004b8b46 : mov ebp, 0xfb67d10d ; ret
0x0000000000454c6c : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004551f1 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045c75f : mov ebp, 0xfffffb60 ; call rax
0x0000000000475a3f : mov ebp, 0xffffff78 ; call rax
0x000000000044351d : mov ebp, dword ptr [rax] ; add cl, ch ; ret
0x000000000049bd4a : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000043f517 : mov ebp, eax ; call rax
0x0000000000473326 : mov ebp, eax ; jmp 0x4732f7
0x000000000041edf2 : mov ebp, ebp ; call 0x42b854
0x000000000043feb9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004780fd : mov ebp, ecx ; nop ; jmp rdx
0x000000000047ccf7 : mov ebp, edi ; mov r15, rax ; jmp 0x47cd13
0x00000000004402bf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000486616 : mov ebp, esi ; jmp 0x4865e7
0x000000000041f5b5 : mov ebx, 0x10002aa1 ; ret 0x41
0x00000000004b9b64 : mov ebx, 0x1b5c347e ; jmp 0x4b9b3c
0x00000000004343c7 : mov ebx, 0x46f00ff2 ; retf
0x0000000000473321 : mov ebx, 0x48fffcc0 ; mov ebp, eax ; jmp 0x4732fc
0x000000000047eb5b : mov ebx, 0x4bc2a0 ; jmp 0x47eb32
0x00000000004313d4 : mov ebx, 0x4e6f0ff3 ; retf
0x00000000004313f2 : mov ebx, 0x4f7f0ff3 ; retf
0x000000000040221d : mov ebx, 0x80 ; call rax
0x0000000000441e34 : mov ebx, 0xafb8341 ; je 0x441e43 ; ret
0x00000000004a2bd1 : mov ebx, 0xbc01fff8 ; clc ; call rcx
0x00000000004a2bb1 : mov ebx, 0xbc12fff8 ; clc ; jmp rdx
0x00000000004a2bc1 : mov ebx, 0xbc30fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b73db : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000445406 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x4453e9 ; jmp 0x4453db
0x00000000004ba184 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000476229 : mov ebx, dword ptr [rsp] ; add rsp, 0x18 ; jmp r11
0x0000000000476598 : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x00000000004766aa : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x00000000004402c6 : mov ebx, eax ; call rax
0x0000000000447901 : mov ebx, eax ; jmp 0x4478d3
0x000000000044f1cf : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044e6c6 : mov ebx, edi ; test rax, rax ; je 0x44e6d6 ; call rax
0x000000000046a173 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047c066 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004be914 : mov ecx, 0x41380e0a ; ret
0x00000000004b8019 : mov ecx, 0x5b92ac50 ; retf
0x00000000004b9aee : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004b73d9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000046a4f0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000403894 : mov ecx, 2 ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000434e5c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042f205 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x00000000004645ab : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000428603 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004b9fa4 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4b9fd9 ; retf 0x32dd
0x0000000000431573 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431773 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431973 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043a900 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043a941 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000434b33 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434ac3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434a53 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000434975 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434905 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434895 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434825 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004347b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434745 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004346d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434c15 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043a8e1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000472c6d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000477c47 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000477bd5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000466738 : mov ecx, edi ; call rbx
0x000000000046cf06 : mov ecx, edi ; mov r15, rax ; jmp 0x46ced6
0x0000000000431fc1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000431fc4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000415407 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004440fb : mov ecx, esi ; call rbx
0x00000000004735f3 : mov ecx, esi ; cmp rcx, rdx ; jne 0x4735d8 ; ret
0x000000000049ace0 : mov edi, 0x148015b ; retf
0x0000000000441612 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x0000000000441b90 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000004411cd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000041a660 : mov edi, 0x4a1a48 ; call 0x417157
0x000000000041a67f : mov edi, 0x4a1a77 ; call 0x417157
0x00000000004419a3 : mov edi, 0x4a433d ; mov eax, ebx ; syscall
0x00000000004419d2 : mov edi, 0x4a4348 ; mov eax, ebx ; syscall
0x000000000044c1e0 : mov edi, 0x4a5788 ; mov eax, ecx ; syscall
0x000000000044eb15 : mov edi, 0x4a6280 ; mov eax, ecx ; syscall
0x0000000000455593 : mov edi, 0x4b22e8 ; call 0x4017f7
0x00000000004554f6 : mov edi, 0x4b2318 ; call 0x4017f7
0x000000000040095c : mov edi, 0x4bdac8 ; call rax
0x0000000000470486 : mov edi, 0x6ca100 ; call rax
0x00000000004704f2 : mov edi, 0x6ca100 ; pop rbx ; pop rbp ; jmp rax
0x0000000000477b0f : mov edi, 0x6ca140 ; add rsp, 8 ; jmp rax
0x00000000004435d5 : mov edi, 0x6ca140 ; call rax
0x000000000047602f : mov edi, 0x6ca140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cab50 ; jmp rax
0x0000000000402f95 : mov edi, 0x6cafe0 ; call rax
0x0000000000402c9f : mov edi, 0x6cafe0 ; call rbx
0x0000000000402d46 : mov edi, 0x6cb060 ; call rax
0x00000000004035ec : mov edi, 0x6cb0a0 ; call r15
0x00000000004035a4 : mov edi, 0x6cb0a0 ; call rax
0x0000000000444ed1 : mov edi, 0x6cc050 ; call rax
0x000000000043dc4a : mov edi, 0x6cc0a0 ; call rax
0x0000000000402c98 : mov edi, 0x6cc0a0 ; call rbx
0x000000000047a272 : mov edi, 0x6cc340 ; call rax
0x000000000047a39d : mov edi, 0x6cc344 ; call rdx
0x0000000000467d9d : mov edi, 0x89002644 ; ret 0xe883
0x00000000004415f6 : mov edi, 0x8b48fffd ; jge 0x441604 ; call rbx
0x00000000004415e8 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x00000000004415da : mov edi, 0x8b49fffd ; jge 0x4415e8 ; call rbx
0x00000000004a2be9 : mov edi, 0xc051fff8 ; clc ; call rcx
0x000000000049b71a : mov edi, 1 ; call r14
0x00000000004016d7 : mov edi, 1 ; call rax
0x000000000049bfec : mov edi, 1 ; jmp rax
0x00000000004099b5 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405cb9
0x00000000004099dc : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405cb9
0x00000000004099c6 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405cb9
0x000000000043fa23 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045c75e : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x0000000000475a3e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049bca9 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000465fe5 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e07d : mov edi, dword ptr [rbp] ; call r14
0x000000000043f67a : mov edi, dword ptr [rbp] ; call rbx
0x00000000004765c8 : mov edi, dword ptr [rdi + 0x28] ; call r11
0x000000000043f628 : mov edi, dword ptr [rdi] ; call rbx
0x000000000044e368 : mov edi, dword ptr [rdi] ; syscall
0x0000000000464598 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464564
0x00000000004b8e06 : mov edi, dword ptr [rdx] ; ret
0x000000000047a5b8 : mov edi, dword ptr [rip + 0x251d86] ; call rax
0x000000000047a47b : mov edi, dword ptr [rip + 0x251ec3] ; jmp rax
0x000000000043f5e7 : mov edi, dword ptr [rsi] ; call rbx
0x00000000004467d1 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000043fb0f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000446ac5 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447428 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044b01a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x000000000044780e : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000446f45 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x0000000000447c70 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x00000000004465d2 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000446ff9 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044a85a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000448e78 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004492b8 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004114a4 : mov edi, dword ptr [rsp + 0x38] ; mov rsi, r13 ; call 0x41d749
0x00000000004481f8 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x000000000044859f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400c67 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400cbb : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004417b0 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000043fa70 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049d5e2 : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r14 + rbp*8 + 0x10] ; call rbx
0x0000000000472f48 : mov edi, eax ; call 0x400359
0x0000000000408692 : mov edi, eax ; call 0x41d588
0x000000000042079a : mov edi, eax ; call rcx
0x000000000046cf09 : mov edi, eax ; jmp 0x46ced3
0x000000000047ccfa : mov edi, eax ; jmp 0x47cd10
0x000000000045187d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x451871 ; mov rax, rsi ; ret
0x0000000000400487 : mov edi, eax ; mov eax, 3 ; syscall
0x0000000000400467 : mov edi, eax ; mov eax, ebp ; syscall
0x000000000043e1b1 : mov edi, eax ; mov eax, r9d ; syscall
0x000000000041edef : mov edi, eax ; mov rbp, r13 ; call 0x42b857
0x0000000000469327 : mov edi, eax ; mov rsi, r14 ; call 0x425df7
0x000000000041fb38 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004416de : mov edi, eax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049e4ac : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000041b6b0 : mov edi, ebp ; call 0x418174
0x000000000047dad6 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e2bc : mov edi, ebp ; call r14
0x000000000044f217 : mov edi, ebp ; call r15
0x000000000041e056 : mov edi, ebp ; call rax
0x0000000000440310 : mov edi, ebp ; call rbx
0x000000000043ec61 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000044e511 : mov edi, ebp ; mov eax, r15d ; syscall
0x000000000044e622 : mov edi, ebp ; mov eax, r8d ; syscall
0x000000000044f794 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041ea17 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000044e5f0 : mov edi, ebp ; xor eax, eax ; syscall
0x000000000044c157 : mov edi, ebx ; call r12
0x00000000004443cd : mov edi, ebx ; call r14
0x0000000000461f99 : mov edi, ebx ; call r8
0x00000000004120d7 : mov edi, ebx ; call rax
0x0000000000444f91 : mov edi, ebx ; jmp 0x444f5b
0x000000000049e213 : mov edi, ebx ; jne 0x49e205 ; pop rbx ; ret
0x00000000004003d3 : mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004004a3 : mov edi, ebx ; mov eax, r10d ; syscall
0x0000000000414c54 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414dc4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000041a48c : mov edi, ecx ; mov eax, 3 ; syscall
0x000000000041a460 : mov edi, ecx ; mov eax, r8d ; syscall
0x00000000004412c7 : mov edi, edi ; call 0x41d584
0x00000000004104c5 : mov edi, edi ; call rax
0x0000000000440354 : mov edi, edi ; call rbx
0x00000000004648f4 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000004c5a39 : mov edi, edx ; call rsi
0x0000000000451901 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4518e9 ; mov rax, rsi ; ret
0x000000000043e021 : mov edi, edx ; mov eax, esi ; syscall
0x000000000043e031 : mov edi, edx ; mov eax, r8d ; syscall
0x000000000044130c : mov edi, esi ; call 0x41d584
0x000000000045c046 : mov edi, esi ; call 0x425df9
0x0000000000444a1e : mov edi, esi ; call r15
0x0000000000440334 : mov edi, esi ; call rbx
0x00000000004118a7 : mov edi, esi ; mov eax, r9d ; syscall
0x000000000044f1d2 : mov edi, esp ; call r15
0x00000000004402eb : mov edi, esp ; call rbx
0x0000000000403948 : mov edi, esp ; mov eax, 3 ; syscall
0x000000000043f411 : mov edi, esp ; mov eax, 9 ; syscall
0x0000000000403b6c : mov edi, esp ; mov eax, r10d ; syscall
0x0000000000411621 : mov edi, esp ; mov eax, r9d ; syscall
0x0000000000466735 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000444ac4 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000472bb9 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000472bb8 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000425c7f : mov edx, 0x42f180 ; cmove rax, rdx ; ret
0x0000000000434347 : mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004315d4 : mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x00000000004315f2 : mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x0000000000441cb6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004b82be : mov edx, 0xcac982a4 ; call 0xffffffffaf0e213e
0x000000000049a633 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000446317 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000046b35a : mov edx, 1 ; jmp 0x46b332
0x0000000000444140 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463538 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047a691 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004120d0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000416381 : mov edx, dword ptr [rbx + 0x50] ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416375
0x000000000042a17f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004288ad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047a6a5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004104be : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049d3d9 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x0000000000471d98 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043a922 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043a913 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043a963 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043a973 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000430fb1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431370 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430c01 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043af10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000434ba0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043af61 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004349e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043aef1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043a8d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041d969 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049b669 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x00000000004178d4 : mov edx, eax ; jmp 0x4178f1
0x0000000000420830 : mov edx, eax ; jmp 0x4207fb
0x00000000004690f6 : mov edx, eax ; jmp 0x4690ff
0x000000000046aac5 : mov edx, eax ; jmp 0x46aaba
0x000000000044176f : mov edx, eax ; mov eax, r12d ; syscall
0x000000000044f797 : mov edx, ebp ; call r15
0x000000000047dad1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047da91 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044f211 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000469319 : mov edx, ebp ; mov rsi, r15 ; call 0x425df7
0x000000000046e0f6 : mov edx, ebp ; mov rsi, r15 ; call 0x46ab57
0x000000000044f22c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000049e43f : mov edx, ebx ; jne 0x49e436 ; pop rbx ; ret
0x0000000000412504 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416389 : mov edx, ecx ; jmp 0x41636d
0x000000000049cbe2 : mov edx, ecx ; jmp 0x49cbba
0x000000000046a351 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000441d41 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x000000000044e5ed : mov edx, ecx ; mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000457db4 : mov edx, esp ; call 0x462e98
0x000000000046a456 : mov edx, esp ; syscall
0x000000000046e0f5 : mov edx, r13d ; mov rsi, r15 ; call 0x46ab58
0x000000000046e0f4 : mov edx, r13d ; mov rsi, r15 ; call 0x46ab59
0x000000000046a679 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000440836 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x0000000000446255 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004b9dc6 : mov esi, 0x497b96cc ; retf -0x6620
0x0000000000446247 : mov esi, 0x4a50fa8a ; add byte ptr [rax - 0x7f], cl ; ret 0x50e0
0x00000000004b9e63 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004b7f4a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000441eb8 : mov esi, 0x80 ; syscall
0x0000000000467b94 : mov esi, 0x8948004b ; ret
0x0000000000466a93 : mov esi, 0x894d004b ; retf 0x694d
0x0000000000475d4f : mov esi, 0x89fffffe ; ret 0x758b
0x00000000004a2bad : mov esi, 0xbb66fff8 ; clc ; call qword ptr [rdx]
0x0000000000489a6f : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a2be1 : mov esi, 0xbf51fff8 ; clc ; call rcx
0x00000000004b73de : mov esi, 0xc2c1c0bf ; ret
0x000000000041476b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043d984 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440376 : mov esi, 1 ; call rbx
0x00000000004865d4 : mov esi, 1 ; jmp 0x4865ab
0x0000000000440563 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x000000000044042f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000004403a7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000004407ed : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000461f93 : mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000004618a8 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043f561 : mov esi, 2 ; jmp rax
0x00000000004407e1 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000440554 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000440420 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440398 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000043f57b : mov esi, 3 ; jmp rax
0x0000000000440d5c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000440db3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000440e33 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000440f33 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000004ba647 : mov esi, dr1 ; jrcxz 0x4ba62f ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000049bca5 : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c0f9 : mov esi, dword ptr [rbx] ; call r14
0x00000000004765c4 : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000049c148 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e07a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000469cc8 : mov esi, dword ptr [rdx] ; syscall
0x000000000049d3d5 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000049d5e6 : mov esi, dword ptr [rsi + rbp*8 + 0x10] ; call rbx
0x0000000000431ea9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400c63 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x00000000004440f6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450261 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041e051 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000446ff4 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x0000000000448e73 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041d661 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000469cc7 : mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x00000000004114a9 : mov esi, ebp ; call 0x41d744
0x0000000000412507 : mov esi, ebp ; mov eax, r13d ; syscall
0x00000000004118a4 : mov esi, ebp ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043e1ae : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041ecae : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046a05c : mov esi, ebp ; xor edx, edx ; jmp 0x46a02a
0x000000000047a5b6 : mov esi, ebx ; mov edi, dword ptr [rip + 0x251d86] ; call rax
0x000000000044f22f : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000041161e : mov esi, ebx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000420797 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414c99 : mov esi, ecx ; jbe 0x414c3d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000403b69 : mov esi, ecx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x000000000046931c : mov esi, edi ; call 0x425df4
0x000000000046e0f9 : mov esi, edi ; call 0x46ab54
0x000000000049bfea : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045c75b : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e2b9 : mov esi, edi ; mov rdi, r13 ; call r14
0x00000000004524bb : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000043e8bc : mov esi, edx ; mov eax, 4 ; syscall
0x000000000043e90b : mov esi, edx ; mov eax, 5 ; syscall
0x000000000046a2fc : mov esi, edx ; mov eax, 6 ; syscall
0x000000000044e61f : mov esi, edx ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000046932a : mov esi, esi ; call 0x425df4
0x00000000004417ad : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049c041 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000466732 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000044f791 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047dad4 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047da94 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044f1e3 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000041fb35 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044f214 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000041f85a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041f095 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000473e1b : mov esi, esp ; syscall
0x0000000000425631 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000425661 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000425651 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004a2bd5 : mov esp, 0xbcd1fff8 ; clc ; call rcx
0x00000000004a2bb5 : mov esp, 0xbce2fff8 ; clc ; jmp rdx
0x00000000004a2bc5 : mov esp, 0xbd20fff8 ; clc ; call qword ptr [rax]
0x00000000004a2bd9 : mov esp, 0xbdd1fff8 ; clc ; call rcx
0x00000000004bd495 : mov esp, 0xbef0fffd ; std ; call rax
0x00000000004c3484 : mov esp, 0xc8000059 ; leave ; std ; call qword ptr [rbx]
0x0000000000423013 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042c25b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000425641 : mov esp, 0xf80148c0 ; ret
0x000000000040071f : mov esp, eax ; call 0x43d978
0x00000000004780fa : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049bd4e : mov esp, ecx ; ret
0x000000000043f514 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000044a08d : mov esp, esi ; jmp 0x44a05f
0x00000000004b8244 : mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b82b7 ; salc ; retf
0x00000000004b8243 : mov gs, r13d ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x4b82b8 ; salc ; retf
0x000000000042c11e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000499713 : mov qword ptr [r10], r8 ; ret
0x0000000000434e50 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000041771c : mov qword ptr [r9], rdx ; mov rax, rdx ; ret
0x00000000004631e8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463228 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464188 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000004631ec : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464226 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004155e9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000442505 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000463714 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a6b4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000463654 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047a6a8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000049ba02 : mov qword ptr [rax], rdx ; ret
0x00000000004644a0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004418a9 : mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045d301 : mov qword ptr [rbp - 0x470], rax ; call 0x459dc9
0x00000000004418a5 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x00000000004546d7 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000484cf2 : mov qword ptr [rbp - 0x5a0], rdx ; jmp 0x484ccd
0x0000000000471cb0 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x0000000000471e99 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x000000000047145f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044cbd0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000477d34 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411b16 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000477d6d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000473d6e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412318 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000477cd2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487674 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000416384 : mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416372
0x0000000000414b32 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c0b2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414bad : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411aa6 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000414e64 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000414ffb : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047d755 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000487d98 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004787ae : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043b12c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043aa9c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043aa7c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043aadf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043aaff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043aac0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414ac2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470444 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470416 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042c090 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414af2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041863f : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049ba60 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043b0ec : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043aa3c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b10c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043aa5c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000434977 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434907 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434897 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000434827 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043afea : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004347b7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a98a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b00a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000434747 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a99a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b02a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004346d7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043a9aa : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000479af3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000478733 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414ac6 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000425ddd : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049ba1a : mov qword ptr [rdi + rsi*8], rdx ; ret
0x0000000000430a94 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430ad2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047869e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000430e1b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434187 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430ffb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434107 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004311eb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434087 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004313bc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433ff8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315bc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433f68 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004317bc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000433ed8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000478629 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000430a98 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430ad6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430c4b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430d47 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430c93 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434207 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045bc35 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042be66 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004785f8 : mov qword ptr [rdi], r9 ; ret
0x000000000043af76 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043a966 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043a976 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043a987 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043a997 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043a9a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000425dda : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043a957 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043af63 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004349e3 : mov qword ptr [rdi], rdx ; ret
0x0000000000434e4d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000431e8d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000479cc2 : mov qword ptr [rdi], rsi ; ret
0x000000000040f9f2 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043a50a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000438cfa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043a52a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000438d1a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043a54a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000438d3a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043a3da : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000438c2a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416485 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043a383 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000438bd3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047a694 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004163f1 : mov qword ptr [rdx], rax ; ret
0x0000000000463535 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000004015b9 : mov qword ptr [rip + 0x2c7ad0], rax ; xor eax, eax ; ret
0x0000000000401466 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049d756 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046d790 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000473781 : mov qword ptr [rsi], rax ; ret
0x0000000000401463 : mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041ae5a : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049c142 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000047b46f : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047b672 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047b5c1 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041af11 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040924e : mov qword ptr [rsp + 8], rax ; call 0x405cb7
0x000000000043fa25 : mov qword ptr [rsp + 8], rax ; call rbx
0x00000000004099b8 : mov qword ptr [rsp], rax ; call 0x405cb6
0x000000000043e9d6 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x000000000046a576 : mov qword ptr [rsp], rax ; mov eax, 0x14 ; syscall
0x000000000043ea36 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x000000000043e976 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x000000000046a3e6 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x000000000041af16 : mov qword ptr [rsp], rcx ; call rdx
0x00000000004091c2 : mov qword ptr [rsp], rdx ; call 0x405cb6
0x000000000041771b : mov qword ptr fs:[r9], rdx ; mov rax, rdx ; ret
0x000000000044ecad : mov qword ptr fs:[rdx], rax ; ret
0x0000000000431e8c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000401465 : mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000441d40 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434346 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x00000000004315f1 : mov r10d, 0x4f7f0ff3 ; retf -0x76b4
0x00000000004b82bd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e213f
0x00000000004343c6 : mov r11d, 0x46f00ff2 ; retf
0x00000000004313f1 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040071e : mov r12, rax ; call 0x43d979
0x000000000044a08c : mov r12, rsi ; jmp 0x44a060
0x000000000043f513 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047ccf6 : mov r13, r15 ; mov r15, rax ; jmp 0x47cd14
0x000000000043feb8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000486615 : mov r13d, esi ; jmp 0x4865e8
0x000000000049bca4 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049bca8 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046cf08 : mov r15, rax ; jmp 0x46ced4
0x000000000047ccf9 : mov r15, rax ; jmp 0x47cd11
0x0000000000499710 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000472c6c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x00000000004440fa : mov r9, r14 ; call rbx
0x0000000000466737 : mov r9, r15 ; call rbx
0x0000000000411ab0 : mov rax, -1 ; pop rbx ; ret
0x0000000000412b22 : mov rax, -1 ; ret
0x000000000044ee60 : mov rax, 0xf ; syscall
0x0000000000465e60 : mov rax, 1 ; ret
0x0000000000465e70 : mov rax, 2 ; ret
0x0000000000465e80 : mov rax, 3 ; ret
0x0000000000465e90 : mov rax, 4 ; ret
0x0000000000465ea0 : mov rax, 5 ; ret
0x0000000000465eb0 : mov rax, 6 ; ret
0x0000000000465ec0 : mov rax, 7 ; ret
0x00000000004755a4 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414beb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410b62 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414dc7 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004150e7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000004872f2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000041540b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004645d3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047e1ec : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000477b50 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044ecce : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000454ab1 : mov rax, qword ptr [rax*8 + 0x4b2480] ; jmp rax
0x0000000000454b02 : mov rax, qword ptr [rax*8 + 0x4b2580] ; jmp rax
0x0000000000456bf2 : mov rax, qword ptr [rax*8 + 0x4b2680] ; jmp rax
0x0000000000455725 : mov rax, qword ptr [rax*8 + 0x4b2980] ; jmp rax
0x000000000045f920 : mov rax, qword ptr [rax*8 + 0x4b2e00] ; jmp rax
0x0000000000460c44 : mov rax, qword ptr [rax*8 + 0x4b2f00] ; jmp rax
0x0000000000461128 : mov rax, qword ptr [rax*8 + 0x4b3000] ; jmp rax
0x000000000045f9b6 : mov rax, qword ptr [rax*8 + 0x4b3300] ; jmp rax
0x000000000049b9a2 : mov rax, qword ptr [rax] ; ret
0x000000000043febb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000444ac6 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471250 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047a6b0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000438bd0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000049fea7 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x49fec0 ; call rax
0x00000000004645d0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416730 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049b9d0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049ba30 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049ba70 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049bad0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049bac0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049ba80 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044d2eb : mov rax, qword ptr [rdi*8 + 0x6caa40] ; ret
0x0000000000477ae0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x477af8 ; ret
0x00000000004163ee : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004163e0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x4163e1 ; ret
0x0000000000473719 : mov rax, qword ptr [rip + 0x258fd0] ; ret
0x000000000044c1a0 : mov rax, qword ptr [rip + 0x27fed1] ; ret
0x0000000000444e30 : mov rax, qword ptr [rip + 0x287e31] ; ret
0x0000000000416710 : mov rax, qword ptr [rip + 0x2b29a9] ; ret
0x000000000049c2b7 : mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000499870 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000499833 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x0000000000499860 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000049c2e8 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000049baa5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400cbf : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000446ac9 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044742c : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e0f6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000477f6b : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416be3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ff49 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000451e23 : mov rax, r13 ; jmp 0x451df6
0x000000000041c354 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041bfd4 : mov rax, r8 ; pop rbx ; ret
0x0000000000431fa4 : mov rax, r8 ; ret
0x000000000046a884 : mov rax, r9 ; jne 0x46a8de ; ret
0x000000000046a905 : mov rax, r9 ; ret
0x0000000000412a89 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000462e78 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462e4b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473ef1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049bbda : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004131fc : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474367 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040fa88 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fb6d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f32d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411b1a : mov rax, rbx ; pop rbx ; ret
0x000000000041b8c4 : mov rax, rcx ; ret
0x0000000000416740 : mov rax, rdi ; ret
0x000000000048761d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047a822 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041d137 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000471d9e : mov rax, rdx ; call rax
0x000000000041dc21 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004179f7 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043dac7 : mov rax, rdx ; pop rbx ; ret
0x000000000041771f : mov rax, rdx ; ret
0x000000000046a0a2 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487447 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ebe3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000451883 : mov rax, rsi ; ret
0x000000000043d2fa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049bd49 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041edf1 : mov rbp, r13 ; call 0x42b855
0x00000000004780fc : mov rbp, r9 ; nop ; jmp rdx
0x000000000043f516 : mov rbp, rax ; call rax
0x0000000000473325 : mov rbp, rax ; jmp 0x4732f8
0x00000000004766a9 : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x00000000004402c5 : mov rbx, rax ; call rax
0x0000000000447900 : mov rbx, rax ; jmp 0x4478d4
0x000000000044f1ce : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044e6c5 : mov rbx, rdi ; test rax, rax ; je 0x44e6d7 ; call rax
0x000000000046a172 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000043a940 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000477c46 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000477bd4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046cf05 : mov rcx, r15 ; mov r15, rax ; jmp 0x46ced7
0x0000000000431fc0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000431fc3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004735f2 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x4735d9 ; ret
0x000000000043fa6f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e07c : mov rdi, qword ptr [r13] ; call r14
0x000000000043f679 : mov rdi, qword ptr [r13] ; call rbx
0x000000000043f5e6 : mov rdi, qword ptr [r14] ; call rbx
0x000000000043f627 : mov rdi, qword ptr [r15] ; call rbx
0x000000000043fa22 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045c75d : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000475a3d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000465fe4 : mov rdi, qword ptr [rbp] ; call r12
0x000000000043f7ae : mov rdi, qword ptr [rbp] ; call rbx
0x00000000004765c7 : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000044e367 : mov rdi, qword ptr [rdi] ; syscall
0x0000000000464597 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464565
0x00000000004467d0 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044b019 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000446f44 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000447c6f : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x00000000004465d1 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000446ff8 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044a859 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000448e77 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004481f7 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004417af : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049d5e1 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r14 + rbp*8 + 0x10] ; call rbx
0x000000000044f1d1 : mov rdi, r12 ; call r15
0x00000000004402ea : mov rdi, r12 ; call rbx
0x0000000000403947 : mov rdi, r12 ; mov eax, 3 ; syscall
0x000000000043f410 : mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000403b6b : mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000411620 : mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000466734 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000444ac3 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000040e2bb : mov rdi, r13 ; call r14
0x000000000044030f : mov rdi, r13 ; call rbx
0x000000000044e510 : mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000044e621 : mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000044f793 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000044e5ef : mov rdi, r13 ; xor eax, eax ; syscall
0x000000000044130b : mov rdi, r14 ; call 0x41d585
0x0000000000444a1d : mov rdi, r14 ; call r15
0x0000000000440333 : mov rdi, r14 ; call rbx
0x00000000004118a6 : mov rdi, r14 ; mov eax, r9d ; syscall
0x00000000004412c6 : mov rdi, r15 ; call 0x41d585
0x00000000004104c4 : mov rdi, r15 ; call rax
0x0000000000440353 : mov rdi, r15 ; call rbx
0x00000000004648f3 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000400486 : mov rdi, r8 ; mov eax, 3 ; syscall
0x0000000000400466 : mov rdi, r8 ; mov eax, ebp ; syscall
0x000000000043e1b0 : mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041a48b : mov rdi, r9 ; mov eax, 3 ; syscall
0x000000000041a45f : mov rdi, r9 ; mov eax, r8d ; syscall
0x0000000000408691 : mov rdi, rax ; call 0x41d589
0x0000000000420799 : mov rdi, rax ; call rcx
0x000000000041edee : mov rdi, rax ; mov rbp, r13 ; call 0x42b858
0x0000000000469326 : mov rdi, rax ; mov rsi, r14 ; call 0x425df8
0x000000000041fb37 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004416dd : mov rdi, rax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049e4ab : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000041b6af : mov rdi, rbp ; call 0x418175
0x000000000044f216 : mov rdi, rbp ; call r15
0x000000000041e055 : mov rdi, rbp ; call rax
0x00000000004407f2 : mov rdi, rbp ; call rbx
0x000000000043ec60 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000041ea16 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044c156 : mov rdi, rbx ; call r12
0x00000000004443cc : mov rdi, rbx ; call r14
0x0000000000461f98 : mov rdi, rbx ; call r8
0x00000000004120d6 : mov rdi, rbx ; call rax
0x0000000000444f90 : mov rdi, rbx ; jmp 0x444f5c
0x000000000049e212 : mov rdi, rbx ; jne 0x49e206 ; pop rbx ; ret
0x00000000004003d2 : mov rdi, rbx ; mov eax, 1 ; syscall
0x00000000004004a2 : mov rdi, rbx ; mov eax, r10d ; syscall
0x0000000000414c53 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414dc3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000043e020 : mov rdi, rdx ; mov eax, esi ; syscall
0x000000000043e030 : mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000049b668 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049d3d8 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047a690 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047a6a4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000430c00 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349e0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041d968 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000457db3 : mov rdx, r12 ; call 0x462e99
0x000000000047dad0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047da90 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044e5ec : mov rdx, r9 ; mov rdi, r13 ; xor eax, eax ; syscall
0x00000000004178d3 : mov rdx, rax ; jmp 0x4178f2
0x000000000042082f : mov rdx, rax ; jmp 0x4207fc
0x00000000004690f5 : mov rdx, rax ; jmp 0x469100
0x000000000046aac4 : mov rdx, rax ; jmp 0x46aabb
0x000000000044176e : mov rdx, rax ; mov eax, r12d ; syscall
0x000000000044f796 : mov rdx, rbp ; call r15
0x0000000000469318 : mov rdx, rbp ; mov rsi, r15 ; call 0x425df8
0x000000000049e43e : mov rdx, rbx ; jne 0x49e437 ; pop rbx ; ret
0x0000000000412503 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416388 : mov rdx, rcx ; jmp 0x41636e
0x000000000049cbe1 : mov rdx, rcx ; jmp 0x49cbbb
0x000000000046a350 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x000000000046a455 : mov rdx, rsp ; syscall
0x000000000049d5e5 : mov rsi, qword ptr [r14 + rbp*8 + 0x10] ; call rbx
0x000000000049c147 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e079 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049c0f8 : mov rsi, qword ptr [rbx] ; call r14
0x00000000004440f5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450260 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041e050 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041d660 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000044e61e : mov rsi, r10 ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000047dad3 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047da93 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044f1e2 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044f213 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000041f859 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041f094 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004114a8 : mov rsi, r13 ; call 0x41d745
0x00000000004118a3 : mov rsi, r13 ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000041ecad : mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000469329 : mov rsi, r14 ; call 0x425df5
0x000000000049c040 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000466731 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000046931b : mov rsi, r15 ; call 0x425df5
0x000000000046e0f8 : mov rsi, r15 ; call 0x46ab55
0x000000000040e2b8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004524ba : mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000403b68 : mov rsi, r9 ; mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x0000000000412506 : mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000043e1ad : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000046a05b : mov rsi, rbp ; xor edx, edx ; jmp 0x46a02b
0x000000000047a5b5 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x251d86] ; call rax
0x000000000044f22e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000041161d : mov rsi, rbx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000420796 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414c98 : mov rsi, rcx ; jbe 0x414c3e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049bfe9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000043e8bb : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000043e90a : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000046a2fb : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000473e1a : mov rsi, rsp ; syscall
0x00000000004780f9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049bd4d : mov rsp, rcx ; ret
0x0000000000434e75 : mov word ptr [r9 - 2], cx ; ret
0x00000000004c0754 : mov word ptr [rax + rax], gs ; add al, ch ; iretd ; cmc ; call rdx
0x0000000000442329 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000425dcd : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c677d : mov word ptr [rax], es ; add byte ptr [rax - 0x67], ah ; std ; call rcx
0x0000000000466a90 : mov word ptr [rax], es ; pop rsi ; mov esi, 0x894d004b ; retf 0x694d
0x000000000043b06c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043a9dc : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b174 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043aac4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000434c17 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043af38 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043a918 : mov word ptr [rdi + 4], dx ; ret
0x000000000043af8a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043a95a : mov word ptr [rdi + 8], dx ; ret
0x0000000000431ec2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043119c : mov word ptr [rdi - 2], cx ; ret
0x0000000000430fb4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431198 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043a8e3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043d275 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000434c1b : mov word ptr [rdi], cx ; ret
0x000000000043aef3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000434c83 : mov word ptr [rdi], dx ; ret
0x0000000000434e72 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000431ebf : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000004c7554 : mov word ptr [rdx + 0xe80000], ds ; cld ; jmp qword ptr [rax]
0x000000000043a458 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000438c98 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000043a403 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000438c53 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004c11d2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043d278 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c71f8 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c72a8 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044edb4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000431ebe : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000048a26d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x0000000000468f1c : movabs al, byte ptr [0x3948f08945002633] ; ret
0x0000000000417f4c : movabs al, byte ptr [0x3948fa0148002b18] ; retf -0x7af1
0x00000000004a2e14 : movabs al, byte ptr [0x40fff8c9f0fff8c8] ; retf
0x00000000004c89a9 : movabs al, byte ptr [0x41380e0a01aa0301] ; ret
0x00000000004c01a1 : movabs al, byte ptr [0x41380e0a01af0301] ; ret
0x00000000004a6538 : movabs al, byte ptr [0x6000000000004adf] ; retf 0x4a
0x000000000045e449 : movabs al, byte ptr [0x840fc08548000000] ; retf 3
0x000000000048e665 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x0000000000464593 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x0000000000445c01 : movabs al, byte ptr [0xfb3d8b4c00000010] ; ret
0x000000000046f025 : movabs byte ptr [0x394802e0c148006c], al ; ret 0x860f
0x000000000040077b : movabs byte ptr [0xad05c7347401e580], al ; ret
0x00000000004b9f03 : movabs byte ptr [0xd900432ac06c5d01], al ; retf -0x156f
0x00000000004b9b61 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000419a64 : movabs dword ptr [0x894c01e28300000a], eax ; retf
0x00000000004b7fa7 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004b885a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000042f722 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f71e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f7cc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043a9b0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043b22d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043ab7d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004348ef : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043487f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043480f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043479f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b1cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043ab1d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043472f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b1ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043ab3d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004346bf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b20d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043ab5d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000434cdf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434c6f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434bff : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434b8f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434b1f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434aaf : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434a3f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004349cf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043495f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000425d2c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x425d49 ; ret
0x0000000000425d45 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000433e4b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000433ebb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b044 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043a9c4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043aa07 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043a9f7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aa78 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043aa38 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043aa58 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043a9d8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043ab79 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043ab19 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043ab39 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043ab59 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043466a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004346c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043a9b1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043b22e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043ab7e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004348f0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434880 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434810 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004347a0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b1ce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043ab1e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000434730 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b1ee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043ab3e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004346c0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b20e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043ab5e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000434ce0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434c70 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434c00 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434b90 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434b20 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434ab0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434a40 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004349d0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000434960 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000425d2d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x425d48 ; ret
0x0000000000425d46 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000433e4c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000433ebc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004345f7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434577 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004344e7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434467 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004343e7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434367 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004342e7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434267 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004341e7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434167 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004340e7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434067 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433fd7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433f47 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000433eb7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043b045 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043a9c5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043aa18 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043aa08 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043a9f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aa79 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043aa39 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043aa59 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043a9d9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043ab7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043ab1a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043ab3a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043ab5a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043466b : movq qword ptr [rdi], mm0 ; ret
0x00000000004346c5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004bdf6c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rax], al ; add edi, esi ; call rdi
0x000000000047a39a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r15 + 0x6cc344], r15b ; call rdx
0x00000000004c266c : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [r8], al ; adc al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c7ef5 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; mov byte ptr [rcx], bl ; std ; jmp rsp
0x00000000004b8c82 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004c4f6c : movsb byte ptr [rdi], byte ptr [rsi] ; je 0x4c4f76 ; add al, al ; and edx, edi ; jmp rdi
0x00000000004b9edd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4b9f36 ; jmp 0x4b9e77
0x00000000004c686c : movsb byte ptr [rdi], byte ptr [rsi] ; lea eax, dword ptr [rax] ; add byte ptr [rax], dh ; sbb bl, bh ; call qword ptr [rax]
0x0000000000431fc7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004414d8 : movsb byte ptr [rdi], byte ptr [rsi] ; sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x00000000004b7b65 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x0000000000473d1c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000417757 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004c8025 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; sbb byte ptr [rax], dh ; std ; call rsi
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; cdq ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000004a2b71 : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004ba17d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004ba515 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004b9dd1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000478652 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004b8861 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000491043 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000490ffd : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004770b1 : movsx eax, dl ; neg eax ; ret
0x000000000043f458 : movsxd r10, r10d ; syscall
0x0000000000420bb1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432286 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042f202 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000049a898 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000049b15d : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049ad22 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000042db4d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043a779 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000499919 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x00000000004996e5 : movsxd rcx, dword ptr [rax + rcx*4] ; add rcx, rax ; jmp rcx
0x0000000000441954 : movsxd rdi, dword ptr [rbp - 0x58] ; mov eax, 3 ; syscall
0x0000000000441a41 : movsxd rdi, dword ptr [rbp - 0x68] ; mov eax, 3 ; syscall
0x00000000004122a9 : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000411ac0 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x0000000000412b06 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x00000000004a2a1d : movsxd rdi, eax ; push qword ptr [rax] ; clc ; call rax
0x000000000041326b : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000043ebc2 : movsxd rdi, ebx ; mov eax, 0x48 ; syscall
0x000000000044c25a : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x000000000040dc54 : movsxd rdi, ecx ; syscall
0x000000000043ea9a : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x000000000044f0d7 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x000000000044ebb8 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000044ef57 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000044e461 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x0000000000403995 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x0000000000403994 : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x000000000044e460 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000044ebb7 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000042f2cf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004131b6 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x000000000043f459 : movsxd rdx, edx ; syscall
0x000000000043c75c : movsxd rsi, esi ; ret 0x7520
0x0000000000490ffe : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491044 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044ee3c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047a75c : movzx eax, al ; neg eax ; ret
0x000000000047a506 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a435 : movzx eax, al ; ret
0x0000000000413e3c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415ad6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000049c60e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000411cfd : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414fff : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000412f7a : movzx eax, byte ptr [rax] ; ret
0x0000000000421f48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042db60 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004257c0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000421f63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414c9d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000411d10 : movzx eax, byte ptr [rdx] ; ret
0x0000000000413e3d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043d9d7 : movzx eax, cl ; pop rbx ; ret
0x000000000043d9ff : movzx eax, dl ; pop rbx ; ret
0x000000000043cdba : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43cdb9 ; ret
0x000000000043ce6a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43ce69 ; ret
0x000000000042ea04 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000421f60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042db63 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dbff : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dbe7 ; ret
0x000000000042da31 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042208f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042d8c3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043c784 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043c7e4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043c7d4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043c7c4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043c7b4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043c7a4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043c794 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000434610 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042e7b7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043c76b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000434cf0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004257c3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004257e9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000434590 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000434c80 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000465fe1 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046a434 : movzx rax, al ; ret
0x00000000004650c7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004627e7 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041688f : neg eax ; ret
0x000000000043ead1 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004a29ac : nop ; adc bh, al ; call qword ptr [rax]
0x00000000004a3348 : nop ; add al, 0xf9 ; call qword ptr [rax]
0x0000000000410388 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041335c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000433d3b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047b31e : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x00000000004624db : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042de6c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a337c : nop ; add cl, bh ; call qword ptr [rax]
0x000000000041aa1a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004678a6 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x00000000004be7bd : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4be7d5 ; ret
0x00000000004be7cb : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004a3340 : nop ; add ecx, edi ; call qword ptr [rax]
0x00000000004a3384 : nop ; add edi, ecx ; call qword ptr [rax]
0x00000000004bd9fc : nop ; add edi, esi ; call qword ptr [rax]
0x000000000043dc1f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004442bf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042562f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000487ebf : nop ; call rax
0x00000000004a3318 : nop ; clc ; call qword ptr [rax]
0x00000000004a3328 : nop ; clc ; clc ; call qword ptr [rax]
0x00000000004c7e60 : nop ; cld ; call qword ptr [rax]
0x00000000004a336c : nop ; cli ; clc ; call qword ptr [rax]
0x00000000004a3320 : nop ; cmc ; clc ; call qword ptr [rax]
0x00000000004a335c : nop ; hlt ; clc ; call qword ptr [rax]
0x00000000004a3364 : nop ; idiv eax ; call qword ptr [rax]
0x00000000004a2958 : nop ; in eax, -9 ; call rax
0x00000000004bdfb0 : nop ; insd dword ptr [rdi], dx ; hlt ; call qword ptr [rax]
0x00000000004a3354 : nop ; int1 ; clc ; call qword ptr [rax]
0x00000000004a2a5c : nop ; jge 0x4a2a5a ; jmp rax
0x00000000004116d2 : nop ; jmp 0x4115dc
0x00000000004780ff : nop ; jmp rdx
0x00000000004a2a3c : nop ; jo 0x4a2a3e ; push qword ptr [rax] ; jb 0x4a2a42 ; call rax
0x00000000004a2a8c : nop ; js 0x4a2a8e ; inc dword ptr [rax] ; cmp al, 0xf8 ; call qword ptr [rax]
0x0000000000430dcf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430faf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046a39f : nop ; mov eax, 0x15 ; syscall
0x000000000043f4df : nop ; mov eax, 0x1c ; syscall
0x000000000046a2af : nop ; mov eax, 0x66 ; syscall
0x000000000043f4bf : nop ; mov eax, 0xa ; syscall
0x0000000000441dd4 : nop ; mov eax, 0xca ; syscall
0x0000000000416d3f : nop ; mov eax, 0xffffffff ; ret
0x000000000041001f : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046a67f : nop ; mov eax, edi ; ret
0x000000000043136f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043af0f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000441d3f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000411aaf : nop ; mov rax, -1 ; pop rbx ; ret
0x0000000000415a5f : nop ; mov rax, -1 ; ret
0x0000000000417244 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004478ff : nop ; mov rbx, rax ; jmp 0x4478d5
0x00000000004478fe : nop ; mov rbx, rax ; jmp 0x4478d6
0x0000000000444f8f : nop ; mov rdi, rbx ; jmp 0x444f5d
0x000000000041e04f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043a9af : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004a2a1c : nop ; movsxd rdi, eax ; push qword ptr [rax] ; clc ; call rax
0x000000000044e45f : nop ; movsxd rdi, r14d ; mov eax, 3 ; syscall
0x00000000004a299c : nop ; or al, 0xf8 ; call qword ptr [rax]
0x0000000000461dff : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x461dce
0x0000000000461dfe : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x461dcf
0x00000000004a330c : nop ; or eax, 0xeff0fff9 ; clc ; call qword ptr [rax]
0x0000000000492bad : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a2994 : nop ; or eax, edi ; call qword ptr [rax]
0x000000000043d14f : nop ; ret
0x00000000004114ac : nop ; ret 0
0x00000000004bd4a4 : nop ; ret 0xfffd
0x0000000000409a1c : nop ; ret 0xffff
0x000000000044cdc3 : nop ; retf
0x00000000004c5f90 : nop ; salc ; cli ; jmp rsi
0x00000000004a2e74 : nop ; sar eax, cl ; jmp rax
0x00000000004a29bc : nop ; sbb al, bh ; call qword ptr [rax]
0x00000000004a2ec0 : nop ; sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004a29c4 : nop ; sbb edi, eax ; call qword ptr [rax]
0x00000000004bd3fd : nop ; std ; call rax
0x00000000004a3374 : nop ; std ; clc ; call qword ptr [rax]
0x00000000004a3330 : nop ; sti ; clc ; call qword ptr [rax]
0x000000000041642f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004257ef : nop ; xor eax, eax ; ret
0x00000000004256af : nop ; xor rax, rax ; ret
0x0000000000477b1b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047d97b : nop dword ptr [rax + rax] ; call rbx
0x000000000043a8eb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047a483 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000412b2b : nop dword ptr [rax + rax] ; ret
0x00000000004132eb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000465e2c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000041f87d : nop dword ptr [rax] ; call 0x41e4c9
0x0000000000400b85 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047d7d9 : nop dword ptr [rax] ; call rax
0x000000000049969d : nop dword ptr [rax] ; mov eax, 0x26 ; syscall
0x000000000046696d : nop dword ptr [rax] ; mov eax, 0xc9 ; syscall
0x000000000041686c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000410aad : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042bde4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041d964 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041dd24 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043dbbc : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000406365 : nop dword ptr [rax] ; ret
0x000000000041d35d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000004112f4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047d97a : nop word ptr [rax + rax] ; call rbx
0x0000000000412b2a : nop word ptr [rax + rax] ; ret
0x00000000004132ea : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000444181 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000004c7801 : or ah, bh ; call qword ptr [rax]
0x00000000004c7819 : or ah, bh ; call qword ptr [rdx]
0x0000000000429517 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ab8f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a542 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046a4f1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041b8c0 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041bfea : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000496490 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004963e9 : or al, 0 ; add byte ptr [rcx - 0x7d], cl ; jmp 0x496409
0x000000000046a4bf : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452110 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000421f46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041bfd2 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000041d359 : or al, 0x18 ; pop rbx ; ret
0x00000000004690f3 : or al, 0x20 ; mov rdx, rax ; jmp 0x469102
0x000000000041af18 : or al, 0x24 ; call rdx
0x00000000004435d1 : or al, 0x24 ; je 0x4435e5 ; mov edi, 0x6ca140 ; call rax
0x0000000000461e02 : or al, 0x40 ; jmp 0x461dcb
0x0000000000461e01 : or al, 0x40 ; jmp 0x461dcc
0x0000000000400c6a : or al, 0x41 ; call rsp
0x0000000000444eef : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000477df0 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400cbe : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000473c6b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a843 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047ad1f : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x0000000000441fea : or al, 0x5d ; pop r12 ; ret
0x0000000000461b4a : or al, 0x7e ; ret
0x000000000046233a : or al, 0x7e ; retf
0x0000000000461f33 : or al, 0x7e ; retf -0x48
0x000000000045cac9 : or al, 0x83 ; ret
0x00000000004583ec : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004996e7 : or al, 0x88 ; add rcx, rax ; jmp rcx
0x0000000000420bb3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000428604 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432288 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042f204 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048982b : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046a678 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042db4f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043a77b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042f208 : or al, 0xb ; jmp r9
0x000000000043a77f : or al, 0xb ; jmp rcx
0x000000000049991b : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x0000000000434813 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000425d33 : or al, 0xf3 ; ret
0x000000000046226b : or al, 0xf6 ; ret 0xf04
0x000000000045ca4c : or al, 0xf6 ; ret 0xf08
0x00000000004a299d : or al, 0xf8 ; call qword ptr [rax]
0x00000000004c72bc : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004a2991 : or al, bh ; call qword ptr [rax + 0x10fff809]
0x00000000004be5a5 : or al, byte ptr [rax] ; add byte ptr [rax + 7], cl ; cmc ; call qword ptr [rdx]
0x00000000004be58d : or al, byte ptr [rax] ; add byte ptr [rax + 7], dl ; cmc ; call qword ptr [rax]
0x000000000044f241 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000004221dd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429721 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422201 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049b73e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043f4c1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000423de8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000419a65 : or al, byte ptr [rax] ; add byte ptr [rbx - 0x76b3fe1e], al ; retf
0x0000000000408426 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x0000000000408d0c : or al, byte ptr [rbx - 0x7bf0fd07] ; retf
0x000000000047cde0 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489357 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c6423 : or al, byte ptr [rcx] ; ret
0x0000000000496697 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000476d39 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000409252 : or al, ch ; pop rax ; retf -1
0x0000000000408ee7 : or al, ch ; ret
0x000000000040c2e8 : or al, ch ; ret 0xff99
0x0000000000464bb8 : or al, ch ; ret 1
0x0000000000409168 : or al, ch ; retf
0x000000000040abe0 : or al, ch ; retf -0x50
0x0000000000409265 : or al, ch ; retf -1
0x00000000004c64f9 : or bh, bl ; jmp rsi
0x0000000000442508 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000004c3828 : or bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c3858 : or bl, bl ; clc ; call qword ptr [rdx]
0x00000000004349d3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044f0e7 : or bl, dh ; ret
0x000000000040a495 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000414e66 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000471c31 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000410537 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000047380f : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000438c28 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047dc26 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e992 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000040b582 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf -0x13
0x000000000043fee7 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000496872 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000469853 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049b15b : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000438ce7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000463abf : or byte ptr [r9 - 0x77], r9b ; ret
0x000000000043efec : or byte ptr [rax + 0x101], bh ; syscall
0x000000000047abf3 : or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x0000000000410538 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416cbb : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000471c32 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000041bfc7 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x0000000000416847 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000441b95 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041b789 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000478a35 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000004702f6 : or byte ptr [rax + 0x39], cl ; retf -0x7bf1
0x000000000047b0bf : or byte ptr [rax + 0x39], cl ; retf 0xf40
0x000000000041ccfa : or byte ptr [rax + 0x440f4802], ch ; retf -0x7cb8
0x00000000004c533a : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c1bac : or byte ptr [rax + 0xb], cl ; ret
0x0000000000468d16 : or byte ptr [rax + 0xf], cl ; retf -0x76b8
0x00000000004751ab : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403f7c : or byte ptr [rax + 1], cl ; ret
0x000000000041aab7 : or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000043f0a3 : or byte ptr [rax + 3], bh ; syscall
0x000000000046747c : or byte ptr [rax - 0x39], cl ; ret
0x00000000004256cb : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x00000000004256df : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x00000000004189a3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000473718 : or byte ptr [rax - 0x75], cl ; add eax, 0x258fd0 ; ret
0x000000000043fa21 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000004091c1 : or byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x405cb7
0x00000000004099c8 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405cb7
0x000000000040e05a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000409273 : or byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405cb8
0x0000000000438c2d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000473810 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043f32c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041bb34 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x000000000041af15 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000438c29 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041ea15 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x00000000004179f6 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047d687 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472560 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e993 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472509 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000040e181 : or byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax + 0x29] ; retf -0x3eb8
0x000000000047255f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000040b583 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf -0x13
0x000000000040b351 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf -9
0x0000000000471096 : or byte ptr [rax - 0x7bf0ffc2], al ; retf 0xa
0x000000000041b785 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27aff9c
0x000000000041b784 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27aff9d
0x000000000041c218 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044f264 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000043fe17 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042be76 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042befe : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004626ce : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000004727c8 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045bbf2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000410e38 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004105ed : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000042243c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000419c6c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004178e4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004178a5 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000042243d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004298c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422461 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000419c6d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004155ec : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000417106 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000444141 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044ef52 : or byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000043da80 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049c24e : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000441d21 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000423f68 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040a496 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000488e90 : or byte ptr [rax], al ; jne 0x488e61 ; jmp 0x488e69
0x00000000004419a1 : or byte ptr [rax], al ; mov edi, 0x4a433d ; mov eax, ebx ; syscall
0x00000000004419d0 : or byte ptr [rax], al ; mov edi, 0x4a4348 ; mov eax, ebx ; syscall
0x000000000044eb13 : or byte ptr [rax], al ; mov edi, 0x4a6280 ; mov eax, ecx ; syscall
0x000000000044e50e : or byte ptr [rax], al ; mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000042af7e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049b99f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x000000000049b9ff : or byte ptr [rbp + 0x1d], dh ; mov qword ptr [rax], rdx ; ret
0x00000000004783dc : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047d8b9 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000447528 : or byte ptr [rbp - 0x161c8637], al ; retf
0x00000000004896b3 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000047375c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000047542d : or byte ptr [rbx + 0x394401c2], al ; retf -0x7cf1
0x000000000041d1e0 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000405a03 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401895 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412aba : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x0000000000461e00 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x461dcd
0x00000000004c06a7 : or byte ptr [rbx + 0xe], ch ; adc byte ptr [rbx + 0xa9b0202], al ; ret
0x000000000041d31e : or byte ptr [rbx + 0xf4802e6], al ; retf -0x7cb8
0x00000000004c06b2 : or byte ptr [rbx + rcx + 0x43], al ; ret
0x00000000004c6943 : or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x000000000046cd2c : or byte ptr [rbx + rcx*4 + 0x2d], al ; ret 0x25
0x00000000004570b7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f791 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000047cdcf : or byte ptr [rbx - 0xaf4b], cl ; dec dword ptr [rax - 0x77] ; retf 0x1b8
0x0000000000441eb4 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000470419 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000479c2b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000469854 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045ba39 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047ebca : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049b15c : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c72be : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c00c7 : or byte ptr [rcx + 0xb], al ; ret
0x000000000046168b : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000047f73b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000478cd0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000400485 : or byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x000000000040e2b7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x0000000000479c32 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049c0f3 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x000000000041181a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000438ce8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000456a08 : or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf -2
0x0000000000463ac0 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489212 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041cc59 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e1aa : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044f4e3 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000448149 : or byte ptr [rcx - 0xa], al ; ret
0x000000000045a911 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049cd06 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049c4ff : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x00000000004420ce : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000451230 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000417a33 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004ba79e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004708d7 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004704f1 : or byte ptr [rdi + 0x6ca100], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000477981 : or byte ptr [rdi + 0x6ca140], bh ; call rax
0x00000000004035eb : or byte ptr [rdi + 0x6cb0a0], bh ; call r15
0x00000000004bf0eb : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c44f4 : or byte ptr [rdi + 0xb], al ; jae 0x4c4508 ; ret
0x00000000004818d8 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000470f2f : or byte ptr [rdi], 0x84 ; retf 3
0x00000000004494d3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044c719 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000414ffe : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000461cc1 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000487659 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000414e67 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049c0a6 : or byte ptr [rdi], cl ; ret 0xfc3
0x000000000042f7cb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044d3a4 : or byte ptr [rdi], cl ; test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004551f6 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049c0a5 : or byte ptr [rdi], r9b ; ret 0xfc3
0x00000000004865d3 : or byte ptr [rsi + 1], bh ; jmp 0x4865ac
0x00000000004c5898 : or byte ptr [rsi - 6], bh ; call rax
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c6668 : or byte ptr [rsi], dl ; sti ; jmp qword ptr [rdx]
0x0000000000476046 : or byte ptr [rsp + 0x5b], dh ; ret
0x000000000047a9a7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044c2a0 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411cee : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412537 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x000000000046455f : or cl, byte ptr [rax - 0x77] ; ret
0x0000000000411820 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042498a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000451d77 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000004897f3 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463537 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x00000000004896b9 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000408128 : or cl, ch ; ret
0x00000000004620d2 : or cl, ch ; ret 0xfffc
0x0000000000407f28 : or cl, ch ; retf
0x0000000000456a0c : or cl, ch ; retf -2
0x00000000004878e5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004ba182 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004348f3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049d815 : or dh, bl ; ret
0x00000000004b9faa : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000047d977 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041b363 : or dh, dh ; ret 0x7404
0x000000000041b2de : or dh, dh ; ret 0xf04
0x000000000040286e : or dh, dh ; ret 0xfdf
0x000000000040db37 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x000000000040221a : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x0000000000475a3c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x0000000000422e1e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000042236d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ae2f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004222c7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041014f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000043f454 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000043f414 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000492dfe : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004966e9 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; jmp 0x496709
0x00000000004b21b7 : or dword ptr [rax], ecx ; retf
0x00000000004b98f3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004897d3 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042ef86 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412330 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000047852c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041f366 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041f54c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004016d4 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000477e66 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000048eddd : or dword ptr [rdi], ecx ; xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000048d2a4 : or dword ptr [rdi], ecx ; xchg esp, ebx ; jmp 0x48d2b1
0x000000000048a06c : or dword ptr [rdi], ecx ; xchg esp, esi ; jmp 0x48a079
0x00000000004ba14e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x00000000004011dd : or dword ptr [rdx], ecx ; mov eax, 2 ; syscall
0x0000000000474079 : or dword ptr [rip + 0x2560f0], 1 ; pop rbx ; ret
0x000000000049678f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c6420 : or eax, 0x10a0303 ; ret
0x00000000004c64d0 : or eax, 0x1370303 ; ret
0x000000000043b1d1 : or eax, 0x1c478d48 ; ret
0x00000000004157a2 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c6410 : or eax, 0x34b0303 ; ret
0x00000000004c6470 : or eax, 0x35b0303 ; ret
0x00000000004616ba : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000461dc2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042c452 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x0000000000489847 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429377 : or eax, 0x83480000 ; ret 0x4910
0x00000000004293e1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a06bd : or eax, 0x834825eb ; ret 0x4810
0x0000000000423ae8 : or eax, 0x894d0000 ; retf
0x00000000004b7fa1 : or eax, 0xcad7947e ; jmp 0x4b7f4d
0x00000000004a32cd : or eax, 0xd30fff9 ; stc ; call rax
0x00000000004a328d : or eax, 0xd3afff9 ; stc ; jmp rax
0x00000000004a314d : or eax, 0xd6cfff9 ; stc ; call qword ptr [rdx]
0x00000000004ad8d9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ad8e5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004ba133 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x00000000004b9dd3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000004a330d : or eax, 0xeff0fff9 ; clc ; call qword ptr [rax]
0x000000000044034e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000004347a3 : or eax, 0xf7f0ff3 ; ret
0x0000000000443aec : or eax, 0xffffffff ; ret
0x00000000004c72bf : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045d6ef : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042210d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429581 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422131 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043f4a1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000423c68 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004199fe : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000044cb94 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c72c0 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c39bb : or eax, dword ptr [rdx] ; retf
0x00000000004c6945 : or eax, dword ptr [rdx] ; retf 0xe0a
0x000000000045d6ee : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a2995 : or eax, edi ; call qword ptr [rax]
0x0000000000418c52 : or ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000416424 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000040ead2 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; xchg eax, esp ; retf 0x2b
0x00000000004c8a70 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000434963 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000479e9e : or ebx, esi ; ret
0x000000000041ca5a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418af4 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fb6c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004472e5 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048980f : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c44be : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042be64 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004a2999 : or edi, eax ; call qword ptr [rax + 0x10fff80c]
0x000000000041e5e1 : or edx, eax ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41e5f5 ; call rax
0x00000000004c44f6 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004be7c8 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000434883 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000412331 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000043f973 : or esp, ebx ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004349d2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434962 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004348f2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c44f5 : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000434882 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c6944 : or r8d, dword ptr [rdx] ; retf 0xe0a
0x000000000042be63 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044c29f : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x00000000004620d1 : or r9b, r13b ; ret 0xfffc
0x00000000004c44bd : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c64cf : or rax, 0x1370303 ; ret
0x00000000004c640f : or rax, 0x34b0303 ; ret
0x00000000004c646f : or rax, 0x35b0303 ; ret
0x00000000004616b9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000461dc1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000443aeb : or rax, 0xffffffffffffffff ; ret
0x0000000000496572 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c39ba : or rax, qword ptr [rdx] ; retf
0x00000000004413af : out -0x18, eax ; retf
0x0000000000405db0 : out -0x18, eax ; retf 0x177
0x0000000000416ee0 : out -0x18, eax ; sbb dl, byte ptr [rbx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b8c80 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000441395 : out -0x3f, eax ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4413a5 ; call rbx
0x0000000000403949 : out -0x48, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f412 : out -0x48, eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004032fb : out -0x77, eax ; ret 0x8948
0x00000000004ba9a8 : out -0xb, eax ; mov ch, 0xab ; ret
0x00000000004341ea : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042b9d4 : out 0x29, al ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000468ca5 : out 0x35, eax ; add byte ptr es:[rax + 0xf], cl ; retf -0x76b8
0x000000000044f1d3 : out 0x41, eax ; call rdi
0x0000000000411622 : out 0x44, eax ; mov eax, ecx ; syscall
0x0000000000403b6d : out 0x44, eax ; mov eax, edx ; syscall
0x00000000004685ad : out 0x47, eax ; add al, ch ; retf -0x4b1
0x0000000000475159 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044f1e4 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x000000000041fb36 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044f215 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000444ac5 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000466736 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041f096 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415af3 : out 0x5b, al ; ret
0x0000000000472bba : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000041f85b : out 0x5d, al ; pop r12 ; jmp rax
0x00000000004b99c0 : out 0x78, al ; jnp 0x4b9a22 ; retf
0x000000000047dad5 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047da95 : out 0x89, al ; out dx, eax ; call rax
0x00000000004b7f51 : out 0xb3, al ; retf 0xe80
0x00000000004a2c40 : out 0xc2, al ; clc ; push qword ptr [rsi - 0x3d] ; clc ; call qword ptr [rsi]
0x00000000004a0096 : out 0xd4, al ; idiv edi ; ret
0x000000000045bcc2 : out 0xed, al ; add byte ptr es:[rax + 0x63], cl ; retf -0x76b8
0x000000000041c450 : out 0xf, al ; xchg byte ptr [rcx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000043416a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a295d : out 0xf7, al ; call qword ptr [rax]
0x000000000049de31 : out 2, al ; jne 0x49de44 ; mov eax, 8 ; ret
0x000000000042bcd9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004580ba : out dx, al ; add dword ptr [rcx - 0x7f], ecx ; jmp qword ptr [rax]
0x000000000041ca5d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000049d7db : out dx, al ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004114aa : out dx, al ; call 0x41d743
0x00000000004009a9 : out dx, al ; call rax
0x00000000004c6351 : out dx, al ; cli ; jmp qword ptr [rdx]
0x00000000004b9dd7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000412508 : out dx, al ; mov eax, r13d ; syscall
0x0000000000430e1a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043f40f : out dx, al ; mov rdi, r12 ; mov eax, 9 ; syscall
0x00000000004118a5 : out dx, al ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043e1af : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041ecaf : out dx, al ; mov rdi, rbx ; call rax
0x000000000043457a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042acde : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004ba132 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x00000000004b99bf : out dx, al ; out 0x78, al ; jnp 0x4b9a23 ; retf
0x000000000046a05d : out dx, al ; xor edx, edx ; jmp 0x46a029
0x000000000041db35 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418af7 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049e4ad : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000049d753 : out dx, eax ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000041b6b1 : out dx, eax ; call 0x418173
0x000000000047dad7 : out dx, eax ; call qword ptr [rbx]
0x000000000040e2bd : out dx, eax ; call r14
0x000000000044f218 : out dx, eax ; call r15
0x000000000041e057 : out dx, eax ; call rax
0x0000000000440311 : out dx, eax ; call rbx
0x00000000004a3311 : out dx, eax ; clc ; call qword ptr [rax]
0x00000000004baa25 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000043ec62 : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000044e512 : out dx, eax ; mov eax, r15d ; syscall
0x000000000044e623 : out dx, eax ; mov eax, r8d ; syscall
0x0000000000430c4a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430d46 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430c92 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044f795 : out dx, eax ; mov rdx, rbp ; call r15
0x00000000004345fa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042addd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ea18 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000415a9e : out dx, eax ; pop rbx ; ret
0x000000000042dfd3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42dfab
0x000000000042e051 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e029
0x000000000042e4e3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e4bb
0x000000000042e561 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e539
0x000000000042dbd3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dbe8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dbfd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043cf03 : out dx, eax ; ret 0xf66
0x00000000004099bd : out dx, eax ; ret 0xffff
0x000000000041cc0d : out dx, eax ; retf
0x00000000004ba0fb : out dx, eax ; retf -0x54f3
0x000000000043cee6 : out dx, eax ; retf 0x4466
0x0000000000420b5a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042f0ec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f0d5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f0be : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042db7a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044e5f1 : out dx, eax ; xor eax, eax ; syscall
0x0000000000428cee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c48ed : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; xor byte ptr [rax], al ; cli ; call rsi
0x000000000043b32e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004ba583 : outsb dx, byte ptr [rsi] ; ja 0x4ba50c ; ret 0x48f
0x0000000000409a3e : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b8fb2 : outsb dx, byte ptr [rsi] ; retf
0x00000000004b82c4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004b98f8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bd3b1 : outsb dx, byte ptr [rsi] ; std ; inc dword ptr [rax] ; jo 0x4bd3ba ; jmp rax
0x000000000042619a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004c4a25 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; js 0x4c4a35 ; cli ; jmp rdx
0x00000000004bfd39 : outsd dx, dword ptr [rsi] ; cmc ; call qword ptr [rsi]
0x0000000000420d08 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004267be : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004313d2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000004315d2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x000000000042eeed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042ef8d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042eab2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042eb32 : outsd dx, dword ptr [rsi] ; push rdi ; retf -0x354e
0x00000000004650ca : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042eef2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b8c86 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000431587 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042ef92 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000046511a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000041cc8d : outsd dx, dword ptr [rsi] ; retf
0x0000000000431652 : outsd dx, dword ptr [rsi] ; retf -0x74b4
0x0000000000428699 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000042e4da : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042dfca : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004b8c85 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000422002 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000465e24 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x0000000000465e0f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000422001 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004ba085 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004ba086 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000422eaf : pmovmskb edx, mm4 ; test edx, edx ; je 0x422ec3 ; bsf eax, edx ; ret
0x0000000000441de5 : pop r10 ; ret
0x00000000004ba50f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041dd2a : pop r12 ; jmp rax
0x000000000041fb3c : pop r12 ; jmp rcx
0x000000000043f55f : pop r12 ; mov esi, 2 ; jmp rax
0x000000000043f579 : pop r12 ; mov esi, 3 ; jmp rax
0x0000000000472bbd : pop r12 ; pop r13 ; jmp rax
0x000000000048e60c : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048e58a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d2b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402163 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040153f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401662 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f5d5 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000405a06 : pop r12 ; pop r13 ; ret
0x000000000047ac4c : pop r12 ; pop r14 ; ret
0x000000000046aa21 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x0000000000472bbf : pop r13 ; jmp rax
0x000000000048e60e : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048e58c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d2d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402165 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401541 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401664 : pop r13 ; pop r14 ; ret
0x000000000040f5d7 : pop r13 ; pop rbp ; ret
0x0000000000405a08 : pop r13 ; ret
0x000000000048e610 : pop r14 ; fmul st(0) ; ret
0x000000000048e58e : pop r14 ; fmulp st(1) ; ret
0x0000000000440d2f : pop r14 ; pop r15 ; jmp rax
0x0000000000402167 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401543 : pop r14 ; pop r15 ; ret
0x0000000000401666 : pop r14 ; ret
0x0000000000440d31 : pop r15 ; jmp rax
0x0000000000402169 : pop r15 ; pop rbp ; ret
0x0000000000401545 : pop r15 ; ret
0x0000000000418641 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000044e4b2 : pop rax ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004bc498 : pop rax ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000418642 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000477cd6 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000409a54 : pop rax ; ret 0xffff
0x00000000004ba463 : pop rax ; retf
0x0000000000409254 : pop rax ; retf -1
0x00000000004c383d : pop rbp ; add byte ptr [rax], al ; adc bl, bl ; clc ; call qword ptr [rax]
0x00000000004c3825 : pop rbp ; add byte ptr [rax], al ; or bl, bl ; clc ; call qword ptr [rbx]
0x00000000004c3855 : pop rbp ; add byte ptr [rax], al ; or bl, bl ; clc ; call qword ptr [rdx]
0x00000000004789ca : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00000000004b9f05 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000041d1e2 : pop rbp ; jmp rax
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2ca1f5], 1 ; ret
0x0000000000418a62 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cab50 ; jmp rax
0x00000000004b8860 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000041dd29 : pop rbp ; pop r12 ; jmp rax
0x000000000041fb3b : pop rbp ; pop r12 ; jmp rcx
0x000000000043f55e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043f578 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x0000000000472bbc : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048e60b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048e589 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d2a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040153e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401661 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405a05 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047ac4b : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048e60f : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048e58d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d2e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402166 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401542 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401665 : pop rbp ; pop r14 ; ret
0x000000000040f5d8 : pop rbp ; pop rbp ; ret
0x0000000000479c38 : pop rbp ; pop rbx ; ret
0x00000000004004d1 : pop rbp ; ret
0x00000000004789d2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000412abc : pop rbp ; sub rax, rdx ; ret
0x0000000000444ece : pop rbx ; add byte ptr [rdi + 0x6cc050], r15b ; call rax
0x00000000004c72ae : pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000049ace1 : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004b7858 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043da2c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043da5f : pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000441fe7 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000004b7856 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004872fa : pop rbx ; jmp rax
0x0000000000410fee : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000474097 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043dac3 : pop rbx ; mov eax, eax ; ret
0x00000000004625ea : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000459c4e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000047602e : pop rbx ; mov edi, 0x6ca140 ; jmp rax
0x0000000000414c56 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414dc6 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000462e77 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041f858 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f5d4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046aa20 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041d1e1 : pop rbx ; pop rbp ; jmp rax
0x000000000041dd28 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000041fb3a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000043f55d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043f577 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x0000000000472bbb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000401660 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405a04 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047ac4a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x0000000000412abb : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400d85 : pop rbx ; ret
0x00000000004bab40 : pop rbx ; ret 0x6f9
0x00000000004b801d : pop rbx ; retf
0x0000000000466289 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000043fe2a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047a478 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x251ec3] ; jmp rax
0x00000000004912e4 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000473e59 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x000000000043226b : pop rcx ; jle 0x43229d ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x000000000048854f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004bc810 : pop rcx ; sbb byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000042f7c8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042b46d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004311e9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430ff9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004b9dfe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000440d32 : pop rdi ; jmp rax
0x00000000004b8dc1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000430e19 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430c49 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430d45 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000430c91 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040216a : pop rdi ; pop rbp ; ret
0x0000000000401546 : pop rdi ; ret
0x00000000004c34f5 : pop rdx ; add byte ptr [rax], al ; call 0x124c2dba
0x00000000004c3525 : pop rdx ; add byte ptr [rax], al ; clc ; mov bh, 0xf8 ; call qword ptr [rcx]
0x00000000004c34dd : pop rdx ; add byte ptr [rax], al ; loopne 0x4c349f ; clc ; call qword ptr [rdi]
0x000000000047591d : pop rdx ; add r8b, bpl ; retf
0x00000000004b99e1 : pop rdx ; je 0x4b99ab ; ret 0xacfc
0x00000000004b9af3 : pop rdx ; leave ; retf
0x00000000004ba9a7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000441de4 : pop rdx ; pop r10 ; ret
0x0000000000477cd7 : pop rdx ; pop rbx ; ret
0x0000000000441e09 : pop rdx ; pop rsi ; ret
0x00000000004a3280 : pop rdx ; psubw mm7, mm7 ; retf -0x6f2
0x0000000000441de6 : pop rdx ; ret
0x0000000000414012 : pop rdx ; retf
0x00000000004ba510 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042dfd4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42dfaa
0x000000000042e052 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e028
0x000000000042e4e4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e4ba
0x000000000042e562 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42e538
0x000000000042b36e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c392d : pop rsi ; add byte ptr [rax], al ; xlatb ; retf
0x0000000000473093 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004256ec : pop rsi ; add dword ptr [rax], eax ; ret
0x0000000000487b56 : pop rsi ; and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000048e611 : pop rsi ; fmul st(0) ; ret
0x000000000048e58f : pop rsi ; fmulp st(1) ; ret
0x0000000000467b93 : pop rsi ; mov esi, 0x8948004b ; ret
0x0000000000466a92 : pop rsi ; mov esi, 0x894d004b ; retf 0x694d
0x000000000042be75 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440d30 : pop rsi ; pop r15 ; jmp rax
0x0000000000402168 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401544 : pop rsi ; pop r15 ; ret
0x0000000000401667 : pop rsi ; ret
0x0000000000428f00 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429c00 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047b674 : pop rsp ; and al, 0x78 ; call r12
0x00000000004bf719 : pop rsp ; cmc ; call qword ptr [rcx]
0x000000000041dd2b : pop rsp ; jmp rax
0x000000000041fb3d : pop rsp ; jmp rcx
0x000000000043f560 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000043f57a : pop rsp ; mov esi, 3 ; jmp rax
0x00000000004c8024 : pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; sbb byte ptr [rax], dh ; std ; call rsi
0x0000000000422460 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c4a24 : pop rsp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; js 0x4c4a36 ; cli ; jmp rdx
0x0000000000472bbe : pop rsp ; pop r13 ; jmp rax
0x000000000048e60d : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048e58b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x0000000000440d2c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402164 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401540 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401663 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f5d6 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000405a07 : pop rsp ; pop r13 ; ret
0x000000000047ac4d : pop rsp ; pop r14 ; ret
0x00000000004c3824 : pop rsp ; pop rbp ; add byte ptr [rax], al ; or bl, bl ; clc ; call qword ptr [rbx]
0x000000000046aa22 : pop rsp ; pop rbp ; ret
0x00000000004c3524 : pop rsp ; pop rdx ; add byte ptr [rax], al ; clc ; mov bh, 0xf8 ; call qword ptr [rcx]
0x0000000000474664 : pop rsp ; push rdi ; add r8b, bpl ; ret
0x000000000040060b : pop rsp ; ret
0x000000000041cca0 : pop rsp ; retf
0x0000000000479b19 : pop rsp ; retf 0x4df0
0x00000000004b9b67 : pop rsp ; sbb ebp, ebx ; retf
0x00000000004c7815 : popfq ; add byte ptr [rax], al ; call 0x134c742b
0x00000000004c7814 : popfq ; add byte ptr [rax], al ; call 0x134c742c
0x00000000004c7845 : popfq ; add byte ptr [rax], al ; call 0x134c745b
0x00000000004c7875 : popfq ; add byte ptr [rax], al ; call 0x134c748b
0x000000000045c04a : popfq ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x000000000043f8df : popfq ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x43f8ef ; call rbx
0x00000000004b9aec : popfq ; jrcxz 0x4b9ab1 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000041d517 : popfq ; ret 0x2a
0x00000000004ba8a2 : popfq ; retf -0x21b1
0x0000000000493b70 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046962f : popfq ; sub al, 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045eff9 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004346c2 : psllq mm1, qword ptr [r15] ; jg 0x4346dd ; ret
0x00000000004346c3 : psllq mm1, qword ptr [rdi] ; jg 0x4346dc ; ret
0x000000000043a9f6 : psllq mm1, qword ptr [rdi] ; jg 0x43aa0a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043a9f5 : psllq mm1, qword ptr [rdi] ; jg 0x43aa0b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043aa57 : psllq mm1, qword ptr [rdi] ; jg 0x43aa6c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004c4b51 : psubd mm7, mm7 ; retf
0x0000000000484b59 : psubw mm7, mm7 ; jmp 0x48160f
0x00000000004a3301 : psubw mm7, mm7 ; mov al, 0xe ; stc ; jmp qword ptr [rax]
0x00000000004a327d : psubw mm7, mm7 ; pop rdx ; psubw mm7, mm7 ; retf -0x6f2
0x00000000004a3281 : psubw mm7, mm7 ; retf -0x6f2
0x00000000004c430d : push -0x13b00000 ; stc ; call qword ptr [rsi]
0x000000000047591c : push -0x17ffb4a6 ; retf
0x000000000047dee0 : push -0x37fa74b8 ; ret 0x24
0x00000000004ba0f5 : push -0x57d3205 ; call 0xffffffffab596bf5
0x000000000045227f : push -0x76000005 ; ret 0x8941
0x000000000047b52e : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000048075f : push -0x7c000006 ; ret 0x8908
0x000000000048527a : push -0x9000007 ; ret 0xf02
0x000000000043b314 : push -0x9ffffff ; ret 0x7501
0x00000000004b98f5 : push 0x1b6e41b5 ; std ; retf
0x000000000041ecac : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004ba582 : push 0x6e ; ja 0x4ba50d ; ret 0x48f
0x0000000000415866 : push 0x74c98548 ; sub dword ptr [rax + 0x39], ecx ; retf
0x00000000004438e2 : push 0x93 ; sub byte ptr [rax], al ; test eax, eax ; je 0x4438f8 ; ret
0x00000000004b8101 : push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004b7f4e : push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004b88c4 : push 0xd0 ; retf -0x18d2
0x00000000004bd3a9 : push 0xfd ; inc dword ptr [rax + 0x6c] ; std ; jmp qword ptr [rax]
0x00000000004b9e62 : push 0xfd4cbe ; retf 0xf64
0x000000000048510c : push 0xffffff9 ; xchg eax, esp ; ret
0x0000000000459b91 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004a2cbf : push qword ptr [rax + 0x40fff8c2] ; ret
0x00000000004a2ec7 : push qword ptr [rax + 0x40fff918] ; sbb cl, bh ; call rsi
0x00000000004a309f : push qword ptr [rax + 0x40fff91c] ; sbb al, 0xf9 ; call rax
0x00000000004bd433 : push qword ptr [rax + 0x4b] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004a2a27 : push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004bd3a7 : push qword ptr [rax + 0x6a] ; std ; inc dword ptr [rax + 0x6c] ; std ; jmp qword ptr [rax]
0x00000000004bd973 : push qword ptr [rax - 0x30] ; std ; ljmp ptr [rsi + rdx*8] ; std ; jmp qword ptr [rcx]
0x00000000004a3457 : push qword ptr [rax - 0x3f000686] ; jp 0x4a3460 ; call rax
0x00000000004a33ff : push qword ptr [rax - 0x3f00068b] ; jne 0x4a3408 ; call rax
0x00000000004a2abb : push qword ptr [rax - 0x3f0007ae] ; push rsp ; clc ; call rax
0x00000000004a2a73 : push qword ptr [rax - 0x7b] ; clc ; inc eax ; xchg al, bh ; call qword ptr [rax]
0x00000000004a2a1f : push qword ptr [rax] ; clc ; call rax
0x00000000004a293b : push qword ptr [rax] ; clc ; inc dword ptr [rax + 1] ; clc ; call qword ptr [rax]
0x00000000004a2a3f : push qword ptr [rax] ; jb 0x4a2a3f ; call rax
0x000000000049c2b3 : push qword ptr [rax] ; jne 0x49c2e0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049c303 : push qword ptr [rax] ; jne 0x49c330 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004a2d77 : push qword ptr [rax] ; loop 0x4a2d77 ; call qword ptr [rax]
0x00000000004a2bc3 : push qword ptr [rax] ; mov esp, 0xbd20fff8 ; clc ; call qword ptr [rax]
0x00000000004bd52b : push qword ptr [rax] ; retf
0x000000000043cc98 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000410b4b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000475bae : push qword ptr [rbp + rax - 0x18] ; retf -0x587
0x000000000041544d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464115 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004640bd : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415af1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442152 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415a99 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004663da : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004a303b : push qword ptr [rcx + rbx + 0x1944fff9] ; stc ; call rsp
0x00000000004a2bfb : push qword ptr [rcx - 0x3e] ; clc ; inc dword ptr [rcx] ; ret
0x0000000000411021 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000473f89 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459b92 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dc5d : push qword ptr [rdi + 0x20] ; ret
0x000000000043eaa8 : push qword ptr [rdi + 0x35] ; ret
0x000000000043eb4c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043e8ca : push qword ptr [rdi + 3] ; ret
0x000000000043e919 : push qword ptr [rdi + 4] ; ret
0x000000000046a35f : push qword ptr [rdi + 6] ; ret
0x000000000044f0e5 : push qword ptr [rdi + 8] ; ret
0x0000000000469f7c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000414f76 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a2f73 : push qword ptr [rdx + 0x42fff91a] ; sbb bh, cl ; call rdx
0x000000000046a22d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a2c43 : push qword ptr [rsi - 0x3d] ; clc ; call qword ptr [rsi]
0x00000000004a3217 : push qword ptr [rsp + rdx - 7] ; jmp rsp
0x0000000000414baf : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b7fac : push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a32a8 : push rax ; adc bh, cl ; call rax
0x00000000004631ea : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416431 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004a32b8 : push rax ; adc cl, bh ; call rax
0x000000000041aa20 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004a32b0 : push rax ; adc ecx, edi ; call rax
0x00000000004a32a0 : push rax ; adc edi, ecx ; call rax
0x000000000049e51c : push rax ; add al, bpl ; retf
0x00000000004934ed : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044624a : push rax ; add byte ptr [rax - 0x7f], cl ; ret 0x50e0
0x0000000000414bb0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043e9fd : push rax ; add byte ptr [rax], al ; ret
0x0000000000425305 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045ca2b : push rax ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x0000000000444188 : push rax ; call rbx
0x00000000004bd414 : push rax ; cdq ; std ; call rax
0x000000000045d5e5 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004a2d90 : push rax ; fdivp st(0) ; call qword ptr [rax]
0x00000000004a2954 : push rax ; in al, -9 ; call qword ptr [rax - 0x2f00081b]
0x00000000004c4310 : push rax ; in al, dx ; stc ; call qword ptr [rsi]
0x00000000004a33cf : push rax ; je 0x4a33d4 ; inc dword ptr [rax] ; jne 0x4a33d8 ; call qword ptr [rax]
0x00000000004a34af : push rax ; jl 0x4a34b0 ; call qword ptr [rax]
0x0000000000477bdc : push rax ; jmp qword ptr [rax]
0x000000000049c2db : push rax ; jne 0x49c2d0 ; xor eax, eax ; ret
0x000000000049c32b : push rax ; jne 0x49c320 ; xor eax, eax ; ret
0x00000000004a340f : push rax ; jne 0x4a3414 ; inc dword ptr [rax] ; jbe 0x4a3418 ; jmp qword ptr [rax]
0x00000000004a348b : push rax ; jnp 0x4a3490 ; inc dword ptr [rax] ; jl 0x4a3494 ; call qword ptr [rax]
0x00000000004b801a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004a2dfb : push rax ; loop 0x4a2dfb ; jmp rax
0x00000000004a2d97 : push rax ; loope 0x4a2d97 ; call rax
0x00000000004a2cf3 : push rax ; loopne 0x4a2cf3 ; call rax
0x00000000004a2d74 : push rax ; loopne 0x4a2d76 ; push qword ptr [rax] ; loop 0x4a2d7a ; call qword ptr [rax]
0x00000000004bd3ec : push rax ; mov bh, ch ; call rax
0x000000000044625a : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000416383 : push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416373
0x0000000000487776 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044b018 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004bd3fc : push rax ; nop ; std ; call rax
0x00000000004189a2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000456a07 : push rax ; or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf -2
0x000000000041b362 : push rax ; or dh, dh ; ret 0x7404
0x000000000041b2dd : push rax ; or dh, dh ; ret 0xf04
0x000000000042236c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a330f : push rax ; out dx, eax ; clc ; call qword ptr [rax]
0x0000000000465fee : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044625c : push rax ; push rsp ; ret
0x000000000046849b : push rax ; ret 0x6c
0x00000000004bd4a0 : push rax ; ret 0xfffd
0x00000000004ba8c0 : push rax ; retf
0x000000000046e0fc : push rax ; retf -1
0x00000000004571eb : push rax ; rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x0000000000410312 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf -0x428b
0x0000000000416426 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000046418a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a30c8 : push rax ; sbb cl, bh ; jmp rax
0x00000000004a2e97 : push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x00000000004a2eb0 : push rax ; sbb edi, ecx ; jmp rax
0x00000000004bd404 : push rax ; xchg eax, ebx ; std ; call rax
0x00000000004bd40c : push rax ; xchg eax, esi ; std ; call rax
0x00000000004bd3e4 : push rax ; xchg ebp, edi ; call rax
0x0000000000415aed : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004b7fad : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000049e4b7 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000047912f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000043fc71 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000473ec8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000049a986 : push rbp ; inc dword ptr [rax + 0x63491ffa] ; ret 0x8b48
0x00000000004a2bd0 : push rbp ; mov ebx, 0xbc01fff8 ; clc ; call rcx
0x0000000000494cb8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000456a0b : push rbp ; or cl, ch ; retf -2
0x000000000046a170 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004c1f1d : push rbp ; ret
0x00000000004648f1 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000042562a : push rbp ; xor rax, rax ; ret
0x0000000000400b89 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047a504 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d086 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000422d49 : push rbx ; add qword ptr [rax], rax ; ret
0x00000000004ba199 : push rbx ; call 0x4c15cb56
0x000000000041635d : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000044cb92 : push rbx ; je 0x44cba9 ; cmp esi, 3 ; je 0x44cba9 ; pop rbx ; ret
0x0000000000464089 : push rbx ; je 0x4640ed ; pop rbp ; pop r12 ; ret
0x000000000046412e : push rbx ; je 0x464192 ; pop rbp ; pop r12 ; ret
0x000000000046a171 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000046226a : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416cba : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000414ffd : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000416382 : push rbx ; push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416374
0x000000000040d7a9 : push rbx ; ret
0x0000000000455599 : push rbx ; ret 0xfffa
0x0000000000416386 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf -0x2015
0x0000000000416361 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000041a582 : push rbx ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret
0x0000000000413f54 : push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004120d1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004b99dc : push rbx ; xchg eax, edx ; jae 0x4b99bb ; push rsi ; pop rdx ; je 0x4b99b0 ; ret 0xacfc
0x0000000000444a19 : push rbx ; xor al, byte ptr [rbx] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x000000000043e969 : push rcx ; add byte ptr [rax], al ; ret
0x000000000047ab1f : push rcx ; add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0f331
0x000000000040522a : push rcx ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; retf
0x00000000004b8c65 : push rcx ; call qword ptr [rsi]
0x00000000004c5649 : push rcx ; cli ; jmp rsp
0x0000000000434fdd : push rcx ; jl 0x43502e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435144 : push rcx ; jl 0x435195 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004896b5 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046914b : push rcx ; xor dword ptr [rsi], esp ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000043af3a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000434829 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000475125 : push rdi ; add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000043afec : push rdi ; add eax, 0xc478d48 ; ret
0x0000000000474665 : push rdi ; add r8b, bpl ; ret
0x00000000004c1e39 : push rdi ; call qword ptr [rdi]
0x0000000000430ad8 : push rdi ; clc ; ret
0x0000000000430c50 : push rdi ; cld ; ret
0x0000000000431777 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434109 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434089 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000433eda : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414af4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000433f6a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000049d9ae : push rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045cac8 : push rdi ; or al, 0x83 ; ret
0x000000000045ca4b : push rdi ; or al, 0xf6 ; ret 0xf08
0x0000000000479c2a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047f73a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000479c31 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043b1d0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042eeee : push rdi ; ret
0x00000000004010b5 : push rdi ; ret 0
0x000000000042ef8e : push rdi ; ret 0xff3
0x000000000042eab3 : push rdi ; retf
0x000000000042eb33 : push rdi ; retf -0x354e
0x000000000041edf5 : push rdi ; retf 0
0x0000000000431977 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043119a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431577 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004104bf : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000004650cb : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004c2d45 : push rdx ; add byte ptr [rax], al ; fdiv dword ptr [rdi - 8] ; call qword ptr [rcx]
0x000000000043e870 : push rdx ; add byte ptr [rax], al ; ret
0x000000000046a6ba : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a2abd : push rdx ; clc ; inc eax ; push rsp ; clc ; call rax
0x000000000041bb33 : push rdx ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; retf 0x4801
0x00000000004c533d : push rdx ; ret
0x000000000049ffe5 : push rdx ; retf
0x0000000000446256 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042dbd4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d4d9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43d530 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000463652 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000434ac1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000434b31 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043a985 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000434a51 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043a923 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042dbe9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a2ac5 : push rsi ; clc ; jmp rax
0x0000000000430c02 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431371 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430fa5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431185 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431365 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430dc5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba580 : push rsi ; cli ; push 0x6e ; ja 0x4ba50f ; ret 0x48f
0x00000000004bf549 : push rsi ; cmc ; jmp qword ptr [rcx]
0x000000000043c7d6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043c7c6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043c796 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000042befd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004b99e0 : push rsi ; pop rdx ; je 0x4b99ac ; ret 0xacfc
0x000000000041e232 : push rsi ; ret
0x000000000048527d : push rsi ; ret 0xf02
0x000000000045e568 : push rsi ; ret 0xf10
0x00000000004a2c3c : push rsi ; ret 0xfff8
0x00000000004a2ef8 : push rsi ; sbb bh, cl ; jmp rsi
0x0000000000443909 : push rsi ; sub byte ptr [rax], al ; pop rbx ; ret
0x000000000043c7a6 : push rsi ; sub eax, edx ; ret
0x00000000004b7fa8 : push rsi ; xchg eax, ebp ; jge 0x4b7f8d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042dbfe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a3213 : push rsp ; adc al, 0xf9 ; push qword ptr [rsp + rdx - 7] ; jmp rsp
0x000000000041ae5c : push rsp ; and al, 0x10 ; call rax
0x0000000000464643 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000046624e : push rsp ; and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000446f41 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004465ce : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004668b1 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044b016 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041d96a : push rsp ; and al, 0x68 ; call rax
0x000000000041ecaa : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x0000000000447c6c : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044a856 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491040 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000490ffa : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041a765 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004bfe1c : push rsp ; and eax, dword ptr [rax] ; add byte ptr [rax], ah ; jno 0x4bfe1f ; call qword ptr [rdx]
0x00000000004a2ac1 : push rsp ; clc ; call rax
0x0000000000405628 : push rsp ; fadd dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004949b9 : push rsp ; or eax, 0x894d0000 ; retf
0x0000000000441228 : push rsp ; ret
0x000000000046fedf : push rsp ; retf -0x14f8
0x00000000004784a2 : push rsp ; retf 0x45f8
0x0000000000479ab0 : push rsp ; retf 0x48f8
0x00000000004a3024 : push rsp ; sbb al, 0xf9 ; jmp rsp
0x00000000004ba1aa : push rsp ; syscall
0x0000000000428bc0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000446750 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004a2b51 : pushfq ; clc ; jmp qword ptr [rax]
0x000000000041408c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004298c0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000467d13 : pushfq ; ret 0xb60f
0x000000000046344c : pushfq ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf -2
0x000000000049226d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a2ac0 : rcl byte ptr [rax + rdi*8 - 1], 0xd0 ; push rsi ; clc ; jmp rax
0x00000000004bd408 : rcl byte ptr [rbp + rdi*8 - 0x269af01], 1 ; call rax
0x00000000004bd400 : rcl byte ptr [rcx - 0x6caf0003], 1 ; std ; call rax
0x00000000004bd410 : rcl byte ptr [rdi - 0x66af0003], 1 ; std ; call rax
0x00000000004ba2f1 : rcl byte ptr [rdi], cl ; retf
0x00000000004137b7 : rcl byte ptr [rip + 0x60e8004a], 1 ; retf
0x00000000004a2ac4 : rcl byte ptr [rsi - 8], 1 ; jmp rax
0x00000000004a2e3c : rcl ch, 0xf8 ; call qword ptr [rax]
0x00000000004a2e30 : rcl cl, 1 ; clc ; jmp qword ptr [rax]
0x00000000004b9e1a : rcl dword ptr [rsi + 0x27], cl ; retf -0x3f02
0x00000000004b99df : rcl dword ptr [rsi + 0x5a], cl ; je 0x4b99ad ; ret 0xacfc
0x00000000004b9e19 : rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x00000000004b99db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4b99b1 ; ret 0xacfc
0x00000000004a2e84 : rcr al, 1 ; clc ; jmp qword ptr [rax]
0x00000000004415cc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000497d5d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046283a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000043fe2c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004625ec : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000479c37 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004420d0 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000444ecd : rcr byte ptr [rbx + 0x44], 0 ; mov edi, 0x6cc050 ; call rax
0x000000000041758f : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041e16e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047ac49 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec7e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049bbe8 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000045ba3b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041dc23 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004179f9 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000491b7d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bf650 : rcr byte ptr [rcx - 0xb], 0xff ; ret
0x00000000004b9dfd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004bd418 : rcr byte ptr [rdx - 0x7b7f0003], 1 ; std ; jmp rax
0x000000000043f7aa : rcr ch, cl ; std ; dec dword ptr [rax - 0x75] ; jge 0x43f7ba ; call rbx
0x0000000000478139 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004ba151 : rcr dword ptr [rcx], cl ; retf -0x4466
0x0000000000431fc6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004adce0 : ret 0x10
0x000000000044ed5b : ret 0x100
0x000000000046221f : ret 0x107
0x0000000000475a66 : ret 0x10eb
0x000000000041b612 : ret 0x110
0x0000000000479c0c : ret 0x114d
0x0000000000446a08 : ret 0x1189
0x000000000044579b : ret 0x11e9
0x0000000000482d3a : ret 0x12
0x0000000000473ecc : ret 0x1272
0x000000000049cdb3 : ret 0x1374
0x000000000046d37f : ret 0x1376
0x000000000046a501 : ret 0x1477
0x000000000041ad01 : ret 0x148
0x0000000000415b02 : ret 0x149
0x0000000000419955 : ret 0x14c
0x000000000043539c : ret 0x14d
0x000000000042307a : ret 0x17
0x00000000004352d9 : ret 0x180f
0x000000000044e7f6 : ret 0x1874
0x0000000000425695 : ret 0x1876
0x00000000004178d5 : ret 0x18eb
0x00000000004678a5 : ret 0x190
0x00000000004882c2 : ret 0x1a75
0x00000000004ba35a : ret 0x1ad4
0x00000000004b8aed : ret 0x1b49
0x000000000041710f : ret 0x1be
0x00000000004af9b0 : ret 0x1d4
0x00000000004b0148 : ret 0x1d5
0x0000000000400d35 : ret 0x1d89
0x0000000000447353 : ret 0x1e76
0x0000000000448ee7 : ret 0x1f0f
0x000000000041ddae : ret 0x1f76
0x0000000000458e7b : ret 0x1fe8
0x000000000044ec77 : ret 0x200
0x000000000044654c : ret 0x2176
0x000000000049fe5e : ret 0x22
0x0000000000422e18 : ret 0x2288
0x000000000042f0f2 : ret 0x2373
0x000000000043ea47 : ret 0x23e8
0x000000000047dee5 : ret 0x24
0x000000000041a6d6 : ret 0x24e9
0x000000000046cd31 : ret 0x25
0x0000000000414629 : ret 0x2501
0x000000000047a175 : ret 0x2529
0x000000000041d19d : ret 0x2575
0x0000000000467256 : ret 0x264f
0x0000000000401386 : ret 0x2773
0x0000000000464ec6 : ret 0x2774
0x00000000004308a6 : ret 0x280f
0x0000000000425685 : ret 0x2876
0x000000000047ecd8 : ret 0x28f5
0x00000000004855fd : ret 0x2941
0x000000000041052d : ret 0x2948
0x0000000000432011 : ret 0x294c
0x000000000041263b : ret 0x294d
0x000000000041d4a4 : ret 0x2a
0x000000000041dcbb : ret 0x2a75
0x00000000004101cf : ret 0x2b48
0x0000000000445a3e : ret 0x2b49
0x00000000004167da : ret 0x2b4d
0x000000000043d992 : ret 0x2b77
0x000000000041b09c : ret 0x2c75
0x000000000043d637 : ret 0x2c76
0x00000000004013fa : ret 0x2c8d
0x0000000000400a1e : ret 0x2ce8
0x0000000000482cc4 : ret 0x2e
0x0000000000461e05 : ret 0x2e66
0x000000000041bc6b : ret 0x30be
0x0000000000445925 : ret 0x3101
0x0000000000403796 : ret 0x3145
0x000000000046f482 : ret 0x314c
0x00000000004aeea8 : ret 0x33
0x0000000000403f41 : ret 0x348
0x000000000044b97b : ret 0x349
0x0000000000488318 : ret 0x357e
0x00000000004b9c3a : ret 0x3827
0x000000000047b422 : ret 0x3840
0x000000000040fbef : ret 0x3841
0x000000000043fb8f : ret 0x3845
0x0000000000425675 : ret 0x3876
0x00000000004428c9 : ret 0x3880
0x0000000000414f0b : ret 0x389
0x00000000004b82c6 : ret 0x38ae
0x000000000047a066 : ret 0x38b
0x000000000049d202 : ret 0x38e8
0x000000000044f251 : ret 0x3948
0x000000000041c79b : ret 0x3949
0x000000000044c796 : ret 0x394c
0x0000000000452118 : ret 0x394d
0x000000000043cdb2 : ret 0x3a01
0x000000000042f0db : ret 0x3a73
0x000000000044c2a3 : ret 0x3a76
0x00000000004420c1 : ret 0x3b01
0x000000000046698a : ret 0x3bba
0x000000000040e64e : ret 0x3ce8
0x0000000000445165 : ret 0x3d83
0x0000000000469842 : ret 0x3e9
0x0000000000418f52 : ret 0x4007
0x00000000004a0a48 : ret 0x401d
0x0000000000466096 : ret 0x408d
0x000000000047799f : ret 0x40bf
0x000000000041d05d : ret 0x41
0x0000000000445550 : ret 0x4101
0x0000000000454730 : ret 0x4108
0x00000000004561f8 : ret 0x4110
0x000000000041c00c : ret 0x4117
0x000000000046e61c : ret 0x412f
0x000000000043ee9d : ret 0x4164
0x000000000044631e : ret 0x41c3
0x000000000042da6a : ret 0x4266
0x00000000004679a2 : ret 0x428d
0x000000000044c29a : ret 0x4372
0x000000000044cd2b : ret 0x4389
0x000000000044540f : ret 0x438b
0x00000000004a35e8 : ret 0x43d9
0x00000000004a3fd8 : ret 0x43e5
0x0000000000411223 : ret 0x4401
0x0000000000454cb7 : ret 0x440f
0x0000000000463e07 : ret 0x4410
0x000000000047af11 : ret 0x448d
0x0000000000489215 : ret 0x44c6
0x0000000000461b82 : ret 0x4502
0x00000000004b2528 : ret 0x4568
0x000000000046d018 : ret 0x4574
0x00000000004b2d00 : ret 0x45c9
0x00000000004626c8 : ret 0x45f6
0x00000000004b8dc4 : ret 0x474c
0x0000000000447dd5 : ret 0x4801
0x000000000042bce1 : ret 0x4802
0x000000000042bdbd : ret 0x4803
0x0000000000404320 : ret 0x4804
0x000000000042bd8d : ret 0x4805
0x000000000042bd75 : ret 0x4806
0x0000000000422da3 : ret 0x4808
0x000000000044e804 : ret 0x4809
0x0000000000458024 : ret 0x480f
0x000000000041a869 : ret 0x4810
0x000000000044c170 : ret 0x4811
0x0000000000452762 : ret 0x481e
0x000000000041a7ab : ret 0x4820
0x000000000045b24c : ret 0x482d
0x0000000000443d1f : ret 0x4830
0x0000000000401382 : ret 0x4838
0x000000000042d976 : ret 0x4840
0x000000000041bdd6 : ret 0x4874
0x0000000000422eb8 : ret 0x48c3
0x0000000000466b3d : ret 0x48d
0x0000000000473204 : ret 0x48e9
0x00000000004ba586 : ret 0x48f
0x000000000040302e : ret 0x4901
0x000000000044b553 : ret 0x4904
0x000000000042bffe : ret 0x4906
0x0000000000456868 : ret 0x4908
0x00000000004698d9 : ret 0x4909
0x0000000000422112 : ret 0x4910
0x0000000000420386 : ret 0x4920
0x000000000041f300 : ret 0x4930
0x000000000047de14 : ret 0x4976
0x000000000047e531 : ret 0x4b
0x000000000046c142 : ret 0x4b30
0x0000000000473f63 : ret 0x4b56
0x00000000004bbb18 : ret 0x4bb0
0x0000000000405995 : ret 0x4c01
0x000000000042bf41 : ret 0x4c02
0x000000000044c05f : ret 0x4c04
0x0000000000485345 : ret 0x4c08
0x0000000000451e56 : ret 0x4c40
0x0000000000448020 : ret 0x4c88
0x0000000000446431 : ret 0x4d02
0x00000000004b9fe7 : ret 0x4e27
0x00000000004690f7 : ret 0x4eb
0x00000000004441d8 : ret 0x4ee9
0x000000000044502e : ret 0x4f74
0x000000000044624f : ret 0x50e0
0x000000000042f0c4 : ret 0x5173
0x000000000044e603 : ret 0x527e
0x0000000000462448 : ret 0x5389
0x0000000000485397 : ret 0x53e8
0x000000000045a73b : ret 0x53e9
0x000000000047b1ad : ret 0x5438
0x0000000000491066 : ret 0x5488
0x000000000044c61a : ret 0x5489
0x000000000045a393 : ret 0x548b
0x00000000004b824c : ret 0x5508
0x00000000004055af : ret 0x5525
0x00000000004207f2 : ret 0x575
0x000000000046d38d : ret 0x576
0x00000000004ba518 : ret 0x5803
0x000000000040e80b : ret 0x589
0x00000000004b7f20 : ret 0x591c
0x00000000004b8c87 : ret 0x5ae4
0x0000000000449311 : ret 0x5c77
0x000000000044eaed : ret 0x5de8
0x0000000000458f5c : ret 0x5ee8
0x00000000004ba9b2 : ret 0x62c1
0x000000000045bc03 : ret 0x6348
0x0000000000411842 : ret 0x6349
0x000000000047e8c7 : ret 0x63e8
0x00000000004895e7 : ret 0x6610
0x0000000000425602 : ret 0x6620
0x0000000000422f05 : ret 0x66c3
0x0000000000473ede : ret 0x674
0x00000000004b7f3f : ret 0x67b2
0x000000000047cf2d : ret 0x6876
0x00000000004165ba : ret 0x6a
0x000000000043e35d : ret 0x6b8
0x0000000000466dc3 : ret 0x6c
0x0000000000499eb8 : ret 0x6de9
0x00000000004bab41 : ret 0x6f9
0x000000000043205e : ret 0x7280
0x00000000004758b9 : ret 0x728d
0x000000000043d7fb : ret 0x72e9
0x000000000046a3f7 : ret 0x73e8
0x0000000000415451 : ret 0x7401
0x000000000041deaf : ret 0x7402
0x000000000041b365 : ret 0x7404
0x0000000000410d43 : ret 0x7408
0x0000000000400f0c : ret 0x7420
0x00000000004583f2 : ret 0x7450
0x000000000043b319 : ret 0x7501
0x000000000043b326 : ret 0x7502
0x0000000000425db9 : ret 0x7504
0x000000000043c754 : ret 0x7508
0x000000000043b2eb : ret 0x7510
0x0000000000425db4 : ret 0x7518
0x000000000043b2f8 : ret 0x7520
0x000000000043b305 : ret 0x7540
0x0000000000472851 : ret 0x758b
0x000000000042dfb2 : ret 0x7677
0x0000000000445a32 : ret 0x774
0x00000000004783fa : ret 0x777
0x000000000046d31a : ret 0x7874
0x000000000041ac9a : ret 0x7ae9
0x000000000044657a : ret 0x7b8
0x0000000000425592 : ret 0x7e20
0x0000000000420d0c : ret 0x7f10
0x0000000000461086 : ret 0x7f3c
0x000000000043237e : ret 0x80
0x0000000000421ee9 : ret 0x8000
0x00000000004690fc : ret 0x8001
0x0000000000471fbf : ret 0x8005
0x000000000047cde6 : ret 0x8008
0x0000000000469ae2 : ret 0x8010
0x00000000004730fe : ret 0x8018
0x000000000046f9c8 : ret 0x804
0x000000000046bd80 : ret 0x8116
0x000000000048689b : ret 0x8148
0x000000000045a354 : ret 0x8166
0x0000000000419a9c : ret 0x820f
0x0000000000404100 : ret 0x8301
0x000000000047d321 : ret 0x8308
0x000000000042db80 : ret 0x830f
0x000000000043d6c0 : ret 0x8341
0x00000000004208b5 : ret 0x8348
0x000000000041ad63 : ret 0x8349
0x000000000047f489 : ret 0x8364
0x000000000043e9e7 : ret 0x83e8
0x0000000000411190 : ret 0x840
0x000000000046a962 : ret 0x8401
0x00000000004178e9 : ret 0x840f
0x000000000043d760 : ret 0x8444
0x000000000045bbf5 : ret 0x8504
0x00000000004622d6 : ret 0x8508
0x0000000000412d52 : ret 0x850f
0x0000000000467c05 : ret 0x8545
0x0000000000419022 : ret 0x8548
0x000000000041b0ca : ret 0x854d
0x000000000045921c : ret 0x858b
0x0000000000456a4d : ret 0x85c6
0x0000000000454a9a : ret 0x85c7
0x0000000000400cce : ret 0x860f
0x000000000044ef65 : ret 0x870f
0x00000000004b785e : ret 0x871e
0x000000000046108d : ret 0x875
0x00000000004256a5 : ret 0x876
0x0000000000489210 : ret 0x87e
0x000000000044dffa : ret 0x87e9
0x000000000047dbd4 : ret 0x87f6
0x0000000000447561 : ret 0x8804
0x000000000045d8c2 : ret 0x880f
0x000000000044e4b7 : ret 0x8840
0x0000000000446962 : ret 0x8901
0x000000000047038e : ret 0x8908
0x0000000000400d76 : ret 0x890f
0x000000000044c71f : ret 0x8941
0x0000000000400669 : ret 0x8944
0x000000000041120b : ret 0x8945
0x00000000004493d1 : ret 0x8948
0x000000000040ffbd : ret 0x8949
0x0000000000403b67 : ret 0x894c
0x000000000044552f : ret 0x894d
0x0000000000478ccb : ret 0x894e
0x0000000000482e9c : ret 0x89e9
0x0000000000477a2e : ret 0x8b
0x0000000000461dca : ret 0x8b04
0x000000000046a653 : ret 0x8b05
0x00000000004ba08e : ret 0x8b36
0x000000000044e88a : ret 0x8b41
0x00000000004014f4 : ret 0x8b48
0x0000000000410986 : ret 0x8b49
0x0000000000478c4e : ret 0x8b4a
0x00000000004114e0 : ret 0x8b4c
0x000000000047fcc5 : ret 0x8d01
0x0000000000451d7a : ret 0x8d04
0x0000000000458f40 : ret 0x8d0f
0x000000000040d3af : ret 0x8d48
0x0000000000403316 : ret 0x8d49
0x0000000000465448 : ret 0x8d4a
0x0000000000411496 : ret 0x8d4c
0x000000000041c06c : ret 0x8d4e
0x000000000049d4ad : ret 0x8de8
0x000000000049a148 : ret 0x8de9
0x00000000004104d1 : ret 0x8e0f
0x000000000040151e : ret 0x900
0x0000000000420935 : ret 0x90c3
0x000000000041246b : ret 0x938b
0x0000000000485250 : ret 0x940f
0x0000000000489e66 : ret 0x941
0x0000000000465168 : ret 0x94c
0x000000000047a4ff : ret 0x950f
0x00000000004551f9 : ret 0x9522
0x00000000004039a8 : ret 0x953d
0x00000000004b8eb3 : ret 0x9576
0x0000000000481000 : ret 0x9589
0x000000000041acb1 : ret 0x976
0x0000000000488399 : ret 0x9e74
0x00000000004103e8 : ret 0x9e9
0x0000000000473609 : ret 0x9f75
0x00000000004ad4e0 : ret 0xa
0x0000000000490fd0 : ret 0xa074
0x00000000004b8ba3 : ret 0xa514
0x000000000046862e : ret 0xa9be
0x00000000004b9027 : ret 0xac65
0x00000000004b99e4 : ret 0xacfc
0x000000000043d7e6 : ret 0xaf0f
0x000000000041b64f : ret 0xb48b
0x00000000004028e9 : ret 0xb60f
0x00000000004679bb : ret 0xb70f
0x000000000043e290 : ret 0xb8
0x000000000045f559 : ret 0xb848
0x000000000044e655 : ret 0xb87f
0x0000000000425c87 : ret 0xb8c3
0x00000000004668f2 : ret 0xb8e9
0x00000000004840e2 : ret 0xb908
0x00000000004b8eee : ret 0xb9b9
0x0000000000455a1d : ret 0xbb41
0x0000000000478522 : ret 0xbc41
0x000000000049b2dd : ret 0xbc80
0x000000000046000e : ret 0xbd83
0x00000000004842d0 : ret 0xbe08
0x00000000004b8c44 : ret 0xbe57
0x000000000045a428 : ret 0xbf07
0x00000000004836b1 : ret 0xbf08
0x0000000000421da9 : ret 0xc000
0x000000000048e66e : ret 0xc001
0x000000000048e622 : ret 0xc002
0x0000000000412c93 : ret 0xc031
0x000000000046aec0 : ret 0xc084
0x0000000000425450 : ret 0xc085
0x000000000040e996 : ret 0xc148
0x0000000000466a5d : ret 0xc269
0x000000000045a8f6 : ret 0xc283
0x000000000042ef94 : ret 0xc2b2
0x000000000043da01 : ret 0xc35b
0x00000000004b73e2 : ret 0xc4c3
0x0000000000403386 : ret 0xc4e8
0x00000000004b87f8 : ret 0xc4ff
0x00000000004320f8 : ret 0xc580
0x0000000000481ed0 : ret 0xc6e9
0x0000000000420831 : ret 0xc6eb
0x00000000004377f0 : ret 0xc748
0x000000000041b932 : ret 0xc789
0x0000000000414efc : ret 0xc883
0x000000000047ca33 : ret 0xc931
0x0000000000442709 : ret 0xc985
0x0000000000422d71 : ret 0xc9ff
0x0000000000480a5d : ret 0xcb73
0x00000000004b828a : ret 0xcca7
0x00000000004ba36d : ret 0xcd11
0x000000000041ca61 : ret 0xce31
0x0000000000404db4 : ret 0xce80
0x0000000000480335 : ret 0xce83
0x0000000000418afb : ret 0xcf31
0x00000000004ad8e0 : ret 0xd
0x000000000047b33a : ret 0xd021
0x0000000000441a1f : ret 0xd029
0x0000000000431f6c : ret 0xd073
0x00000000004055be : ret 0xd089
0x0000000000463a45 : ret 0xd108
0x0000000000486269 : ret 0xd129
0x0000000000499b26 : ret 0xd284
0x0000000000485167 : ret 0xd309
0x000000000048877b : ret 0xd348
0x000000000045a913 : ret 0xd529
0x00000000004862e0 : ret 0xd629
0x00000000004667ad : ret 0xd721
0x00000000004861f2 : ret 0xd729
0x000000000043d7eb : ret 0xd889
0x00000000004b9e05 : ret 0xd8f
0x00000000004770b3 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047b100 : ret 0xda38
0x0000000000442063 : ret 0xda75
0x000000000040f905 : ret 0xdaf7
0x0000000000447a91 : ret 0xdb85
0x00000000004b9ee6 : ret 0xdcd9
0x000000000046a040 : ret 0xdd72
0x00000000004b8e62 : ret 0xde5d
0x0000000000410ac5 : ret 0xde74
0x00000000004b7bf1 : ret 0xde9e
0x00000000004866b8 : ret 0xdee9
0x0000000000421c69 : ret 0xe000
0x000000000043b2a9 : ret 0xe074
0x000000000044656d : ret 0xe077
0x00000000004433a9 : ret 0xe083
0x000000000044aaf3 : ret 0xe183
0x0000000000443922 : ret 0xe1eb
0x00000000004469fb : ret 0xe277
0x000000000040dbec : ret 0xe281
0x0000000000400e7d : ret 0xe283
0x000000000043e987 : ret 0xe3e8
0x0000000000465b10 : ret 0xe575
0x00000000004178c7 : ret 0xe675
0x0000000000457428 : ret 0xe680
0x00000000004ba006 : ret 0xe71f
0x0000000000401378 : ret 0xe72
0x00000000004522b0 : ret 0xe783
0x000000000046d805 : ret 0xe874
0x0000000000458df5 : ret 0xe87f
0x0000000000454632 : ret 0xe883
0x000000000046dbae : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x0000000000424ba3 : ret 0xe901
0x0000000000402bb2 : ret 0xe902
0x00000000004494d9 : ret 0xe904
0x000000000047ad31 : ret 0xe907
0x0000000000422e06 : ret 0xe908
0x0000000000428a26 : ret 0xe910
0x0000000000452859 : ret 0xe920
0x000000000041f3a3 : ret 0xe96e
0x00000000004b8367 : ret 0xe970
0x00000000004882dc : ret 0xe974
0x000000000041f54f : ret 0xe977
0x000000000043d98a : ret 0xea81
0x0000000000400d51 : ret 0xeac1
0x0000000000422136 : ret 0xeb10
0x000000000041f36f : ret 0xeb5b
0x000000000040e60a : ret 0xeb72
0x0000000000402248 : ret 0xebe8
0x00000000004bab18 : ret 0xec2
0x000000000047ec69 : ret 0xec75
0x000000000046fef8 : ret 0xed75
0x000000000044a64e : ret 0xed85
0x00000000004454af : ret 0xee75
0x00000000004ba7ba : ret 0xef32
0x0000000000418626 : ret 0xef75
0x0000000000443221 : ret 0xefc1
0x0000000000421b29 : ret 0xf000
0x000000000040d578 : ret 0xf001
0x000000000040289a : ret 0xf01
0x000000000041aca7 : ret 0xf02
0x000000000041b2e0 : ret 0xf04
0x000000000045ca4e : ret 0xf08
0x000000000046aac6 : ret 0xf0eb
0x000000000041aa23 : ret 0xf0f
0x0000000000420cc2 : ret 0xf10
0x00000000004617f5 : ret 0xf229
0x000000000044f4e6 : ret 0xf301
0x000000000045ca8a : ret 0xf40
0x0000000000467b8d : ret 0xf43
0x0000000000463a6a : ret 0xf48
0x0000000000459e94 : ret 0xf4c
0x0000000000402bbb : ret 0xf4e9
0x000000000044338c : ret 0xf631
0x0000000000420ad9 : ret 0xf66
0x000000000043d5ac : ret 0xf685
0x000000000041b633 : ret 0xf710
0x0000000000479735 : ret 0xf74
0x000000000042612c : ret 0xf748
0x00000000004655b0 : ret 0xf749
0x000000000049faba : ret 0xf7da
0x000000000043201e : ret 0xf80
0x00000000004219e9 : ret 0xf800
0x00000000004b7ad0 : ret 0xf869
0x00000000004a2f50 : ret 0xf917
0x00000000004a2f58 : ret 0xf91d
0x000000000040453a : ret 0xf929
0x0000000000482fba : ret 0xf9a0
0x0000000000475bba : ret 0xfa79
0x0000000000458c7e : ret 0xfa80
0x000000000048a276 : ret 0xfa81
0x00000000004055d2 : ret 0xfac1
0x00000000004218a9 : ret 0xfc00
0x000000000048b7b6 : ret 0xfc01
0x000000000048b76a : ret 0xfc02
0x000000000043eada : ret 0xfc3
0x00000000004428ba : ret 0xfcbf
0x0000000000446640 : ret 0xfd83
0x00000000004bd4f0 : ret 0xfdc6
0x0000000000402870 : ret 0xfdf
0x0000000000421769 : ret 0xfe00
0x000000000043d6e3 : ret 0xfe83
0x0000000000431f3e : ret 0xfec5
0x0000000000421629 : ret 0xff00
0x0000000000433f31 : ret 0xff2
0x000000000042d99a : ret 0xff3
0x00000000004214e9 : ret 0xff80
0x00000000004885b6 : ret 0xff81
0x000000000048856a : ret 0xff82
0x000000000040c2ea : ret 0xff99
0x0000000000486850 : ret 0xff9f
0x0000000000405b9a : ret 0xffa7
0x0000000000451e42 : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x000000000048e557 : ret 0xffbf
0x00000000004213a9 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x0000000000416f95 : ret 0xffd8
0x000000000040285a : ret 0xffda
0x000000000042066e : ret 0xffdf
0x000000000044eca8 : ret 0xffe0
0x000000000040869a : ret 0xffe2
0x0000000000440c3a : ret 0xffe8
0x0000000000440b3a : ret 0xffe9
0x000000000049a9fa : ret 0xffec
0x000000000040ee8c : ret 0xffef
0x000000000040db3e : ret 0xfff0
0x0000000000418e6a : ret 0xfff1
0x0000000000420fe9 : ret 0xfff8
0x0000000000459744 : ret 0xfff9
0x00000000004554fd : ret 0xfffa
0x000000000043e699 : ret 0xfffb
0x0000000000420ea9 : ret 0xfffc
0x00000000004412cb : ret 0xfffd
0x0000000000405368 : ret 0xfffe
0x000000000041062a : ret 0xffff
0x0000000000425715 : ret 1
0x000000000042573b : ret 2
0x000000000042ed52 : ret 3
0x0000000000425759 : ret 4
0x000000000045923e : ret 5
0x000000000045e3b0 : ret 6
0x00000000004b1984 : ret 7
0x000000000040a49e : ret 8
0x000000000043bd5a : ret 9
0x000000000042b98a : retf
0x0000000000404cac : retf -0x10
0x000000000040b589 : retf -0x13
0x000000000045bd2c : retf -0x1401
0x00000000004ba821 : retf -0x1441
0x00000000004b802d : retf -0x147d
0x000000000046fee0 : retf -0x14f8
0x0000000000467881 : retf -0x1509
0x0000000000420c81 : retf -0x152d
0x000000000043da39 : retf -0x153f
0x00000000004437bb : retf -0x1540
0x00000000004b9f0c : retf -0x156f
0x0000000000413bf8 : retf -0x1680
0x00000000004427e4 : retf -0x16f8
0x00000000004427f4 : retf -0x16fc
0x0000000000442804 : retf -0x16fe
0x0000000000442834 : retf -0x16ff
0x000000000046fc35 : retf -0x178b
0x000000000048031b : retf -0x178d
0x0000000000443e82 : retf -0x187
0x00000000004b88c6 : retf -0x18d2
0x0000000000452d57 : retf -0x1989
0x0000000000450b11 : retf -0x1a
0x0000000000460cd2 : retf -0x1b
0x00000000004b8f5c : retf -0x1b6a
0x0000000000425da9 : retf -0x1b8b
0x0000000000471fb7 : retf -0x1d3f
0x0000000000448abc : retf -0x1d7f
0x00000000004b897e : retf -0x1eae
0x0000000000456026 : retf -0x1f3f
0x00000000004483f3 : retf -0x1f7d
0x000000000041638a : retf -0x2015
0x00000000004b8ed3 : retf -0x2081
0x00000000004059de : retf -0x208b
0x00000000004ba8a3 : retf -0x21b1
0x000000000040dc6d : retf -0x2509
0x000000000047b347 : retf -0x2677
0x000000000049cbe3 : retf -0x2c15
0x0000000000446a77 : retf -0x2d7b
0x000000000043dad0 : retf -0x2dcf
0x00000000004b8c06 : retf -0x2e35
0x00000000004583c2 : retf -0x2e77
0x0000000000488e93 : retf -0x2f15
0x00000000004560cf : retf -0x2fc7
0x00000000004b73ea : retf -0x3335
0x000000000042eb34 : retf -0x354e
0x00000000004091e2 : retf -0x36
0x0000000000403a4d : retf -0x36f1
0x000000000040054a : retf -0x377d
0x0000000000403d41 : retf -0x37f1
0x0000000000462854 : retf -0x38b8
0x000000000043212f : retf -0x3e3c
0x000000000046512e : retf -0x3eb7
0x000000000040e187 : retf -0x3eb8
0x00000000004b9e1d : retf -0x3f02
0x0000000000413221 : retf -0x3fcf
0x0000000000461bbe : retf -0x3fff
0x00000000004ba19d : retf -0x40b5
0x000000000041031a : retf -0x428b
0x00000000004ba153 : retf -0x4466
0x0000000000461f35 : retf -0x48
0x0000000000466b4f : retf -0x48f1
0x0000000000425982 : retf -0x49f1
0x00000000004b8e49 : retf -0x4ae6
0x00000000004685b2 : retf -0x4b1
0x0000000000472722 : retf -0x4ca
0x0000000000449275 : retf -0x4f17
0x000000000040abe2 : retf -0x50
0x00000000004ba64e : retf -0x51ce
0x00000000004575ed : retf -0x53f
0x00000000004ba0fc : retf -0x54f3
0x0000000000475bb2 : retf -0x587
0x000000000040f32a : retf -0x5c8b
0x00000000004ba02b : retf -0x5d02
0x00000000004b7fa5 : retf -0x5e15
0x00000000004baa45 : retf -0x5fe0
0x000000000047b362 : retf -0x61f1
0x00000000004ba13a : retf -0x6283
0x000000000042a33f : retf -0x63b
0x00000000004b9dcb : retf -0x6620
0x000000000048a53a : retf -0x6af1
0x0000000000418132 : retf -0x6b
0x00000000004b9a2e : retf -0x6c5e
0x00000000004a3084 : retf -0x6e8
0x00000000004a3284 : retf -0x6f2
0x0000000000422043 : retf -0x6f9a
0x0000000000448a3e : retf -0x71f1
0x0000000000480c38 : retf -0x7277
0x0000000000486619 : retf -0x72b1
0x000000000043a82d : retf -0x72b4
0x0000000000422cc4 : retf -0x72b6
0x000000000041ad0a : retf -0x72b7
0x0000000000400499 : retf -0x72b8
0x0000000000466afc : retf -0x72bf
0x00000000004679fd : retf -0x72f1
0x000000000040cfe2 : retf -0x74
0x0000000000409bf5 : retf -0x74b4
0x000000000040e345 : retf -0x74b7
0x00000000004044ba : retf -0x74b8
0x0000000000446339 : retf -0x76b3
0x000000000040eee4 : retf -0x76b4
0x0000000000405285 : retf -0x76b7
0x0000000000402ab2 : retf -0x76b8
0x00000000004865da : retf -0x76bb
0x00000000004698cd : retf -0x76bf
0x0000000000410d4f : retf -0x76e0
0x000000000041ffb2 : retf -0x76fe
0x0000000000448413 : retf -0x7780
0x000000000047c0e8 : retf -0x77e0
0x000000000047aa20 : retf -0x77f1
0x00000000004322ac : retf -0x78f1
0x000000000040e171 : retf -0x7ab8
0x00000000004020da : retf -0x7abb
0x000000000040f272 : retf -0x7af1
0x00000000004b90d0 : retf -0x7b7f
0x0000000000489ca5 : retf -0x7bbb
0x0000000000447761 : retf -0x7bc0
0x0000000000465952 : retf -0x7bf1
0x0000000000422285 : retf -0x7cb7
0x000000000041bf99 : retf -0x7cb8
0x000000000048ac51 : retf -0x7cbf
0x0000000000432271 : retf -0x7cf1
0x0000000000400ec0 : retf -0x7d
0x00000000004319ad : retf -0x7df1
0x0000000000433ade : retf -0x7eb8
0x000000000049fab2 : retf -0x826
0x000000000042db9a : retf -0x8b8
0x000000000048a91d : retf -0x8bf
0x000000000049b6d2 : retf -0x8db
0x00000000004c0649 : retf -0xb
0x000000000041718f : retf -0xcf
0x000000000048b07c : retf -0xe
0x000000000042a26d : retf -0xe3b
0x000000000047fcbb : retf -0xe77
0x0000000000451222 : retf -0xf5
0x000000000047b342 : retf -0xfd7
0x00000000004091c8 : retf -1
0x0000000000410553 : retf -2
0x0000000000457d85 : retf -3
0x000000000043e591 : retf -4
0x0000000000472f51 : retf -5
0x0000000000452fa2 : retf -6
0x00000000004432fc : retf -8
0x000000000040b357 : retf -9
0x0000000000404a37 : retf 0
0x0000000000431fbd : retf 0x1073
0x00000000004466c0 : retf 0x1089
0x00000000004ade40 : retf 0x11
0x000000000047f64d : retf 0x114d
0x000000000044845b : retf 0x1308
0x000000000041cb20 : retf 0x1373
0x00000000004486a4 : retf 0x148
0x00000000004464c4 : retf 0x1489
0x0000000000447fe7 : retf 0x149
0x0000000000432257 : retf 0x14c
0x0000000000423152 : retf 0x16
0x000000000044870e : retf 0x1608
0x0000000000405db2 : retf 0x177
0x0000000000479b3d : retf 0x194d
0x0000000000441d42 : retf 0x19b8
0x0000000000418bb8 : retf 0x1b73
0x000000000047cdd8 : retf 0x1b8
0x00000000004809ab : retf 0x1ba
0x00000000004af9e8 : retf 0x1d4
0x00000000004b0188 : retf 0x1d5
0x0000000000428947 : retf 0x1f0f
0x0000000000442142 : retf 0x1f8
0x0000000000418f7a : retf 0x2173
0x00000000004073c6 : retf 0x22
0x000000000041cdd9 : retf 0x2273
0x000000000047ec63 : retf 0x2348
0x00000000004ae9f8 : retf 0x24
0x00000000004700b3 : retf 0x25
0x000000000041bef2 : retf 0x25e
0x00000000004694de : retf 0x2615
0x000000000046870a : retf 0x263b
0x00000000004681b2 : retf 0x2640
0x00000000004438f2 : retf 0x269
0x000000000045bc6d : retf 0x270e
0x000000000042f6b9 : retf 0x280f
0x00000000004452a2 : retf 0x2879
0x000000000049032f : retf 0x2941
0x0000000000410d17 : retf 0x2948
0x000000000041000a : retf 0x294c
0x000000000041cd53 : retf 0x2a
0x00000000004b8cdc : retf 0x2a91
0x000000000041f422 : retf 0x2aa3
0x000000000040eace : retf 0x2b
0x0000000000415dd2 : retf 0x2b57
0x00000000004b815a : retf 0x2c90
0x00000000004697e1 : retf 0x2d75
0x0000000000414322 : retf 0x2da
0x000000000040eb75 : retf 0x2e66
0x000000000044c2ae : retf 0x2f72
0x00000000004693ab : retf 0x2f74
0x000000000045a310 : retf 0x30be
0x000000000043f44f : retf 0x3140
0x0000000000433afa : retf 0x3148
0x00000000004b9f45 : retf 0x3159
0x00000000004b9fad : retf 0x32dd
0x00000000004aeee8 : retf 0x33
0x00000000004b8863 : retf 0x33e6
0x0000000000442b87 : retf 0x348
0x0000000000458f68 : retf 0x349
0x0000000000442afa : retf 0x34c
0x00000000004b8d91 : retf 0x3617
0x0000000000433ad6 : retf 0x377
0x0000000000448c77 : retf 0x3948
0x000000000046fb63 : retf 0x3980
0x00000000004bd349 : retf 0x3b9a
0x000000000045b605 : retf 0x3be9
0x00000000004ba3a6 : retf 0x3d8a
0x00000000004b7c3b : retf 0x3ec
0x00000000004a0a00 : retf 0x401c
0x0000000000470054 : retf 0x4108
0x000000000042da4c : retf 0x4266
0x000000000047ea5a : retf 0x42f6
0x000000000042869a : retf 0x4466
0x00000000004880c0 : retf 0x4489
0x0000000000404e15 : retf 0x44f6
0x00000000004784a3 : retf 0x45f8
0x0000000000416365 : retf 0x476
0x000000000041b873 : retf 0x4801
0x000000000046cb3f : retf 0x4802
0x000000000040da1b : retf 0x4803
0x000000000040d9cb : retf 0x4804
0x000000000040d87f : retf 0x4805
0x000000000040d9f3 : retf 0x4806
0x000000000040da43 : retf 0x4807
0x000000000040d958 : retf 0x4808
0x000000000040d8e3 : retf 0x4809
0x000000000040dae3 : retf 0x480a
0x000000000040dab7 : retf 0x480b
0x000000000040d925 : retf 0x480c
0x000000000040d8b3 : retf 0x480d
0x00000000004254fe : retf 0x4890
0x0000000000479ab1 : retf 0x48f8
0x00000000004a6541 : retf 0x4a
0x00000000004a63e8 : retf 0x4b41
0x000000000047e65f : retf 0x4bc1
0x000000000047b48b : retf 0x4c01
0x000000000041ae77 : retf 0x4c04
0x000000000048591f : retf 0x4c8b
0x0000000000418262 : retf 0x4d01
0x0000000000413bad : retf 0x4d80
0x0000000000479b08 : retf 0x4de8
0x00000000004783a1 : retf 0x4df0
0x0000000000479b2c : retf 0x4df8
0x0000000000462fcd : retf 0x5077
0x00000000004470ce : retf 0x5355
0x0000000000490fca : retf 0x5489
0x000000000044c288 : retf 0x5576
0x000000000040ea23 : retf 0x6411
0x000000000042f7a3 : retf 0x6601
0x000000000042f8f3 : retf 0x6602
0x000000000042fa43 : retf 0x6603
0x000000000042fb93 : retf 0x6604
0x000000000042fce3 : retf 0x6605
0x000000000042fe33 : retf 0x6606
0x000000000042ff83 : retf 0x6607
0x00000000004300d3 : retf 0x6608
0x0000000000430223 : retf 0x6609
0x0000000000430373 : retf 0x660a
0x00000000004304c3 : retf 0x660b
0x0000000000430613 : retf 0x660c
0x0000000000430763 : retf 0x660d
0x00000000004308b3 : retf 0x660e
0x0000000000430a03 : retf 0x660f
0x0000000000433af5 : retf 0x676
0x00000000004ba2c5 : retf 0x67ca
0x0000000000466a98 : retf 0x694d
0x00000000004320f3 : retf 0x6a77
0x000000000046a352 : retf 0x6b8
0x00000000004b82c2 : retf 0x6ee8
0x000000000045e962 : retf 0x72
0x00000000004ba186 : retf 0x7272
0x0000000000477c82 : retf 0x76
0x00000000004b995f : retf 0x76a5
0x0000000000479a76 : retf 0x77f
0x00000000004b87e2 : retf 0x79f5
0x0000000000469806 : retf 0x7a80
0x0000000000462179 : retf 0x7a8b
0x00000000004782c1 : retf 0x877
0x000000000045a002 : retf 0x8d
0x000000000049103a : retf 0x948
0x000000000045bc10 : retf 0x97e
0x000000000047109c : retf 0xa
0x000000000042cc62 : retf 0xb
0x0000000000477a1e : retf 0xba
0x000000000048aa71 : retf 0xc77
0x0000000000409c61 : retf 0xd
0x00000000004ba317 : retf 0xd39
0x00000000004ada40 : retf 0xe
0x00000000004c09c3 : retf 0xe0a
0x00000000004b7f53 : retf 0xe80
0x000000000040b2fa : retf 0xf
0x00000000004324ec : retf 0xf01
0x000000000043266c : retf 0xf02
0x00000000004327ec : retf 0xf03
0x000000000043296c : retf 0xf04
0x0000000000432aec : retf 0xf05
0x0000000000432c6c : retf 0xf06
0x0000000000432dec : retf 0xf07
0x0000000000432f6c : retf 0xf08
0x00000000004330ec : retf 0xf09
0x000000000043326c : retf 0xf0a
0x00000000004333ec : retf 0xf0b
0x000000000043356c : retf 0xf0c
0x00000000004336ec : retf 0xf0d
0x000000000043386c : retf 0xf0e
0x00000000004339ec : retf 0xf0f
0x000000000047b0c2 : retf 0xf40
0x0000000000424dc8 : retf 0xf41
0x000000000041e1a3 : retf 0xf44
0x0000000000423010 : retf 0xf48
0x0000000000464f31 : retf 0xf4c
0x00000000004b9e68 : retf 0xf64
0x00000000004169e6 : retf 0xf66
0x0000000000434351 : retf 0xff2
0x000000000042dfcb : retf 0xff3
0x00000000004790d2 : retf 1
0x000000000042d562 : retf 2
0x0000000000405333 : retf 3
0x000000000041b3c6 : retf 4
0x00000000004b1594 : retf 5
0x000000000044087a : retf 6
0x000000000042a3d7 : retf 7
0x00000000004b1b94 : retf 8
0x000000000042dceb : retf 9
0x000000000043ce75 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043dac5 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000046660b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004878f4 : rol bl, 1 ; insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x0000000000416437 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004770be : rol bl, 1 ; mov eax, 1 ; ret
0x00000000004257ed : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042d972 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000464ec2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041e57f : rol byte ptr [rax + 0x755f067b], 1 ; retf -0x76b8
0x00000000004b1380 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004472e8 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000004896b6 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004571ec : rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x000000000045fd15 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042debd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049b971 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044f04b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047a061 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042c382 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004818b1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000004bd3e0 : rol byte ptr [rbp - 0x78af0003], 1 ; std ; call rax
0x000000000046a891 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46a888 ; ret
0x00000000004b2dd1 : rol byte ptr [rbp], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45c9
0x000000000047813b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442476 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416888 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000465e82 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000471fb4 : rol byte ptr [rbx], 0x89 ; retf -0x1d3f
0x000000000043d981 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044bc4b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000043feb7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000046da75 : rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x0000000000465e62 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043d796 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044d762 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043d7f7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043d7e2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000431f6e : rol byte ptr [rcx], 1 ; ret 0x148
0x0000000000465ec2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000465e72 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000444186 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047c077 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000004bd42c : rol byte ptr [rsi - 3], 1 ; jmp qword ptr [rax]
0x0000000000465eb2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000498f5d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a425 : rol ch, 1 ; jns 0x42a404 ; retf -0x152d
0x000000000042a575 : rol ch, 1 ; jns 0x42a554 ; retf -0x152d
0x000000000042a6c5 : rol ch, 1 ; jns 0x42a6a4 ; retf -0x152d
0x000000000042a815 : rol ch, 1 ; jns 0x42a7f4 ; retf -0x152d
0x000000000042a965 : rol ch, 1 ; jns 0x42a944 ; retf -0x152d
0x000000000042aab5 : rol ch, 1 ; jns 0x42aa94 ; retf -0x152d
0x000000000042ac05 : rol ch, 1 ; jns 0x42abe4 ; retf -0x152d
0x000000000042ad55 : rol ch, 1 ; jns 0x42ad34 ; retf -0x152d
0x000000000042aea5 : rol ch, 1 ; jns 0x42ae84 ; retf -0x152d
0x000000000042aff5 : rol ch, 1 ; jns 0x42afd4 ; retf -0x152d
0x000000000042b145 : rol ch, 1 ; jns 0x42b124 ; retf -0x152d
0x000000000042b295 : rol ch, 1 ; jns 0x42b274 ; retf -0x152d
0x000000000042b3e5 : rol ch, 1 ; jns 0x42b3c4 ; retf -0x152d
0x000000000042b535 : rol ch, 1 ; jns 0x42b514 ; retf -0x152d
0x000000000042b685 : rol ch, 1 ; jns 0x42b664 ; retf -0x152d
0x00000000004959e5 : rol ch, 1 ; jns 0x4959c4 ; retf -0x152d
0x0000000000495b65 : rol ch, 1 ; jns 0x495b44 ; retf -0x152d
0x0000000000495ce5 : rol ch, 1 ; jns 0x495cc4 ; retf -0x152d
0x0000000000495e65 : rol ch, 1 ; jns 0x495e44 ; retf -0x152d
0x0000000000495fe5 : rol ch, 1 ; jns 0x495fc4 ; retf -0x152d
0x0000000000496165 : rol ch, 1 ; jns 0x496144 ; retf -0x152d
0x00000000004962e5 : rol ch, 1 ; jns 0x4962c4 ; retf -0x152d
0x0000000000496465 : rol ch, 1 ; jns 0x496444 ; retf -0x152d
0x00000000004965e5 : rol ch, 1 ; jns 0x4965c4 ; retf -0x152d
0x0000000000496765 : rol ch, 1 ; jns 0x496744 ; retf -0x152d
0x00000000004968e5 : rol ch, 1 ; jns 0x4968c4 ; retf -0x152d
0x0000000000496a65 : rol ch, 1 ; jns 0x496a44 ; retf -0x152d
0x0000000000496be5 : rol ch, 1 ; jns 0x496bc4 ; retf -0x152d
0x0000000000496d65 : rol ch, 1 ; jns 0x496d44 ; retf -0x152d
0x0000000000496ee5 : rol ch, 1 ; jns 0x496ec4 ; retf -0x152d
0x00000000004b73e0 : rol cl, 0xc2 ; ret
0x000000000046798f : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004bd4a8 : rol dl, 0xfd ; call rax
0x0000000000465e0c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000425da5 : rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x0000000000403da8 : rol dword ptr [rax + 0x7549027a], 1 ; retf
0x0000000000433ad0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000466b48 : rol dword ptr [rbp + 0x7418dc9], -0x77 ; retf -0x48f1
0x0000000000400593 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000004c1e96 : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x000000000046a903 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x00000000004439cd : rol ecx, -0x1f ; add edx, ebx ; loopne 0x443a37 ; pop rbp ; ret
0x00000000004a2c0c : rol esp, 1 ; clc ; dec dword ptr [rsi - 0x3b] ; clc ; jmp rsi
0x000000000042535d : ror ah, 1 ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000487bda : ror byte ptr [rax + 0x24], cl ; add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret
0x0000000000425672 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x4256b9 ; add rax, rdi ; ret
0x0000000000423017 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004108da : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473149 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x000000000044653a : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000045fbc4 : ror byte ptr [rax + 0x29], cl ; retf -0x3eb8
0x000000000049cd08 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049c501 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049c0a2 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046a50c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46a53f ; ret
0x0000000000441db8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000478b36 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000401375 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000047b33c : ror byte ptr [rax + 0x63], 1 ; ror dword ptr [rax + 1], cl ; retf -0xfd7
0x00000000004428c5 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467310 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044ebad : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046d2bc : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044eb9e : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000004796be : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042c25c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000425642 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488396 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x00000000004882d9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000423014 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ad788 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004257e5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000487b36 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000046895a : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fd26d
0x000000000045d3fa : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047acd8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000425632 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000425662 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000425652 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041540a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004bd3e8 : ror byte ptr [rax - 0x75af0003], 1 ; std ; call rax
0x00000000004789d3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000049cbe0 : ror byte ptr [rax - 0x77], 0xca ; jmp 0x49cbbc
0x0000000000458f59 : ror byte ptr [rax - 0x77], 1 ; ret 0x5ee8
0x00000000004128c5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000469775 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000040dbe9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000046a34f : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x0000000000410949 : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x0000000000420282 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000474d45 : ror byte ptr [rax - 0x77], 5 ; ret
0x0000000000417a35 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000413311 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413326 ; ret
0x000000000047a4f9 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040fc1f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046a430 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041c356 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000477e68 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049c54e : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041c065 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb0884
0x0000000000471782 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000047250c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456562 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x0000000000479f3a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004903fe : ror byte ptr [rax - 0x7d], cl ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf -0x7cb8
0x000000000047568d : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000448ad3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000004693ce : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000448014 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047a1ea : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004878e4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046d31f : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004bd3f0 : ror byte ptr [rbx - 0x72af0003], 1 ; std ; call rax
0x000000000047da13 : ror byte ptr [rbx], 0xba ; retf
0x000000000041ad07 : ror byte ptr [rcx + 0x21], 1 ; retf -0x72b7
0x0000000000447350 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446549 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004469d0 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000048c8df : ror byte ptr [rcx + 0x39], cl ; retf
0x000000000049a897 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000403b94 : ror byte ptr [rcx + rcx*4 - 0x19], 1 ; mov eax, 3 ; syscall
0x000000000046a883 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x00000000004648f2 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044ee3e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000471c35 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043d634 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x00000000004114da : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000425f69 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044ee62 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000049865d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000441cbc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000004679b8 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041d37d : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046a6b7 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047e6f6 : ror byte ptr [rdi], 0x84 ; ret
0x00000000004111be : ror byte ptr [rdi], 0x84 ; retf
0x000000000040b586 : ror byte ptr [rdi], 0x84 ; retf -0x13
0x0000000000463451 : ror byte ptr [rdi], 0x84 ; retf -2
0x000000000040b354 : ror byte ptr [rdi], 0x84 ; retf -9
0x000000000046ebc7 : ror byte ptr [rdi], 0x84 ; retf 0
0x00000000004790cf : ror byte ptr [rdi], 0x84 ; retf 1
0x000000000045e44f : ror byte ptr [rdi], 0x84 ; retf 3
0x0000000000445d9c : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x000000000043777a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004377b6 : ror byte ptr [rdi], 0x85 ; ret
0x000000000044b050 : ror byte ptr [rdi], 0x85 ; retf 2
0x000000000044ef76 : ror byte ptr [rdi], 0x88 ; retf
0x0000000000457587 : ror byte ptr [rdi], 0x8a ; ret 8
0x00000000004902b8 : ror byte ptr [rdi], 0x8f ; ret
0x0000000000441a1c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047ba6c : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047b1aa : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041ac97 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x0000000000461083 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047a4fc : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485164 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047b0fd : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x00000000004668ef : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x00000000004667aa : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f902 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000004663de : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040fbec : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040dbfe : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dbe8 ; ret
0x0000000000419049 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041b0c1 : ror byte ptr [rdi], 1 ; test byte ptr [rsi], bh ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x000000000046cf95 : ror byte ptr [rdi], cl ; test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000483a07 : ror byte ptr [rdi], cl ; test bl, bh ; retf -1
0x000000000047b41f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047b533 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004bd3f8 : ror byte ptr [rsi - 0x6faf0003], 1 ; std ; call rax
0x0000000000457586 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000433adb : ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x000000000041ad04 : ror dword ptr [rax + 0x29], 1 ; ror byte ptr [rcx + 0x21], 1 ; retf -0x72b7
0x00000000004105f3 : ror dword ptr [rax + 0x29], cl ; ret
0x000000000041094c : ror dword ptr [rax + 0x29], cl ; retf
0x000000000041bfca : ror dword ptr [rax + 0x39], 1 ; retf
0x000000000047b35f : ror dword ptr [rax + 0x39], 1 ; retf -0x61f1
0x0000000000467500 : ror dword ptr [rax + 0xf], -0x51 ; retf
0x000000000040e16d : ror dword ptr [rax + 0xf], 1 ; retf -0x7ab8
0x000000000047c856 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000047b33f : ror dword ptr [rax + 1], cl ; retf -0xfd7
0x0000000000422ee4 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf -0x76b8
0x0000000000423009 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf48
0x0000000000464f2a : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000047255c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004799c3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x0000000000431fc2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047d981 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000414a8d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x414a87 ; ret
0x00000000004631ad : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x4631a7 ; ret
0x000000000040eb88 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004053a2 : ror dword ptr [rax - 0x7d], cl ; ret
0x00000000004865d2 : ror dword ptr [rax], -0x42 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4865ad
0x000000000044e612 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042be65 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000004412c5 : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41d586
0x000000000044130a : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41d586
0x000000000043b2a7 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000488778 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000004678ab : ror dword ptr [rdi], -0x6c ; ret
0x000000000042e728 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ee34 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ec06 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042eb86 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042eec4 : ror dword ptr [rdi], -0x7b ; je 0x42eed4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e9bb : ror dword ptr [rdi], -0x7b ; jno 0x42e9d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ea83 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e700 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004800a5 : ror dword ptr [rdi], -0x7d ; retf
0x0000000000418bcf : ror dword ptr [rdi], 1 ; xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004bd510 : ror eax, cl ; std ; call qword ptr [rax]
0x00000000004bd524 : ror edx, -3 ; call qword ptr [rbx]
0x0000000000414a8c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x414a88 ; ret
0x00000000004631ac : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x4631a8 ; ret
0x0000000000446544 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000042ae2e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479011 : sahf ; ret 0x148
0x00000000004b82c5 : sahf ; ret 0x38ae
0x0000000000450760 : sahf ; ret 0x8348
0x000000000047b364 : sahf ; ret 0xe8c1
0x00000000004b8dfc : sahf ; retf
0x000000000041688e : sal bh, 0xd8 ; ret
0x000000000043dad9 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004c14c1 : sal bh, 0xff ; retf 2
0x0000000000421ee7 : sal bh, 1 ; ret 0x8000
0x0000000000421da7 : sal bh, 1 ; ret 0xc000
0x0000000000421c67 : sal bh, 1 ; ret 0xe000
0x0000000000421b27 : sal bh, 1 ; ret 0xf000
0x00000000004219e7 : sal bh, 1 ; ret 0xf800
0x00000000004218a7 : sal bh, 1 ; ret 0xfc00
0x0000000000421767 : sal bh, 1 ; ret 0xfe00
0x0000000000421627 : sal bh, 1 ; ret 0xff00
0x00000000004214e7 : sal bh, 1 ; ret 0xff80
0x00000000004213a7 : sal bh, 1 ; ret 0xffc0
0x0000000000421267 : sal bh, 1 ; ret 0xffe0
0x0000000000421127 : sal bh, 1 ; ret 0xfff0
0x0000000000420fe7 : sal bh, 1 ; ret 0xfff8
0x0000000000420ea7 : sal bh, 1 ; ret 0xfffc
0x0000000000420d67 : sal bh, 1 ; ret 0xfffe
0x0000000000459b94 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004665ff : sal bl, 1 ; ret
0x0000000000472c62 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000425628 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049d813 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049d7f8 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x00000000004583ee : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000441dd1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000413314 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000441de1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000004163e5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043cfe0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000414a90 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042db1b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dc03 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000047375f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000046663b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004a3404 : sal byte ptr [rbp - 7], 0xff ; sal byte ptr [rbp - 7], 1 ; jmp rax
0x00000000004a3408 : sal byte ptr [rbp - 7], 1 ; jmp rax
0x000000000047dabd : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000041cb17 : sal byte ptr [rcx + rbp*2 + 0x48], 0x8d ; adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000422f5c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004727a7 : sal byte ptr [rcx + rsi + 0x4c], 0x89 ; retf -0x76b4
0x0000000000441db6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000004402c2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000400959 : sal byte ptr [rdi + rax - 0x41], 0xc8 ; fimul dword ptr [rbx] ; call rax
0x000000000049d11e : sal byte ptr [rdi + rbx*8 + 0x48], 0x89 ; ret
0x0000000000464e8b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000475a5d : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x475a82
0x0000000000422e13 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000046cd91 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040db39 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047a841 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004783df : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x00000000004735f7 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x0000000000415408 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000042082b : sal dword ptr [rdi - 0x76b70001], 1 ; ret 0xc6eb
0x0000000000431fc5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049d4f3 : salc ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043b2e6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000044d3a7 : salc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042f1a9 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000049e261 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043d25b : salc ; clc ; ret
0x00000000004c5f91 : salc ; cli ; jmp rsi
0x000000000043e8bd : salc ; mov eax, 4 ; syscall
0x000000000043e90c : salc ; mov eax, 5 ; syscall
0x000000000046a2fd : salc ; mov eax, 6 ; syscall
0x000000000044e620 : salc ; mov rdi, r13 ; mov eax, r8d ; syscall
0x0000000000459b16 : salc ; ret
0x00000000004090d6 : salc ; retf
0x00000000004bd97d : salc ; std ; call qword ptr [rsi]
0x00000000004bd979 : salc ; std ; jmp qword ptr [rcx]
0x0000000000473322 : sar ah, 0xff ; mov rbp, rax ; jmp 0x4732fb
0x00000000004a2e2d : sar al, 1 ; call rax
0x00000000004a2e71 : sar al, cl ; call qword ptr [rax - 0x1f00072d]
0x000000000048524a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000048360c : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000483c53 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044cd23 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000470a51 : sar byte ptr [rax + 3], 0x5b ; ret
0x0000000000479e9c : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004494d1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x000000000044391d : sar byte ptr [rcx], cl ; ret
0x0000000000474662 : sar byte ptr [rdi + 0x4b575c], 0xe8 ; ret
0x00000000004746ec : sar byte ptr [rdi + 0x4bbdb8], 0x83 ; ret
0x00000000004c3e10 : sar byte ptr [rdi - 7], 1 ; call rdx
0x000000000046b359 : sar byte ptr [rdx + 1], 0xeb ; retf
0x00000000004a345c : sar byte ptr [rdx - 7], 0xff ; sar byte ptr [rdx - 7], 1 ; jmp rax
0x00000000004a3460 : sar byte ptr [rdx - 7], 1 ; jmp rax
0x00000000004407ec : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047c04c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b8c5f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004414d9 : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x00000000004414cc : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004c2671 : sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004bd975 : sar ch, 1 ; ljmp ptr [rsi + rdx*8] ; std ; jmp qword ptr [rcx]
0x000000000047e8eb : sar dh, 0xff ; call qword ptr [rax + 0x4bc2e0b9]
0x00000000004131b7 : sar dword ptr [rax + 2], 1 ; syscall
0x0000000000434da3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x434dae ; ret
0x00000000004a2bd8 : sar dword ptr [rax + rdi*8 - 0x7422e01], 1 ; call rcx
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402c9e : sar dword ptr [rdi + 0x6cafe0], cl ; call rbx
0x00000000004a2be8 : sar dword ptr [rdi - 0x3fae0008], 1 ; clc ; call rcx
0x00000000004a2be0 : sar dword ptr [rsi - 0x40ae0008], 1 ; clc ; call rcx
0x00000000004a2c79 : sar eax, -1 ; cmp eax, edx ; clc ; dec ebx ; ret 0xfff8
0x00000000004a2bf9 : sar eax, -1 ; jno 0x4a2bc8 ; clc ; inc dword ptr [rcx] ; ret
0x00000000004a2c39 : sar eax, -1 ; push rsi ; ret 0xfff8
0x00000000004a2e31 : sar eax, 1 ; jmp qword ptr [rax]
0x000000000046431c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047c47b : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a2e75 : sar eax, cl ; jmp rax
0x00000000004413a4 : sar ebp, -1 ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000441396 : sar ebp, -1 ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441389 : sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004bd5c5 : sar ebp, cl ; call rsp
0x00000000004bd5a1 : sar ebp, cl ; ljmp ptr [rsp + rdx*8] ; std ; call rsp
0x00000000004b89c3 : sar ecx, 1 ; jnp 0x4b8984 ; ret
0x00000000004257e7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000046431b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004257e6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004c4048 : sbb ah, ah ; stc ; jmp rax
0x00000000004bf715 : sbb al, 0 ; add al, ch ; pop rsp ; cmc ; call qword ptr [rcx]
0x000000000043f4e1 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000493aca : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000493a23 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000047622a : sbb al, 0x24 ; add rsp, 0x18 ; jmp r11
0x0000000000476599 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x00000000004766ab : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x00000000004c0ee4 : sbb al, 0x34 ; add byte ptr [rax], al ; cwde ; idiv bh ; ret
0x00000000004c1fe4 : sbb al, 0x45 ; add byte ptr [rax], al ; js 0x4c1ff2 ; clc ; call rsp
0x0000000000417189 : sbb al, 0x4a ; add byte ptr [rcx + 0xf], cl ; retf -0xcf
0x0000000000418a33 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x000000000046730e : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x0000000000462923 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x00000000004b9cc2 : sbb al, 0x8c ; retf
0x0000000000470239 : sbb al, 0xb8 ; retf 0
0x0000000000441260 : sbb al, 0xc3 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000049c0f6 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x000000000049d5bd : sbb al, 0xe9 ; retf
0x00000000004a2f69 : sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a2ee5 : sbb al, 0xf9 ; call qword ptr [rsi]
0x00000000004a30a5 : sbb al, 0xf9 ; call rax
0x00000000004a30a1 : sbb al, 0xf9 ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a3025 : sbb al, 0xf9 ; jmp rsp
0x000000000047b670 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004a29bd : sbb al, bh ; call qword ptr [rax]
0x0000000000493caa : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004602c5 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x0000000000493ca9 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049fab0 : sbb al, ch ; retf -0x826
0x0000000000459b14 : sbb al, ch ; salc ; ret
0x00000000004a29c1 : sbb bh, al ; call qword ptr [rax + 0x10fff81b]
0x00000000004a2ebd : sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a30b5 : sbb bh, cl ; call qword ptr [rax]
0x00000000004a2f79 : sbb bh, cl ; call rdx
0x00000000004a2f75 : sbb bh, cl ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a2ef9 : sbb bh, cl ; jmp rsi
0x00000000004c6871 : sbb bl, bh ; call qword ptr [rax]
0x00000000004b8a52 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004b7745 : sbb bl, byte ptr [rsi] ; ret
0x0000000000477cd4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000049e4bb : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041b9d0 : sbb byte ptr [r9 + 0x39], r9b ; ret 0x850f
0x000000000041068a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047a4f6 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000470e9b : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000477cd5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417243 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000048d3b8 : sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000410946 : sbb byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x000000000043dfda : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000447811 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000410313 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf -0x428b
0x000000000049c19a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000041825b : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x00000000004099de : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405cb7
0x000000000040924d : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405cb8
0x000000000040d85a : sbb byte ptr [rax - 0x77], cl ; cmp ch, cl ; retf -5
0x0000000000414af1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000490106 : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000416387 : sbb byte ptr [rax - 0x77], cl ; retf -0x2015
0x000000000049080e : sbb byte ptr [rax - 0x77], cl ; retf -0x74b8
0x0000000000416362 : sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x00000000004103e1 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041d417 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412463 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049e4bc : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042bcde : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000448bb4 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042bcdd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004c2260 : sbb byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x0000000000477e2b : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000004153af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043e861 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000493e8a : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bc811 : sbb byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004c8028 : sbb byte ptr [rax], dh ; std ; call rsi
0x0000000000464645 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x00000000004440f9 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416c03 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042c121 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410aa9 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416427 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041d35a : sbb byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000046071c : sbb byte ptr [rbx], ah ; add r8b, bpl ; retf
0x000000000044f4a1 : sbb byte ptr [rcx + 0x29], cl ; retf
0x000000000041b9d1 : sbb byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000046418b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000470db9 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041ae59 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000464723 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041bfd3 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410983 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041068b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000464777 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047a4f7 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000049769d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000404154 : sbb byte ptr [rdi], cl ; retf
0x000000000041db32 : sbb byte ptr [rdi], cl ; test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004a30b4 : sbb byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x00000000004c8348 : sbb byte ptr [rdx], bh ; std ; call rcx
0x00000000004a2f89 : sbb cl, bh ; call qword ptr [rdx]
0x00000000004a2ecd : sbb cl, bh ; call rsi
0x00000000004a2ec9 : sbb cl, bh ; inc dword ptr [rax + 0x18] ; stc ; call rsi
0x00000000004a2f09 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000004a30c9 : sbb cl, bh ; jmp rax
0x0000000000412b15 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x0000000000422add : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042957d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004226cd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004221d9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004229e9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b1ca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042a9ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042adda : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a0dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004298bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042245d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042909d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042279d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000422ab9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a799 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422b89 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429bfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004293dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428bbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000429d9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042293d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042212d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000042252d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042ac8a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b5ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422a0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004221fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000428efd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042229f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004225fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429033 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d33 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429853 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ab8b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b4bb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042286d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a073 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429373 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000428e93 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429b93 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042acdb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a4fb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004222c3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041a662 : sbb cl, byte ptr [rdx] ; call 0x417155
0x000000000041a661 : sbb cl, byte ptr [rdx] ; call 0x417156
0x00000000004a2ecc : sbb cl, dil ; call rsi
0x00000000004a2f78 : sbb dil, cl ; call rdx
0x00000000004c4d99 : sbb dl, bh ; jmp qword ptr [rax]
0x0000000000416ee2 : sbb dl, byte ptr [rbx + 1] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047622f : sbb dl, dh ; jmp r11
0x0000000000493dc8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c569 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000049c2c4 : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x0000000000493d51 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000493dc9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000441d44 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000491dce : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000452af8 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004b9ffd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000454756 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043ccb7 : sbb eax, -1 ; ret
0x0000000000442145 : sbb eax, 0 ; leave ; ret
0x00000000004a2f59 : sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x00000000004a2e99 : sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x000000000049e380 : sbb eax, 0x22d1fb ; jne 0x49e370 ; pop rbx ; ret
0x00000000004b8a53 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x00000000004a0a41 : sbb eax, 0x40 ; add byte ptr [rax], al ; ret 0x401d
0x0000000000418140 : sbb eax, 0x5cbe004a ; ret
0x000000000049392d : sbb eax, 0x894d0000 ; retf
0x0000000000493b71 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000493be9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000491b7e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047813a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049c0a1 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043ccb5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004a2c74 : sbb eax, ecx ; clc ; ljmp ptr [rbx + 0x3bfff8c1] ; ret 0xfff8
0x00000000004b9b68 : sbb ebp, ebx ; retf
0x00000000004c7ef9 : sbb ebp, edi ; jmp rsp
0x000000000047aea9 : sbb ebx, 0x89000001 ; ret
0x000000000045bc00 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000446257 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a2f05 : sbb ecx, edi ; call qword ptr [rsi + 0x26fff918]
0x00000000004a3041 : sbb ecx, edi ; call rsp
0x00000000004a303d : sbb ecx, edi ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x00000000004a2ec1 : sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004a3040 : sbb ecx, r15d ; call rsp
0x00000000004a29c5 : sbb edi, eax ; call qword ptr [rax]
0x00000000004b98f9 : sbb edi, ebp ; retf
0x00000000004a2f6d : sbb edi, ecx ; jmp qword ptr [rdx]
0x00000000004a2eb1 : sbb edi, ecx ; jmp rax
0x000000000049600f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495d0f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496c0f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004250fd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000496f0f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b21e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000049660f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b9fa9 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000049630f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x000000000041cd52 : scasb al, byte ptr [rdi] ; retf 0x2a
0x000000000047a1e1 : scasb al, byte ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000042b31d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000424b9d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000048835c : scasd eax, dword ptr [rdi] ; and al, 0xd5 ; add bl, dl ; add byte ptr [r8 + 1], cl ; retf -0x74b8
0x0000000000418c51 : scasd eax, dword ptr [rdi] ; or ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004013d4 : scasd eax, dword ptr [rdi] ; ret
0x000000000041052c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043d7fa : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420288 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004014f3 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043d7e5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044f160 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000487b3d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000467503 : scasd eax, dword ptr [rdi] ; retf
0x0000000000487b41 : scasd eax, dword ptr [rdi] ; retf -0x3eb8
0x00000000004b8cd4 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x00000000004b7f4f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000441dbc : setae al ; ret
0x000000000041688c : setne al ; neg eax ; ret
0x0000000000443920 : setne dl ; jmp 0x443908
0x0000000000465565 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000049745d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c4f70 : shl byte ptr [rcx], 0xfa ; jmp rdi
0x000000000043ceff : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000420b5b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000043b2a3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000420ad5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042f0bb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042f0d2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465106 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465117 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042efb1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a2a24 : shl byte ptr [rsi - 8], 1 ; push qword ptr [rax + 0x68] ; clc ; call qword ptr [rax]
0x00000000004ae9b0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b885d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x00000000004b8b48 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000004a00d7 : shl dword ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049fff0 : shl dword ptr [rdx], 0 ; jne 0x4a0008 ; jmp 0x4a0022
0x000000000049e382 : shl dword ptr [rdx], 1 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000043cee2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042f036 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043cd5b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000465102 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000420b5f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042f0ed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042f0d6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042f0bf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042db7b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f051 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042544c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042ef11 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004439d1 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004439ce : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000047869c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478627 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004785f6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042be61 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000475a61 : shl edx, 5 ; add rdx, rax ; jmp 0x475a7e
0x000000000047869b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478626 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004785f5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000475a60 : shl rdx, 5 ; add rdx, rax ; jmp 0x475a7f
0x0000000000475a5f : shl rdx, 5 ; add rdx, rax ; jmp 0x475a80
0x00000000004b8104 : shr al, cl ; add al, 0x3d ; retf
0x000000000046a05f : shr bl, cl ; ret
0x000000000044540d : shr bl, cl ; ret 0x438b
0x000000000044d249 : shr byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44d25d ; call rax
0x000000000042db1f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000466b46 : shr byte ptr [rcx], 1 ; rol dword ptr [rbp + 0x7418dc9], -0x77 ; retf -0x48f1
0x000000000044bfc8 : shr byte ptr [rcx], cl ; ret
0x00000000004679a0 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000004257eb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000478070 : shr byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x00000000004b9f07 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000045e3f7 : shr cl, cl ; ret
0x00000000004c6350 : shr dh, 0xfa ; jmp qword ptr [rdx]
0x0000000000426279 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043da0a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043d9e9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004787ac : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000478731 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478700 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464423 : shr edx, 2 ; sub eax, edx ; ret
0x00000000004787ab : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000478730 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004786ff : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464422 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004adb89 : sldt word ptr [rax] ; ret
0x000000000044549c : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041d306 : stc ; add dword ptr [rdi + rcx + 0x44], eax ; retf -0x76b8
0x000000000049a1e2 : stc ; and ah, byte ptr [rbx] ; add byte ptr [rax], cl ; ret
0x00000000004a333e : stc ; call qword ptr [rax + 0x10fff901]
0x00000000004a3382 : stc ; call qword ptr [rax + 0x10fff903]
0x00000000004a3346 : stc ; call qword ptr [rax + 0x10fff904]
0x00000000004a2ebe : stc ; call qword ptr [rax + 0x20fff919]
0x00000000004a3096 : stc ; call qword ptr [rax + 0x20fff91d]
0x00000000004a2e9e : stc ; call qword ptr [rax]
0x00000000004a2f6a : stc ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a2f8a : stc ; call qword ptr [rdx]
0x00000000004a2f06 : stc ; call qword ptr [rsi + 0x26fff918]
0x00000000004a2ee6 : stc ; call qword ptr [rsi]
0x00000000004a30a6 : stc ; call rax
0x0000000000466739 : stc ; call rbx
0x00000000004c3b4a : stc ; call rdi
0x00000000004a2f7a : stc ; call rdx
0x00000000004a2ece : stc ; call rsi
0x00000000004a3042 : stc ; call rsp
0x00000000004a3369 : stc ; clc ; call qword ptr [rax + 0x10fff8fa]
0x000000000047a1e2 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000487107 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004853ba : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a2eca : stc ; inc dword ptr [rax + 0x18] ; stc ; call rsi
0x00000000004a30a2 : stc ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a3436 : stc ; inc dword ptr [rax] ; ja 0x4a3439 ; jmp qword ptr [rax]
0x00000000004a3412 : stc ; inc dword ptr [rax] ; jbe 0x4a3415 ; jmp qword ptr [rax]
0x00000000004a348e : stc ; inc dword ptr [rax] ; jl 0x4a3491 ; call qword ptr [rax]
0x00000000004a33d2 : stc ; inc dword ptr [rax] ; jne 0x4a33d5 ; call qword ptr [rax]
0x00000000004a3466 : stc ; inc dword ptr [rax] ; jnp 0x4a3469 ; call qword ptr [rax]
0x00000000004a2eba : stc ; inc dword ptr [rax] ; sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a303e : stc ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x00000000004a2f76 : stc ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a2f66 : stc ; inc dword ptr [rdx] ; sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a2ed2 : stc ; inc dword ptr [rsi + 0x1e] ; stc ; call rsi
0x00000000004a2f02 : stc ; inc dword ptr [rsi] ; sbb ecx, edi ; call qword ptr [rsi + 0x26fff918]
0x00000000004a342e : stc ; inc eax ; jbe 0x4a3431 ; jmp rax
0x00000000004a3402 : stc ; inc eax ; jne 0x4a3405 ; call rax
0x00000000004a345a : stc ; inc eax ; jp 0x4a345d ; call rax
0x00000000004a2f56 : stc ; inc edx ; sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x000000000042a2d2 : stc ; je 0x42a29e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000495852 : stc ; je 0x49581e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a32ca : stc ; jmp qword ptr [rax + 0x30fff90d]
0x00000000004a2ec2 : stc ; jmp qword ptr [rax]
0x00000000004a2f6e : stc ; jmp qword ptr [rdx]
0x00000000004a2f0a : stc ; jmp qword ptr [rsi]
0x00000000004a2eb2 : stc ; jmp rax
0x00000000004a2f5e : stc ; jmp rdx
0x00000000004a2efa : stc ; jmp rsi
0x00000000004a3026 : stc ; jmp rsp
0x00000000004b89c4 : stc ; jnp 0x4b8983 ; ret
0x00000000004a314e : stc ; ljmp ptr [rbp + rcx - 7] ; call qword ptr [rdx]
0x0000000000431978 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046cf07 : stc ; mov r15, rax ; jmp 0x46ced5
0x00000000004a2ec6 : stc ; push qword ptr [rax + 0x40fff918] ; sbb cl, bh ; call rsi
0x00000000004a309e : stc ; push qword ptr [rax + 0x40fff91c] ; sbb al, 0xf9 ; call rax
0x00000000004a3456 : stc ; push qword ptr [rax - 0x3f000686] ; jp 0x4a3461 ; call rax
0x00000000004a33fe : stc ; push qword ptr [rax - 0x3f00068b] ; jne 0x4a3409 ; call rax
0x00000000004a303a : stc ; push qword ptr [rcx + rbx + 0x1944fff9] ; stc ; call rsp
0x00000000004a2f72 : stc ; push qword ptr [rdx + 0x42fff91a] ; sbb bh, cl ; call rdx
0x00000000004a3216 : stc ; push qword ptr [rsp + rdx - 7] ; jmp rsp
0x00000000004a33ce : stc ; push rax ; je 0x4a33d5 ; inc dword ptr [rax] ; jne 0x4a33d9 ; call qword ptr [rax]
0x00000000004a34ae : stc ; push rax ; jl 0x4a34b1 ; call qword ptr [rax]
0x00000000004a340e : stc ; push rax ; jne 0x4a3415 ; inc dword ptr [rax] ; jbe 0x4a3419 ; jmp qword ptr [rax]
0x00000000004a348a : stc ; push rax ; jnp 0x4a3491 ; inc dword ptr [rax] ; jl 0x4a3495 ; call qword ptr [rax]
0x00000000004a330e : stc ; push rax ; out dx, eax ; clc ; call qword ptr [rax]
0x00000000004a2e96 : stc ; push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x00000000004a3212 : stc ; push rsp ; adc al, 0xf9 ; push qword ptr [rsp + rdx - 7] ; jmp rsp
0x0000000000490f13 : stc ; ret 2
0x000000000043d25a : stc ; salc ; clc ; ret
0x000000000040dc55 : stc ; syscall
0x00000000004352a4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000041b857 : std ; add byte ptr [rax - 0x6af0ff94], bl ; ret 0x8349
0x00000000004bd3da : std ; call qword ptr [rax]
0x00000000004bd526 : std ; call qword ptr [rbx]
0x00000000004bd97e : std ; call qword ptr [rsi]
0x00000000004bd416 : std ; call rax
0x00000000004bd50e : std ; call rbx
0x00000000004c6782 : std ; call rcx
0x00000000004bd992 : std ; call rdx
0x00000000004c802a : std ; call rsi
0x00000000004bd5a6 : std ; call rsp
0x00000000004a3335 : std ; clc ; call qword ptr [rax + 0x10fff8fe]
0x00000000004a3375 : std ; clc ; call qword ptr [rax]
0x00000000004bd4be : std ; dec dword ptr [rax - 0x3d] ; std ; push rax ; ret 0xfffd
0x000000000043f7ac : std ; dec dword ptr [rax - 0x75] ; jge 0x43f7b8 ; call rbx
0x000000000043fa5f : std ; dec dword ptr [rax - 0x75] ; jge 0x43fa6b ; call rbx
0x00000000004415f7 : std ; dec dword ptr [rax - 0x75] ; jge 0x441603 ; call rbx
0x000000000043ecc1 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000043f66a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043fa6d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000043f677 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43f683 ; call rbx
0x000000000043f79e : std ; dec dword ptr [rcx - 0x75] ; jge 0x43f7aa ; call rbx
0x000000000043f8e1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43f8ed ; call rbx
0x000000000043fa51 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43fa5d ; call rbx
0x000000000044126f : std ; dec dword ptr [rcx - 0x75] ; jge 0x44127b ; call rbx
0x0000000000441397 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4413a3 ; call rbx
0x00000000004414da : std ; dec dword ptr [rcx - 0x75] ; jge 0x4414e6 ; call rbx
0x00000000004415db : std ; dec dword ptr [rcx - 0x75] ; jge 0x4415e7 ; call rbx
0x00000000004bd3aa : std ; inc dword ptr [rax + 0x6c] ; std ; jmp qword ptr [rax]
0x00000000004bd3ca : std ; inc dword ptr [rax + 0x7b] ; std ; jmp qword ptr [rax]
0x00000000004bd4c6 : std ; inc dword ptr [rax - 0x1f00023e] ; ret 0xfffd
0x00000000004bd426 : std ; inc dword ptr [rax - 0x2f0002bc] ; std ; jmp qword ptr [rax]
0x00000000004bd3d2 : std ; inc dword ptr [rax] ; jg 0x4bd3d9 ; jmp rax
0x00000000004bd3b2 : std ; inc dword ptr [rax] ; jo 0x4bd3b9 ; jmp rax
0x0000000000472c5f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004bd4a6 : std ; inc eax ; ret 0xfffd
0x00000000004bd436 : std ; inc eax ; std ; call qword ptr [rax]
0x00000000004bd522 : std ; inc ecx ; retf -3
0x000000000047790e : std ; jbe 0x47791b ; ret
0x00000000004bd3ae : std ; jmp qword ptr [rax]
0x00000000004bd97a : std ; jmp qword ptr [rcx]
0x00000000004c2672 : std ; jmp qword ptr [rdx]
0x00000000004bd3b6 : std ; jmp rax
0x00000000004bd98e : std ; jmp rbp
0x00000000004bd9e2 : std ; jmp rsp
0x00000000004bd51e : std ; ljmp ptr [rbx - 0x36] ; std ; inc ecx ; retf -3
0x00000000004bd9da : std ; ljmp ptr [rdx + rbp*8 - 0x15ab0003] ; std ; jmp rsp
0x00000000004bd976 : std ; ljmp ptr [rsi + rdx*8] ; std ; jmp qword ptr [rcx]
0x00000000004bd5a2 : std ; ljmp ptr [rsp + rdx*8] ; std ; call rsp
0x0000000000469f46 : std ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000041326c : std ; mov eax, 3 ; syscall
0x000000000047ccf8 : std ; mov r15, rax ; jmp 0x47cd12
0x000000000043ec5f : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000043119b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bd432 : std ; push qword ptr [rax + 0x4b] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004bd3a6 : std ; push qword ptr [rax + 0x6a] ; std ; inc dword ptr [rax + 0x6c] ; std ; jmp qword ptr [rax]
0x00000000004bd972 : std ; push qword ptr [rax - 0x30] ; std ; ljmp ptr [rsi + rdx*8] ; std ; jmp qword ptr [rcx]
0x00000000004bd52a : std ; push qword ptr [rax] ; retf
0x00000000004bd4c2 : std ; push rax ; ret 0xfffd
0x0000000000490e47 : std ; ret 2
0x00000000004b98fa : std ; retf
0x00000000004581d1 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004402c0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000049d031 : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000048881b : sti ; add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c6872 : sti ; call qword ptr [rax]
0x00000000004c6aca : sti ; call rsp
0x00000000004a3331 : sti ; clc ; call qword ptr [rax]
0x000000000046b4a7 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000473ec4 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000465bb5 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000046344d : sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf -2
0x000000000044db26 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000457d7e : sti ; inc dword ptr [rbx - 0x7af00008] ; retf -3
0x00000000004c666a : sti ; jmp qword ptr [rdx]
0x00000000004c64fa : sti ; jmp rsi
0x0000000000431578 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043ebc3 : sti ; mov eax, 0x48 ; syscall
0x0000000000469cc1 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044c25b : sti ; mov eax, 3 ; syscall
0x0000000000445c09 : sti ; ret
0x000000000048e556 : sti ; ret 0xffbf
0x000000000049e381 : sti ; shl dword ptr [rdx], 1 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044e6c7 : sti ; test rax, rax ; je 0x44e6d5 ; call rax
0x000000000043f510 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000442af3 : stosb byte ptr [rdi], al ; add byte ptr [rdi - 0x76b6ff94], cl ; retf 0x34c
0x00000000004b9024 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043f8d2 : stosb byte ptr [rdi], al ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004a328c : stosb byte ptr [rdi], al ; or eax, 0xd3afff9 ; stc ; jmp rax
0x0000000000409202 : stosb byte ptr [rdi], al ; retf -1
0x0000000000467b88 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x000000000044205e : stosb byte ptr [rdi], al ; sub byte ptr [rax], al ; cmp rdx, rax ; jne 0x442049 ; ret
0x0000000000467b89 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000467661 : stosd dword ptr [rdi], eax ; add byte ptr es:[rax - 0x7d], cl ; ret
0x00000000004ba12c : stosd dword ptr [rdi], eax ; ret
0x00000000004ba02a : stosd dword ptr [rdi], eax ; retf -0x5d02
0x00000000004a2c78 : stosd dword ptr [rdi], eax ; sar eax, -1 ; cmp eax, edx ; clc ; dec ebx ; ret 0xfff8
0x0000000000467b87 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004a2d0c : sub ah, 0xf8 ; call qword ptr [rax]
0x00000000004ba511 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004c0755 : sub al, 0 ; add al, ch ; iretd ; cmc ; call rdx
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000004015be : sub al, 0 ; xor eax, eax ; ret
0x00000000004695bf : sub al, 0x26 ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000469630 : sub al, 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c34f4 : sub al, 0x5a ; add byte ptr [rax], al ; call 0x124c2dbb
0x000000000044232a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c64f4 : sub al, 0x8a ; add byte ptr [rax], al ; call 0xffffffffe74c600e
0x000000000042e703 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7ef4 : sub al, 0xa4 ; add byte ptr [rax], al ; mov byte ptr [rcx], bl ; std ; jmp rsp
0x00000000004bd5a4 : sub al, 0xd4 ; std ; call rsp
0x00000000004bd978 : sub al, 0xd6 ; std ; jmp qword ptr [rcx]
0x00000000004c6018 : sub al, bl ; cli ; jmp rdi
0x000000000041d06c : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041cc8f : sub al, byte ptr [rax] ; jne 0x41cca6 ; jmp 0x41ccc0
0x000000000041e5e3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41e5f3 ; call rax
0x0000000000480581 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x0000000000499815 : sub al, byte ptr [rbx - 0x7fbf8f19] ; jmp qword ptr [rax]
0x000000000045f553 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045effa : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000046361c : sub bh, bh ; loopne 0x4635b9 ; mov eax, 0xffffffff ; ret
0x00000000004c6ac9 : sub bh, bl ; call rsp
0x00000000004a2dac : sub bl, 0xf8 ; call qword ptr [rax]
0x000000000049d7e1 : sub bl, dh ; ret
0x000000000049d7e0 : sub bl, r14b ; ret
0x000000000041068e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046d37c : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046c166 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000045ca30 : sub byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x0000000000483367 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041068f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466250 : sub byte ptr [rax - 0x73], cl ; je 0x46627f ; call rbx
0x000000000041a583 : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret
0x000000000041e054 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040567f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004103e5 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00000000004624ec : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000424c2d : sub byte ptr [rax - 0x77], cl ; retf
0x000000000040d4d9 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004818dc : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000441d0d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044205f : sub byte ptr [rax], al ; cmp rdx, rax ; jne 0x442048 ; ret
0x0000000000477dc1 : sub byte ptr [rax], al ; jne 0x477dd8 ; add rsp, 0x38 ; ret
0x000000000044390a : sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000444e35 : sub byte ptr [rax], al ; ret
0x00000000004438e4 : sub byte ptr [rax], al ; test eax, eax ; je 0x4438f6 ; ret
0x000000000043f385 : sub byte ptr [rax], al ; test rax, rax ; je 0x43f396 ; ret
0x00000000004c3b48 : sub byte ptr [rax], bh ; stc ; call rdi
0x000000000040dbba : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414770 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004438c3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000004438c2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004bec1a : sub byte ptr [rbx - 0x5ff1adfb], al ; add al, byte ptr [rdx] ; retf
0x000000000044c77a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000004bfe38 : sub byte ptr [rcx - 0xb], dh ; jmp qword ptr [rax]
0x00000000004876f4 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041e16c : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000044db24 : sub byte ptr [rdi - 5], bh ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000047a75b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000469a9d : sub byte ptr [rsi], ah ; add byte ptr [rax + 0x39], cl ; retf
0x000000000047b21d : sub cl, al ; call 0xffffffff8a09db48
0x000000000047bb74 : sub cl, al ; call 0xffffffff8a09e49f
0x000000000047133e : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000467b8a : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000413f55 : sub cl, ch ; ret 0xfffe
0x00000000004765ca : sub dl, dh ; call r11
0x00000000004b8ecd : sub dword ptr [rax + 0x1e], eax ; cli ; test dl, bh ; retf -0x2081
0x000000000041586b : sub dword ptr [rax + 0x39], ecx ; retf
0x000000000046d389 : sub dword ptr [rax + rcx*2], 0x39 ; ret 0x576
0x00000000004b9b62 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000045572a : sub dword ptr [rbx], ecx ; jmp rax
0x000000000042f7c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f7dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f917 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f92d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fa67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fa7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fbb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fbcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fd07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fd1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fe57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fe6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ffa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ffbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004300f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43010d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430247 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43025d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430397 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4303ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004304e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4304fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430637 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43064d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430787 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43079d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004308d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4308ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430a3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f723 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f71f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f7cd : sub dword ptr [rdi], esp ; jmp r9
0x000000000042eee6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004ba41a : sub dword ptr [rsi], 0x76 ; retf
0x000000000041e149 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045ccaa : sub eax, 0x1f0f004b ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000041bfa2 : sub eax, 0x441f0f ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000043fa4f : sub eax, 0x49fffddb ; mov edi, dword ptr [rbp] ; call rbx
0x000000000045cb01 : sub eax, 0x83000000 ; ret
0x00000000004822e7 : sub eax, 0xbfffffd7 ; ret
0x00000000004b7b66 : sub eax, 0xea4ca798 ; retf
0x000000000043e25c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044cbe4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043d134 : sub eax, 1 ; ret
0x0000000000477b66 : sub eax, dword ptr [0] ; ret
0x0000000000416819 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004c0645 : sub eax, dword ptr [rax] ; add byte ptr [rax], bh ; retf -0xb
0x00000000004167a6 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b4df5], 1 ; ret
0x000000000041707b : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x00000000004167d2 : sub eax, dword ptr [rax] ; jne 0x4167e8 ; jmp 0x416802
0x0000000000416715 : sub eax, dword ptr [rax] ; ret
0x0000000000417ee2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417ef2 ; call rax
0x000000000040188f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000499681 : sub eax, dword ptr [rcx + r8*4] ; je 0x499667 ; ret
0x0000000000499682 : sub eax, dword ptr [rcx + rax*4] ; je 0x499666 ; ret
0x0000000000416f4e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043db5a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43db46 ; ret
0x0000000000416403 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000417ee1 : sub eax, dword ptr ss:[rax] ; test rax, rax ; je 0x417ef3 ; call rax
0x00000000004150bd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046628b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000415b39 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000479d5d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000421f4c : sub eax, ecx ; ret
0x0000000000423019 : sub eax, edi ; ret
0x0000000000412abe : sub eax, edx ; ret
0x000000000043d2e7 : sub eax, edx ; vzeroupper ; ret
0x000000000041521e : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412918 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000043f4ee : sub ebp, 0x45 ; add byte ptr [rax], al ; ret
0x00000000004b8dbe : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b7855 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000478d45 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004439cc : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004693e9 : sub edi, dword ptr [rcx] ; add byte ptr es:[rax + 1], cl ; retf
0x0000000000416430 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000416425 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000425674 : sub edx, eax ; jbe 0x4256b7 ; add rax, rdi ; ret
0x0000000000425684 : sub edx, eax ; jbe 0x4256b9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000425694 : sub edx, eax ; jbe 0x4256b9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004256a4 : sub edx, eax ; jbe 0x4256b9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004416e1 : sub edx, esi ; mov eax, r12d ; syscall
0x00000000004104c2 : sub edx, esi ; mov rdi, r15 ; call rax
0x00000000004120d4 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000473e14 : sub esp, 0x1000 ; mov rsi, rsp ; syscall
0x000000000046a452 : sub esp, 0x30 ; mov rdx, rsp ; syscall
0x00000000004452bb : sub esp, 0x80 ; call 0x441dc8
0x000000000040532b : sub esp, 0x80 ; call 0x441df8
0x0000000000469b8b : sub esp, 0x98 ; syscall
0x00000000004a0841 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000046a176 : sub esp, 8 ; syscall
0x0000000000416818 : sub r8, qword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004167d1 : sub r8, qword ptr [r8] ; jne 0x4167e9 ; jmp 0x416803
0x0000000000415b38 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000041707a : sub r8d, dword ptr [r8] ; add ebx, esi ; ret
0x0000000000417136 : sub r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043d133 : sub rax, 1 ; ret
0x0000000000477b65 : sub rax, qword ptr [0] ; ret
0x0000000000416f4d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000477b64 : sub rax, qword ptr fs:[0] ; ret
0x000000000046628a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000423018 : sub rax, rdi ; ret
0x0000000000412abd : sub rax, rdx ; ret
0x000000000043d2e6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000425673 : sub rdx, rax ; jbe 0x4256b8 ; add rax, rdi ; ret
0x00000000004416e0 : sub rdx, rsi ; mov eax, r12d ; syscall
0x00000000004104c1 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000004120d3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000046a451 : sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000004452ba : sub rsp, 0x80 ; call 0x441dc9
0x000000000040532a : sub rsp, 0x80 ; call 0x441df9
0x0000000000469b8a : sub rsp, 0x98 ; syscall
0x00000000004a0840 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046a175 : sub rsp, 8 ; syscall
0x00000000004003da : syscall
0x0000000000468ead : sysenter
0x0000000000442fbf : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000410603 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000049295c : test ah, al ; or eax, 0x894d0000 ; retf
0x000000000044e826 : test ah, ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x000000000049392b : test ah, cl ; sbb eax, 0x894d0000 ; retf
0x0000000000415539 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000499873 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004c8345 : test al, 0 ; add byte ptr [rax], bl ; cmp bh, ch ; call rcx
0x00000000004670a9 : test al, 0x20 ; ret 0x6c
0x00000000004b8117 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b7afe : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000047d36d : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000441957 : test al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000441a19 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000043ead6 : test al, 2 ; cmove eax, edx ; ret
0x000000000049745c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042db1a : test al, al ; jne 0x42db08 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000497d5c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000491b7c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004208d6 : test ax, 1 ; ret
0x00000000004bd41d : test bh, ch ; jmp rax
0x000000000044549b : test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046cf97 : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000483a09 : test bl, bh ; retf -1
0x000000000046a893 : test bl, bl ; je 0x46a886 ; ret
0x0000000000474885 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000043ea98 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x0000000000451536 : test byte ptr [rax + 0x63], cl ; retf -0x76b4
0x000000000047bc83 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000493e88 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x000000000049bb22 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000047b259 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004c634c : test byte ptr [rax - 0x11400000], cl ; cli ; jmp qword ptr [rdx]
0x00000000004668ae : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x00000000004417ae : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x000000000043fb81 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000004402c4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000474886 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046f381 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049841c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043b47a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043a8ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041673a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004424a8 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004166fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043d9ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411a7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043b2ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000498d1c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000497b1c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046593c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000049270c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041904b : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000465954 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047a086 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004949b8 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000448ab6 : test byte ptr [rbp - 0x77000000], ch ; retf -0x1d7f
0x0000000000417756 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047a47a : test byte ptr [rbx + 0x251ec33d], 0 ; jmp rax
0x0000000000494b98 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041d687 : test byte ptr [rbx - 0xa000000], cl ; ret
0x00000000004bf64c : test byte ptr [rbx], bl ; add byte ptr [rax], al ; rcr byte ptr [rcx - 0xb], 0xff ; ret
0x0000000000448b9c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004178ce : test byte ptr [rcx + 0x48000001], dh ; mov edx, eax ; jmp 0x4178f7
0x000000000049a89b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000494d78 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x000000000044f792 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049c042 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000466733 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00000000004571fa : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000043f512 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x000000000047e06d : test byte ptr [rcx - 0x7d], 0xc5 ; add dword ptr [rax + 0x29], ecx ; retf -0x72b8
0x000000000047dd0d : test byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax + 0x29], ecx ; retf 0x148
0x00000000004222c6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c71fd : test byte ptr [rcx], al ; ret
0x0000000000494f58 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000004180a7 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049f2ce : test byte ptr [rdi], 0x84 ; ret
0x000000000043f98a : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000470e1e : test byte ptr [rdi], 0x85 ; ret
0x000000000045d7cd : test byte ptr [rdi], 0x88 ; retf
0x000000000047b337 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x00000000004862dd : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000041a0a0 : test byte ptr [rdi], ah ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000046557c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465564 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000411404 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000493ca8 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bed4c : test byte ptr [rdx], dl ; add byte ptr [rax], al ; jo 0x4bed86 ; cmc ; jmp qword ptr [rsi]
0x0000000000467b91 : test byte ptr [rdx], dl ; pop rsi ; mov esi, 0x8948004b ; ret
0x0000000000472f7e : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000464e1d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000048a8c9 : test byte ptr [rsi + rax + 0x63480000], al ; retf -0x7cb8
0x0000000000494058 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000405ab5 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041b0c3 : test byte ptr [rsi], bh ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x854d
0x0000000000422efd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000495e8e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495b8e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x0000000000496d8e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049648e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049678e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044dd0d : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000493ac8 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d9d2 : test ch, 0xf0 ; je 0x43d9cb ; movzx eax, cl ; pop rbx ; ret
0x00000000004baa24 : test ch, bh ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000423366 : test ch, cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000423666 : test ch, cl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424566 : test ch, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424266 : test ch, cl ; add eax, 0x894d0000 ; retf
0x0000000000423f66 : test ch, cl ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000423c66 : test ch, cl ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043cdbf : test cl, cl ; jne 0x43cdb4 ; ret
0x000000000043ce6f : test cl, cl ; jne 0x43ce64 ; ret
0x000000000043d12f : test cl, cl ; jne 0x43d128 ; sub rax, 1 ; ret
0x0000000000467f6d : test cl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043d9fa : test dh, 0xf0 ; je 0x43d9c9 ; movzx eax, dl ; pop rbx ; ret
0x000000000043d9fa : test dh, 0xf0 ; je 0x43d9cb ; movzx eax, dl ; pop rbx ; ret
0x0000000000494418 : test dh, ah ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495318 : test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000445d9e : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041d37f : test dh, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446315 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000043b304 : test dl, 0x40 ; jne 0x43b2c9 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b332 : test dl, 4 ; jne 0x43b2c9 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000494238 : test dl, ah ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495138 : test dl, ah ; add eax, 0x894d0000 ; retf
0x000000000049226c : test dl, al ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b8ed1 : test dl, bh ; retf -0x2081
0x000000000045b433 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041fd56 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000044d3a6 : test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040dc02 : test dl, dl ; jne 0x40dbe4 ; ret
0x000000000043cfdf : test dl, dl ; jne 0x43cfd8 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000426239 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000004602eb : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047d434 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x000000000045be79 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004c6015 : test dword ptr [rax], eax ; add byte ptr [rax], ch ; fdivr st(2) ; jmp rdi
0x000000000042bbaf : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042e9e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ee36 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047e2a9 : test dword ptr [rbx - 0x16000002], esi ; ret
0x000000000045146b : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004255ea : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000425f50 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000040ffb6 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042e9bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e8cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e7dd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044fa5e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000041acaa : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047d31a : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042613a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045ef20 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047c523 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000049c5d4 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044967e : test dword ptr [rdi - 0x76fffff9], ebp ; retf -0x74b7
0x000000000045aa6c : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042b9c5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041ee84 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042e702 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000445d9f : test dword ptr [rdx], 0x83480000 ; ret
0x000000000044032d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043cb42 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042bcae : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042ec08 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004b8fad : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x000000000046b4a6 : test eax, 0x3948fffb ; ret
0x00000000004b9e00 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432376 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000441cbb : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4bdac8 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x0000000000402d42 : test eax, eax ; je 0x402d56 ; mov edi, 0x6cb060 ; call rax
0x0000000000402f91 : test eax, eax ; je 0x402faf ; mov edi, 0x6cafe0 ; call rax
0x0000000000403185 : test eax, eax ; je 0x4031a3 ; mov edi, 0x6cafe0 ; call rax
0x00000000004035a0 : test eax, eax ; je 0x4035b4 ; mov edi, 0x6cb0a0 ; call rax
0x00000000004036e8 : test eax, eax ; je 0x4036fc ; mov edi, 0x6cb0a0 ; call rax
0x0000000000417e08 : test eax, eax ; je 0x417e13 ; pop rbx ; ret
0x0000000000417ee5 : test eax, eax ; je 0x417eef ; call rax
0x000000000041e5e6 : test eax, eax ; je 0x41e5f0 ; call rax
0x0000000000422cd3 : test eax, eax ; je 0x422cdf ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043dc46 : test eax, eax ; je 0x43dc5a ; mov edi, 0x6cc0a0 ; call rax
0x000000000043dc5e : test eax, eax ; je 0x43dc72 ; mov edi, 0x6cc0a0 ; call rax
0x000000000043f388 : test eax, eax ; je 0x43f393 ; ret
0x000000000044375f : test eax, eax ; je 0x443773 ; mov edi, 0x6ca140 ; call rax
0x00000000004438e6 : test eax, eax ; je 0x4438f4 ; ret
0x000000000044d11e : test eax, eax ; je 0x44d132 ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d14d : test eax, eax ; je 0x44d169 ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d24e : test eax, eax ; je 0x44d258 ; call rax
0x000000000044d2ad : test eax, eax ; je 0x44d2c1 ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d426 : test eax, eax ; je 0x44d441 ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d706 : test eax, eax ; je 0x44d71a ; mov edi, 0x6cc0a0 ; call rax
0x000000000044d80a : test eax, eax ; je 0x44d814 ; call rax
0x000000000044e6c9 : test eax, eax ; je 0x44e6d3 ; call rax
0x0000000000470482 : test eax, eax ; je 0x470496 ; mov edi, 0x6ca100 ; call rax
0x0000000000474476 : test eax, eax ; je 0x47448a ; mov edi, 0x6ca140 ; call rax
0x000000000047449e : test eax, eax ; je 0x4744b2 ; mov edi, 0x6ca140 ; call rax
0x0000000000474514 : test eax, eax ; je 0x474528 ; mov edi, 0x6ca140 ; call rax
0x0000000000475fe1 : test eax, eax ; je 0x476059 ; mov edi, 0x6ca140 ; call rax
0x000000000047799c : test eax, eax ; je 0x47796b ; mov edi, 0x6ca140 ; call rax
0x0000000000477afa : test eax, eax ; je 0x477b0e ; mov edi, 0x6ca140 ; call rax
0x000000000047a840 : test eax, eax ; je 0x47a858 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047df16 : test eax, eax ; je 0x47df2a ; mov edi, 0x6ca140 ; call rax
0x000000000047df42 : test eax, eax ; je 0x47df56 ; mov edi, 0x6ca140 ; call rax
0x00000000004876c0 : test eax, eax ; je 0x4876d4 ; mov edi, 0x6ca140 ; call rax
0x0000000000487768 : test eax, eax ; je 0x48777c ; mov edi, 0x6ca140 ; call rax
0x000000000049e088 : test eax, eax ; je 0x49e09c ; mov edi, 0x6ca100 ; call rax
0x000000000049e149 : test eax, eax ; je 0x49e15d ; mov edi, 0x6ca100 ; call rax
0x000000000049feac : test eax, eax ; je 0x49febb ; call rax
0x00000000004163e4 : test eax, eax ; jne 0x4163dd ; ret
0x0000000000425627 : test eax, eax ; jne 0x425687 ; xor rax, rax ; ret
0x0000000000441de0 : test eax, eax ; jne 0x441ddb ; pop rdx ; pop r10 ; ret
0x000000000047375e : test eax, eax ; jne 0x473735 ; ret
0x000000000049d7f7 : test eax, eax ; jne 0x49d805 ; ret
0x000000000049d812 : test eax, eax ; jne 0x49d825 ; ret
0x000000000049da22 : test eax, eax ; jne 0x49da35 ; ret
0x0000000000470a50 : test eax, eax ; js 0x470a5d ; pop rbx ; ret
0x0000000000479e9b : test eax, eax ; js 0x479ead ; ret
0x000000000046a882 : test eax, eax ; mov rax, r9 ; jne 0x46a8e0 ; ret
0x000000000044699c : test eax, edi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000425550 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041db34 : test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000472ed2 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000044540a : test ebx, ebx ; jne 0x4453e5 ; jmp 0x4453d7
0x000000000047a1be : test ebx, ebx ; jne 0x47a1d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e210 : test ebx, ebx ; mov rdi, rbx ; jne 0x49e208 ; pop rbx ; ret
0x000000000049e43c : test ebx, ebx ; mov rdx, rbx ; jne 0x49e439 ; pop rbx ; ret
0x000000000043b2f2 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043b2ff : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004665f9 : test ecx, ecx ; jne 0x4665b8 ; mov rax, rdx ; ret
0x000000000046a8d1 : test ecx, ecx ; jne 0x46a887 ; xor eax, eax ; ret
0x00000000004a2a75 : test edi, eax ; inc eax ; xchg al, bh ; call qword ptr [rax]
0x0000000000410b15 : test edi, edi ; je 0x410b2a ; call 0x41d586
0x0000000000420880 : test edi, edi ; je 0x420899 ; mov eax, 0x16 ; ret
0x00000000004512d4 : test edi, edi ; je 0x4512ee ; call 0x41d586
0x0000000000422eb2 : test edx, edx ; je 0x422ec0 ; bsf eax, edx ; ret
0x0000000000422eb2 : test edx, edx ; je 0x422ec1 ; bsf eax, edx ; ret
0x0000000000422f5b : test edx, edx ; je 0x422f77 ; bsf rax, rdx ; ret
0x0000000000422f5b : test edx, edx ; je 0x422f78 ; bsf rax, rdx ; ret
0x0000000000464e8a : test edx, edx ; je 0x464eb7 ; bsf rax, rdx ; ret
0x0000000000464e8a : test edx, edx ; je 0x464eb8 ; bsf rax, rdx ; ret
0x0000000000413313 : test edx, edx ; jne 0x413324 ; ret
0x0000000000414a8f : test edx, edx ; jne 0x414a85 ; ret
0x00000000004631af : test edx, edx ; jne 0x4631a5 ; ret
0x000000000046663a : test edx, edx ; jne 0x466635 ; ret
0x00000000004007b5 : test edx, edx ; jns 0x4006ad ; jmp 0x40078a
0x000000000043b2e5 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040edfb : test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040dc33 : test esi, esi ; jne 0x40dc71 ; mov eax, 0xba ; syscall
0x0000000000464d81 : test esi, esi ; jne 0x464d90 ; xor rax, rax ; ret
0x000000000041f66c : test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004c6014 : test qword ptr [rax], r8 ; add byte ptr [rax], ch ; fdivr st(2) ; jmp rdi
0x000000000046a892 : test r11b, r11b ; je 0x46a887 ; ret
0x000000000047375d : test r8, r8 ; jne 0x473736 ; ret
0x0000000000422cd2 : test r8d, r8d ; je 0x422ce0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046a881 : test r8d, r8d ; mov rax, r9 ; jne 0x46a8e1 ; ret
0x00000000004665f8 : test r9d, r9d ; jne 0x4665b9 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x0000000000417e07 : test rax, rax ; je 0x417e14 ; pop rbx ; ret
0x0000000000417ee4 : test rax, rax ; je 0x417ef0 ; call rax
0x000000000041e5e5 : test rax, rax ; je 0x41e5f1 ; call rax
0x000000000043f387 : test rax, rax ; je 0x43f394 ; ret
0x000000000044d24d : test rax, rax ; je 0x44d259 ; call rax
0x000000000044d809 : test rax, rax ; je 0x44d815 ; call rax
0x000000000044e6c8 : test rax, rax ; je 0x44e6d4 ; call rax
0x000000000047a83f : test rax, rax ; je 0x47a859 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049feab : test rax, rax ; je 0x49febc ; call rax
0x00000000004163e3 : test rax, rax ; jne 0x4163de ; ret
0x0000000000445409 : test rbx, rbx ; jne 0x4453e6 ; jmp 0x4453d8
0x000000000047a1bd : test rbx, rbx ; jne 0x47a1d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e20f : test rbx, rbx ; mov rdi, rbx ; jne 0x49e209 ; pop rbx ; ret
0x0000000000410b14 : test rdi, rdi ; je 0x410b2b ; call 0x41d587
0x0000000000410b13 : test rdi, rdi ; je 0x410b2c ; call 0x41d588
0x00000000004512d3 : test rdi, rdi ; je 0x4512ef ; call 0x41d587
0x0000000000422f5a : test rdx, rdx ; je 0x422f78 ; bsf rax, rdx ; ret
0x0000000000422f5a : test rdx, rdx ; je 0x422f79 ; bsf rax, rdx ; ret
0x0000000000464e89 : test rdx, rdx ; je 0x464eb8 ; bsf rax, rdx ; ret
0x0000000000464e89 : test rdx, rdx ; je 0x464eb9 ; bsf rax, rdx ; ret
0x0000000000413312 : test rdx, rdx ; jne 0x413325 ; ret
0x0000000000414a8e : test rdx, rdx ; jne 0x414a86 ; ret
0x00000000004631ae : test rdx, rdx ; jne 0x4631a6 ; ret
0x0000000000464d80 : test rsi, rsi ; jne 0x464d91 ; xor rax, rax ; ret
0x0000000000413525 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000434e3a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043215a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432090 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000431e59 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043d240 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000431f9f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x0000000000431dc3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000431e26 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043d1ea : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000434e26 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000434e0d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043d3bb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043d3bf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043d255 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043d259 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000435143 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000434fdc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000434dde : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000434da2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004352a5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043d578 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043d4db : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043d37a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042a2d1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000405625 : vpsubsb xmm10, xmm15, xmmword ptr [rax + rbx*8 + 1] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043d2e9 : vzeroupper ; ret
0x000000000044156d : xadd ch, bh ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000422adf : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042957f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004226cf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004221db : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a2a79 : xchg al, bh ; call qword ptr [rax]
0x00000000004600a9 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000004229eb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b1cc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042a9ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042addc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496fed : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004419b7 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000495af1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000496cf1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004963f1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004966f1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495de9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000442d78 : xchg byte ptr [rax + 0x4a], cl ; add byte ptr [rax + 0xf], cl ; ret
0x000000000042a0df : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004298bf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000042245f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042909f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042279f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000422abb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c610d : xchg byte ptr [rax], al ; add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x000000000042a79b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422b8b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c610c : xchg byte ptr [rax], r8b ; add byte ptr [rax], dl ; fdiv st(2), st(0) ; call rsi
0x0000000000429bff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004293df : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428bbf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000429d9f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042293f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042212f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049b160 : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000004a2ee4 : xchg byte ptr [rcx + rdi*8], bl ; call qword ptr [rsi]
0x000000000041c452 : xchg byte ptr [rcx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042252f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004b8cd5 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000042ac8c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4ac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b5bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004464c2 : xchg byte ptr [rdi], cl ; retf 0x1489
0x0000000000422a0f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004221ff : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000428eff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004222a1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000488d60 : xchg byte ptr [rip + 0x394d0000], al ; retf
0x00000000004225ff : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000496096 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429035 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d35 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496f96 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496696 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496396 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429855 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ab8d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495d8e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b4bd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042286f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000494e1f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494c3f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495617 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494537 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495437 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000433acf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042a075 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429375 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000428e95 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429b95 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042acdd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a4fd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004222c5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004663a6 : xchg dword ptr [rax + rbp*8], eax ; ret
0x0000000000444d7c : xchg dword ptr [rax - 0x39], ecx ; ret
0x0000000000470446 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004b8cd8 : xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000048eddf : xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000444916 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x00000000004b885f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x00000000004830cd : xchg dword ptr [rbp - 0x76ffffe7], edi ; retf 0x348
0x0000000000476041 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045d6ed : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004840b5 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044de15 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b7acc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004820eb : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x0000000000448f22 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004415f5 : xchg dword ptr [rdi - 0x74b70003], edi ; jge 0x441605 ; call rbx
0x0000000000482167 : xchg dword ptr [rdi - 0x76ffffd7], ebx ; retf 0x348
0x0000000000487023 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x0000000000418c14 : xchg dword ptr [rdi - 0x9fffffc], esi ; ret
0x0000000000441dde : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x441ddd ; pop rdx ; pop r10 ; ret
0x0000000000418bd1 : xchg dword ptr [rdx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000046dba8 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000484e39 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b7c6b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494178 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x000000000041a05f : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000044734b : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000463fd6 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004113b2 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000452852 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004b7fa9 : xchg eax, ebp ; jge 0x4b7f8c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004415e7 : xchg eax, ebp ; mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x000000000041a76a : xchg eax, ebp ; ret
0x000000000047b421 : xchg eax, ebp ; ret 0x3840
0x0000000000462447 : xchg eax, ebp ; ret 0x5389
0x000000000041b85d : xchg eax, ebp ; ret 0x8349
0x000000000046674e : xchg eax, ebp ; ret 0x8b4c
0x0000000000489e65 : xchg eax, ebp ; ret 0x941
0x00000000004039a7 : xchg eax, ebp ; ret 0x953d
0x000000000046743b : xchg eax, ebp ; ret 0xb60f
0x00000000004668f1 : xchg eax, ebp ; ret 0xb8e9
0x000000000046aebf : xchg eax, ebp ; ret 0xc084
0x000000000045a8f5 : xchg eax, ebp ; ret 0xc283
0x0000000000442708 : xchg eax, ebp ; ret 0xc985
0x000000000048877a : xchg eax, ebp ; ret 0xd348
0x00000000004667ac : xchg eax, ebp ; ret 0xd721
0x000000000040f904 : xchg eax, ebp ; ret 0xdaf7
0x0000000000443921 : xchg eax, ebp ; ret 0xe1eb
0x00000000004663e0 : xchg eax, ebp ; ret 0xe883
0x00000000004673af : xchg eax, ebp ; ret 0xf748
0x00000000004b8862 : xchg eax, ebp ; retf 0x33e6
0x000000000041688d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485249 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004b9cbc : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004150e2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004698e0 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042db50 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004ba64c : xchg eax, ebx ; in al, dx ; retf -0x51ce
0x000000000043a77c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042f2d2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004b9b63 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4b9b3d
0x000000000049fef9 : xchg eax, ebx ; ret 0x22
0x000000000044f250 : xchg eax, ebx ; ret 0x3948
0x000000000044fdae : xchg eax, ebx ; ret 0x3949
0x000000000041118f : xchg eax, ebx ; ret 0x840
0x0000000000450283 : xchg eax, ebx ; ret 0x8548
0x0000000000463a44 : xchg eax, ebx ; ret 0xd108
0x00000000004bd405 : xchg eax, ebx ; std ; call rax
0x00000000004438e3 : xchg eax, ebx ; sub byte ptr [rax], al ; test eax, eax ; je 0x4438f7 ; ret
0x0000000000420667 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042a181 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004a2c04 : xchg eax, ecx ; ret
0x00000000004288af : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004b8015 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b7fe3 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004b8247 : xchg eax, edi ; jo 0x4b82b4 ; salc ; retf
0x0000000000409915 : xchg eax, edi ; ret
0x000000000041d525 : xchg eax, edi ; ret 0x2a
0x00000000004b897d : xchg eax, edi ; retf -0x1eae
0x0000000000441a1b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004b9cbb : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b8118 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000442d98 : xchg eax, edx ; add byte ptr [rax + 0xf], cl ; ret
0x000000000048525f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004c6d75 : xchg eax, edx ; add byte ptr [rax], al ; cdqe ; jmp qword ptr [rsi]
0x00000000004c6dbd : xchg eax, edx ; add byte ptr [rax], al ; jo 0x4c6e00 ; sti ; jmp qword ptr [rdx]
0x00000000004c7e31 : xchg eax, edx ; cld ; call qword ptr [rax]
0x00000000004b99dd : xchg eax, edx ; jae 0x4b99ba ; push rsi ; pop rdx ; je 0x4b99af ; ret 0xacfc
0x00000000004ba646 : xchg eax, edx ; mov esi, dr1 ; jrcxz 0x4ba630 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004b801c : xchg eax, edx ; pop rbx ; retf
0x000000000046da7b : xchg eax, edx ; ret 0x8348
0x0000000000474956 : xchg eax, edx ; ret 0xb60f
0x0000000000441a1e : xchg eax, edx ; ret 0xd029
0x00000000004b7acf : xchg eax, edx ; ret 0xf869
0x00000000004a2f6c : xchg eax, edx ; sbb edi, ecx ; jmp qword ptr [rdx]
0x0000000000422cd7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042de50 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000468fa6 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000433b87 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048bf88 : xchg eax, esi ; add eax, 0x394d0000 ; retf
0x00000000004b9dc8 : xchg eax, esi ; jnp 0x4b9e17 ; retf -0x6620
0x000000000042df0d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042de6b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ba36c : xchg eax, esi ; ret 0xcd11
0x000000000042debc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a2f08 : xchg eax, esi ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000004bd40d : xchg eax, esi ; std ; call rax
0x00000000004c225c : xchg eax, esp ; add byte ptr [r8], r8b ; sbb byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x0000000000494d79 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba57f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4ba510 ; ret 0x48f
0x00000000004581d4 : xchg eax, esp ; ret
0x000000000046cf87 : xchg eax, esp ; ret 0x1f0f
0x000000000041a6d5 : xchg eax, esp ; ret 0x24e9
0x000000000047ba6e : xchg eax, esp ; ret 0x3840
0x000000000047b1ac : xchg eax, esp ; ret 0x5438
0x000000000041ac99 : xchg eax, esp ; ret 0x7ae9
0x0000000000461085 : xchg eax, esp ; ret 0x7f3c
0x000000000043d6bf : xchg eax, esp ; ret 0x8341
0x00000000004494d5 : xchg eax, esp ; ret 0x8348
0x000000000043d75f : xchg eax, esp ; ret 0x8444
0x000000000046eb71 : xchg eax, esp ; ret 0x8545
0x000000000047a4fe : xchg eax, esp ; ret 0x950f
0x00000000004551f8 : xchg eax, esp ; ret 0x9522
0x00000000004028e8 : xchg eax, esp ; ret 0xb60f
0x000000000046b31c : xchg eax, esp ; ret 0xc283
0x000000000047b339 : xchg eax, esp ; ret 0xd021
0x0000000000485166 : xchg eax, esp ; ret 0xd309
0x000000000047b0ff : xchg eax, esp ; ret 0xda38
0x0000000000479f40 : xchg eax, esp ; ret 0xdaf7
0x0000000000458c7d : xchg eax, esp ; ret 0xfa80
0x000000000043d6e2 : xchg eax, esp ; ret 0xfe83
0x000000000040ead8 : xchg eax, esp ; retf 0x2b
0x000000000046a42f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004b7fa3 : xchg eax, esp ; xlatb ; retf -0x5e15
0x00000000004116d1 : xchg eax, r8d ; jmp 0x4115dd
0x00000000004bd3e5 : xchg ebp, edi ; call rax
0x0000000000475737 : xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004ba196 : xchg esp, eax ; jb 0x4ba1f4 ; call 0x4c15cb59
0x000000000048d2a6 : xchg esp, ebx ; jmp 0x48d2af
0x000000000043e1bf : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000048a06e : xchg esp, esi ; jmp 0x48a077
0x00000000004113b1 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000469565 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b09d9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042f1ac : xlatb ; add r9, r11 ; jmp r9
0x000000000043dfc1 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a2e81 : xlatb ; clc ; call rax
0x000000000046a50f : xlatb ; ja 0x46a53c ; ret
0x00000000004b8b43 : xlatb ; jo 0x4b8bbf ; mov ebp, 0xfb67d10d ; ret
0x0000000000451902 : xlatb ; mov byte ptr [rsi], al ; jne 0x4518e8 ; mov rax, rsi ; ret
0x000000000040dc4d : xlatb ; mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000043e022 : xlatb ; mov eax, esi ; syscall
0x000000000043e032 : xlatb ; mov eax, r8d ; syscall
0x000000000049ba19 : xlatb ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004b7f50 : xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000420a29 : xlatb ; ret
0x00000000004b9fe6 : xlatb ; ret 0x4e27
0x0000000000465167 : xlatb ; ret 0x94c
0x000000000042544f : xlatb ; ret 0xc085
0x0000000000420a20 : xlatb ; ret 0xc148
0x0000000000422ed4 : xlatb ; ret 0xf66
0x0000000000420abd : xlatb ; retf
0x0000000000420c80 : xlatb ; retf -0x152d
0x00000000004b8ed2 : xlatb ; retf -0x2081
0x0000000000465244 : xlatb ; retf -0x3eb8
0x00000000004b7fa4 : xlatb ; retf -0x5e15
0x000000000042c381 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043b2a6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000421ee6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000421da6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000421c66 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000421b26 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004219e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004218a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000421766 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000421626 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004214e6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000004213a6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421266 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421126 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000420fe6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000420ea6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000420d66 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043b2a2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465105 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465116 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004ba645 : xlatb ; xchg eax, edx ; mov esi, dr1 ; jrcxz 0x4ba631 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000004b7aca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000460fad : xor al, 0x4b ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004b9b66 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x00000000004055ad : xor al, 0x89 ; ret 0x5525
0x00000000004c7dfc : xor al, 0xa3 ; add byte ptr [rax], al ; frndint ; call qword ptr [rax]
0x00000000004618a7 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004b8caa : xor al, 0xd8 ; ret
0x00000000004c2719 : xor al, bh ; jmp rsp
0x0000000000444a1a : xor al, byte ptr [rbx] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x000000000046b4a3 : xor al, ch ; test eax, 0x3948fffb ; ret
0x00000000004a00d6 : xor al, cl ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a2cf0 : xor bh, bl ; clc ; push rax ; loopne 0x4a2cf6 ; call rax
0x00000000004256ac : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000042556d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000425da1 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x000000000049dfd4 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000420931 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004a2bc4 : xor byte ptr [rax + rdi*8 - 0x742df01], bh ; call qword ptr [rax]
0x000000000046728d : xor byte ptr [rax - 0x39], cl ; ret
0x00000000004492bb : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000422ddf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000464112 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000425da2 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x00000000004a2a64 : xor byte ptr [rax - 0x7e7f0008], al ; clc ; call rax
0x0000000000410b5d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040ea72 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040ea2a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043da9c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c48f0 : xor byte ptr [rax], al ; cli ; call rsi
0x000000000046405a : xor byte ptr [rax], al ; je 0x464064 ; ret
0x00000000004c6870 : xor byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x000000000049c2b4 : xor byte ptr [rbp + 0x21], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004157a0 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004035e3 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049f2cb : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000004a2a20 : xor byte ptr [rbp - 8], ah ; call rax
0x00000000004c048f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x000000000042619b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000415aee : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000046112d : xor byte ptr [rbx], cl ; jmp rax
0x0000000000443519 : xor byte ptr [rcx + 0x288b2005], cl ; add cl, ch ; ret
0x000000000041f301 : xor byte ptr [rcx + 0x39], cl ; retf -0x7af1
0x000000000041ff48 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a45e : xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x0000000000458207 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004b7fae : xor byte ptr [rcx], ah ; retf
0x0000000000410b5e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040f9f5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000046fb5f : xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x000000000046a024 : xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf -0x7cb8
0x0000000000463270 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004581d2 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004bddd0 : xor byte ptr [rdx - 0xc], al ; call qword ptr [rdx]
0x00000000004a2a40 : xor byte ptr [rdx - 8], dh ; call rax
0x00000000004c14df : xor byte ptr [rdx], al ; int 0xa
0x00000000004c0d1f : xor byte ptr [rdx], al ; ret
0x000000000042dbff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004650cc : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042556e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e0fa : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004b9cbe : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b7f9f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4b7f4f
0x00000000004c8029 : xor ch, bh ; call rsi
0x000000000043f84c : xor ch, bl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000425c80 : xor cl, 0x42 ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000046574b : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000412b05 : xor cl, byte ptr [rax + 0x63] ; jg 0x412b81 ; xor eax, eax ; syscall
0x000000000041c893 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000472876 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047ccbf : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000049b99e : xor cl, byte ptr [rax] ; jne 0x49b9c3 ; mov rax, qword ptr [rax] ; ret
0x0000000000440452 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004a2d78 : xor dl, ah ; clc ; call qword ptr [rax]
0x000000000047659e : xor dl, dh ; jmp r11
0x00000000004766b0 : xor dl, dh ; ret
0x000000000040dc36 : xor dword ptr [rax + 0xba], edi ; syscall
0x0000000000420285 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004b8f56 : xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x000000000041d41a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000049b9fe : xor dword ptr [rax], ecx ; jne 0x49ba26 ; mov qword ptr [rax], rdx ; ret
0x000000000046a567 : xor dword ptr [rbp + rdx*4 - 3], 0xffffffff ; ret
0x000000000043e967 : xor dword ptr [rcx + rdx*2], 0 ; ret
0x000000000040eedf : xor dword ptr [rdx], ecx ; add byte ptr [rax + 0x63], cl ; retf -0x76b4
0x00000000004408f3 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000046914c : xor dword ptr [rsi], esp ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00000000004690ee : xor dword ptr [rsi], esp ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469107
0x000000000040eede : xor dword ptr ss:[rdx], ecx ; add byte ptr [rax + 0x63], cl ; retf -0x76b4
0x000000000049d8a9 : xor eax, 0x22ee22 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049d751 : xor eax, 0x22ef7a ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000048dca9 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000468ca6 : xor eax, 0xf480026 ; retf -0x76b8
0x000000000040ea6f : xor eax, dword ptr [0x30] ; call rax
0x0000000000400a6d : xor eax, eax ; add rsp, 0x10 ; pop rbp ; ret
0x000000000049c54d : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000477e67 : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000477f3f : xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000473f8a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451329 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047771a : xor eax, eax ; call 0x473338
0x00000000004648f7 : xor eax, eax ; call rbx
0x000000000046a50b : xor eax, eax ; cmp rdi, rdx ; ja 0x46a540 ; ret
0x0000000000441db7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000442155 : xor eax, eax ; leave ; ret
0x000000000046b358 : xor eax, eax ; mov edx, 1 ; jmp 0x46b334
0x0000000000462839 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000043fe2b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004420cf : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041e16d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047ac48 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ec7d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422e6c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041231c : xor eax, eax ; pop rbx ; ret
0x00000000004015c0 : xor eax, eax ; ret
0x000000000042db1e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000412b0a : xor eax, eax ; syscall
0x000000000043d9f8 : xor eax, eax ; test dh, 0xf0 ; je 0x43d9cb ; movzx eax, dl ; pop rbx ; ret
0x000000000046a890 : xor eax, eax ; test r11b, r11b ; je 0x46a889 ; ret
0x0000000000413310 : xor eax, eax ; test rdx, rdx ; jne 0x413327 ; ret
0x00000000004671c3 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000473828 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e184 : xor ecx, dword ptr [rax + 0x29] ; retf -0x3eb8
0x000000000046a03d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000447741 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000424f29 : xor ecx, dword ptr [rax - 0x77] ; retf -0x76b8
0x0000000000465bd5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045f9bb : xor ecx, dword ptr [rbx] ; jmp rax
0x00000000004011dc : xor ecx, dword ptr [rcx] ; add byte ptr [rax + 2], dil ; syscall
0x000000000044e802 : xor ecx, eax ; ret 0x4809
0x0000000000400d00 : xor edi, edi ; mov eax, edx ; syscall
0x000000000040ea27 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000444183 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000044391c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44390c
0x0000000000459b93 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047a1e9 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a05e : xor edx, edx ; jmp 0x46a028
0x0000000000473594 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000415409 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000417a34 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004878e3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000004402c1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000043e17c : xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403899 : xor esi, esi ; mov eax, ecx ; syscall
0x000000000044c1de : xor esi, esi ; mov edi, 0x4a5788 ; mov eax, ecx ; syscall
0x00000000004016d5 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047a479 : xor esi, esi ; mov edi, dword ptr [rip + 0x251ec3] ; jmp rax
0x000000000043f511 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000004402c3 : xor esi, esi ; mov rbx, rax ; call rax
0x00000000004402e8 : xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000044030d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440331 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440351 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004a2c08 : xor esp, eax ; clc ; call rcx
0x00000000004648f6 : xor r8d, r8d ; call rbx
0x000000000040ea6e : xor rax, qword ptr [0x30] ; call rax
0x000000000040ea6d : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004255ef : xor rax, rax ; ret
0x000000000040ea26 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040ea25 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 11555
